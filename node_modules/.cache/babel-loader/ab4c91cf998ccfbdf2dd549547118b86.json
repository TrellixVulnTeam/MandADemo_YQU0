{"ast":null,"code":"import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\n\nvar LooksAhead = function () {\n  function LooksAhead() {}\n\n  LooksAhead.prototype.initLooksAhead = function (config) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\") ? config.dynamicTokensEnabled : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n    this.maxLookahead = has(config, \"maxLookahead\") ? config.maxLookahead : DEFAULT_PARSER_CONFIG.maxLookahead;\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n    this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : []; // Performance optimization on newer engines that support ES6 Map\n    // For larger Maps this is slightly faster than using a plain object (array in our case).\n\n    /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n\n    if (isES2015MapSupported()) {\n      this.getLaFuncFromCache = this.getLaFuncFromMap;\n      this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n    } else {\n      this.getLaFuncFromCache = this.getLaFuncFromObj;\n      this.setLaFuncCache = this.setLaFuncUsingObj;\n    }\n  };\n\n  LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n    var _this = this;\n\n    forEach(rules, function (currRule) {\n      _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n        var _a = collectMethods(currRule),\n            alternation = _a.alternation,\n            repetition = _a.repetition,\n            option = _a.option,\n            repetitionMandatory = _a.repetitionMandatory,\n            repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator,\n            repetitionWithSeparator = _a.repetitionWithSeparator;\n\n        forEach(alternation, function (currProd) {\n          var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n\n          _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n            var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n\n            _this.setLaFuncCache(key, laFunc);\n          });\n        });\n        forEach(repetition, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(option, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatory, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatoryWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n      });\n    });\n  };\n\n  LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n    var _this = this;\n\n    this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n      var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n      var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n\n      _this.setLaFuncCache(key, laFunc);\n    });\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n    return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n  }; // this actually returns a number, but it is always used as a string (object prop key)\n\n\n  LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n    var currRuleShortName = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.getLaFuncFromCache = function (key) {\n    return undefined;\n  };\n\n  LooksAhead.prototype.getLaFuncFromMap = function (key) {\n    return this.lookAheadFuncsCache.get(key);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n\n  LooksAhead.prototype.getLaFuncFromObj = function (key) {\n    return this.lookAheadFuncsCache[key];\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.setLaFuncCache = function (key, value) {};\n\n  LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n    this.lookAheadFuncsCache.set(key, value);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n\n  LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n    this.lookAheadFuncsCache[key] = value;\n  };\n\n  return LooksAhead;\n}();\n\nexport { LooksAhead };","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/parse/parser/traits/looksahead.js"],"names":["buildAlternativesLookAheadFunc","buildLookaheadFuncForOptionalProd","buildLookaheadFuncForOr","buildSingleAlternativeLookaheadFunction","PROD_TYPE","forEach","has","isES2015MapSupported","DEFAULT_PARSER_CONFIG","AT_LEAST_ONE_IDX","AT_LEAST_ONE_SEP_IDX","getKeyForAutomaticLookahead","MANY_IDX","MANY_SEP_IDX","OPTION_IDX","OR_IDX","collectMethods","getProductionDslName","LooksAhead","prototype","initLooksAhead","config","dynamicTokensEnabled","maxLookahead","lookAheadFuncsCache","Map","getLaFuncFromCache","getLaFuncFromMap","setLaFuncCache","setLaFuncCacheUsingMap","getLaFuncFromObj","setLaFuncUsingObj","preComputeLookaheadFunctions","rules","_this","currRule","TRACE_INIT","name","_a","alternation","repetition","option","repetitionMandatory","repetitionMandatoryWithSeparator","repetitionWithSeparator","currProd","prodIdx","idx","laFunc","hasPredicates","lookAheadBuilderForAlternatives","key","fullRuleNameToShort","computeLookaheadFunc","REPETITION","OPTION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","rule","prodOccurrence","prodKey","prodType","prodMaxLookahead","dslMethodName","lookAheadBuilderForOptional","alt","tokenMatcher","alts","dslMethodIdx","occurrence","currRuleShortName","getLastExplicitRuleShortName","undefined","get","value","set"],"mappings":"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","sourcesContent":["import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (isES2015MapSupported()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n        var _this = this;\n        forEach(rules, function (currRule) {\n            _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n                var _a = collectMethods(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;\n                forEach(alternation, function (currProd) {\n                    var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n                        var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n                        var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        _this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    };\n    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        var _this = this;\n        this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n            var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            _this.setLaFuncCache(key, laFunc);\n        });\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\nexport { LooksAhead };\n//# sourceMappingURL=looksahead.js.map"]},"metadata":{},"sourceType":"module"}