{"ast":null,"code":"import { VERSION } from \"../version\";\nexport function createSyntaxDiagramsCode(grammar, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.resourceBase,\n      resourceBase = _c === void 0 ? \"https://unpkg.com/chevrotain@\" + VERSION + \"/diagrams/\" : _c,\n      _d = _b.css,\n      css = _d === void 0 ? \"https://unpkg.com/chevrotain@\" + VERSION + \"/diagrams/diagrams.css\" : _d;\n\n  var header = \"\\n<!-- This is a generated file -->\\n<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<style>\\n  body {\\n    background-color: hsl(30, 20%, 95%)\\n  }\\n</style>\\n\\n\";\n  var cssHtml = \"\\n<link rel='stylesheet' href='\" + css + \"'>\\n\";\n  var scripts = \"\\n<script src='\" + resourceBase + \"vendor/railroad-diagrams.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_builder.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_behavior.js'></script>\\n<script src='\" + resourceBase + \"src/main.js'></script>\\n\";\n  var diagramsDiv = \"\\n<div id=\\\"diagrams\\\" align=\\\"center\\\"></div>    \\n\";\n  var serializedGrammar = \"\\n<script>\\n    window.serializedGrammar = \" + JSON.stringify(grammar, null, \"  \") + \";\\n</script>\\n\";\n  var initLogic = \"\\n<script>\\n    var diagramsDiv = document.getElementById(\\\"diagrams\\\");\\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\\n</script>\\n\";\n  return header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic;\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/diagrams/render_public.js"],"names":["VERSION","createSyntaxDiagramsCode","grammar","_a","_b","_c","resourceBase","_d","css","header","cssHtml","scripts","diagramsDiv","serializedGrammar","JSON","stringify","initLogic"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,OAAO,SAASC,wBAAT,CAAkCC,OAAlC,EAA2CC,EAA3C,EAA+C;AAClD,MAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;AAAA,MAAkCE,EAAE,GAAGD,EAAE,CAACE,YAA1C;AAAA,MAAwDA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,kCAAkCL,OAAlC,GAA4C,YAA5D,GAA2EK,EAAlJ;AAAA,MAAsJE,EAAE,GAAGH,EAAE,CAACI,GAA9J;AAAA,MAAmKA,GAAG,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,kCAAkCP,OAAlC,GAA4C,wBAA5D,GAAuFO,EAAhQ;;AACA,MAAIE,MAAM,GAAG,+JAAb;AACA,MAAIC,OAAO,GAAG,oCAAoCF,GAApC,GAA0C,MAAxD;AACA,MAAIG,OAAO,GAAG,oBAAoBL,YAApB,GAAmC,uDAAnC,GAA6FA,YAA7F,GAA4G,mDAA5G,GAAkKA,YAAlK,GAAiL,oDAAjL,GAAwOA,YAAxO,GAAuP,0BAArQ;AACA,MAAIM,WAAW,GAAG,sDAAlB;AACA,MAAIC,iBAAiB,GAAG,gDAAgDC,IAAI,CAACC,SAAL,CAAeb,OAAf,EAAwB,IAAxB,EAA8B,IAA9B,CAAhD,GAAsF,gBAA9G;AACA,MAAIc,SAAS,GAAG,oKAAhB;AACA,SAAQP,MAAM,GAAGC,OAAT,GAAmBC,OAAnB,GAA6BC,WAA7B,GAA2CC,iBAA3C,GAA+DG,SAAvE;AACH","sourcesContent":["import { VERSION } from \"../version\";\nexport function createSyntaxDiagramsCode(grammar, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.resourceBase, resourceBase = _c === void 0 ? \"https://unpkg.com/chevrotain@\" + VERSION + \"/diagrams/\" : _c, _d = _b.css, css = _d === void 0 ? \"https://unpkg.com/chevrotain@\" + VERSION + \"/diagrams/diagrams.css\" : _d;\n    var header = \"\\n<!-- This is a generated file -->\\n<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<style>\\n  body {\\n    background-color: hsl(30, 20%, 95%)\\n  }\\n</style>\\n\\n\";\n    var cssHtml = \"\\n<link rel='stylesheet' href='\" + css + \"'>\\n\";\n    var scripts = \"\\n<script src='\" + resourceBase + \"vendor/railroad-diagrams.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_builder.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_behavior.js'></script>\\n<script src='\" + resourceBase + \"src/main.js'></script>\\n\";\n    var diagramsDiv = \"\\n<div id=\\\"diagrams\\\" align=\\\"center\\\"></div>    \\n\";\n    var serializedGrammar = \"\\n<script>\\n    window.serializedGrammar = \" + JSON.stringify(grammar, null, \"  \") + \";\\n</script>\\n\";\n    var initLogic = \"\\n<script>\\n    var diagramsDiv = document.getElementById(\\\"diagrams\\\");\\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\\n</script>\\n\";\n    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);\n}\n//# sourceMappingURL=render_public.js.map"]},"metadata":{},"sourceType":"module"}