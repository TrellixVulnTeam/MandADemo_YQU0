{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { CellError, ErrorType, simpleCellAddress } from './Cell';\nimport { ErrorMessage } from './error-message';\nimport { AstNodeType } from './parser';\nexport var MatrixSize = function MatrixSize(width, height) {\n  _classCallCheck(this, MatrixSize);\n\n  this.width = width;\n  this.height = height;\n\n  if (width <= 0 || height <= 0) {\n    throw Error('Incorrect matrix size');\n  }\n};\nexport function matrixSizeForTranspose(inputSize) {\n  return new MatrixSize(inputSize.height, inputSize.width);\n}\nexport function matrixSizeForMultiplication(leftMatrixSize, rightMatrixSize) {\n  return new MatrixSize(rightMatrixSize.width, leftMatrixSize.height);\n}\nexport function matrixSizeForPoolFunction(inputMatrix, windowSize, stride) {\n  return new MatrixSize(1 + (inputMatrix.width - windowSize) / stride, 1 + (inputMatrix.height - windowSize) / stride);\n}\nexport function checkMatrixSize(ast, formulaAddress) {\n  if (ast.type === AstNodeType.FUNCTION_CALL) {\n    switch (ast.procedureName) {\n      case 'MMULT':\n        {\n          if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n          }\n\n          if (ast.args.some(function (astIt) {\n            return astIt.type === AstNodeType.EMPTY;\n          })) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n          }\n\n          var left = checkMatrixSize(ast.args[0], formulaAddress);\n          var right = checkMatrixSize(ast.args[1], formulaAddress);\n\n          if (left instanceof CellError) {\n            return left;\n          } else if (right instanceof CellError) {\n            return right;\n          } else if (left.width !== right.height) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.MatrixDimensions);\n          } else {\n            return matrixSizeForMultiplication(left, right);\n          }\n        }\n\n      case 'MEDIANPOOL':\n      case 'MAXPOOL':\n        {\n          if (ast.args.length < 2 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n          }\n\n          if (ast.args.some(function (astIt) {\n            return astIt.type === AstNodeType.EMPTY;\n          })) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n          }\n\n          var matrix = checkMatrixSize(ast.args[0], formulaAddress);\n          var windowArg = ast.args[1];\n\n          if (matrix instanceof CellError) {\n            return matrix;\n          } else if (windowArg.type !== AstNodeType.NUMBER) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n          }\n\n          var window = windowArg.value;\n          var stride = windowArg.value;\n\n          if (ast.args.length === 3) {\n            var strideArg = ast.args[2];\n\n            if (strideArg.type === AstNodeType.NUMBER) {\n              stride = strideArg.value;\n            } else {\n              return new CellError(ErrorType.VALUE, ErrorMessage.MatrixParams);\n            }\n          }\n\n          if (window > matrix.width || window > matrix.height || stride > window || (matrix.width - window) % stride !== 0 || (matrix.height - window) % stride !== 0) {\n            return new CellError(ErrorType.VALUE); //TODO\n          }\n\n          return matrixSizeForPoolFunction(matrix, window, stride);\n        }\n\n      case 'TRANSPOSE':\n        {\n          if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n          }\n\n          if (ast.args[0].type === AstNodeType.EMPTY) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n          }\n\n          var size = checkMatrixSize(ast.args[0], formulaAddress);\n          return size instanceof CellError ? size : matrixSizeForTranspose(size);\n        }\n\n      default:\n        {\n          return new CellError(ErrorType.VALUE, ErrorMessage.MatrixFunction);\n        }\n    }\n  } else if (ast.type === AstNodeType.CELL_RANGE) {\n    var range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n    return {\n      width: range.width(),\n      height: range.height()\n    };\n  } else if (ast.type === AstNodeType.NUMBER || ast.type === AstNodeType.CELL_REFERENCE) {\n    return {\n      width: 1,\n      height: 1\n    };\n  } else {\n    return new CellError(ErrorType.VALUE); //TODO\n  }\n}\nexport var NotComputedMatrix = /*#__PURE__*/function () {\n  function NotComputedMatrix(size) {\n    _classCallCheck(this, NotComputedMatrix);\n\n    this.size = size;\n  }\n\n  _createClass(NotComputedMatrix, [{\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"get\",\n    value: function get(col, row) {\n      throw Error('Matrix not computed yet.');\n    }\n  }]);\n\n  return NotComputedMatrix;\n}();\nexport var Matrix = /*#__PURE__*/function () {\n  function Matrix(matrix) {\n    _classCallCheck(this, Matrix);\n\n    this.size = new MatrixSize(matrix.length > 0 ? matrix[0].length : 0, matrix.length);\n    this.matrix = matrix;\n  }\n\n  _createClass(Matrix, [{\n    key: \"addRows\",\n    value: function addRows(aboveRow, numberOfRows) {\n      var _this$matrix;\n\n      (_this$matrix = this.matrix).splice.apply(_this$matrix, [aboveRow, 0].concat(_toConsumableArray(this.zeroArrays(numberOfRows, this.width()))));\n\n      this.size.height += numberOfRows;\n    }\n  }, {\n    key: \"addColumns\",\n    value: function addColumns(aboveColumn, numberOfColumns) {\n      for (var i = 0; i < this.height(); i++) {\n        var _this$matrix$i;\n\n        (_this$matrix$i = this.matrix[i]).splice.apply(_this$matrix$i, [aboveColumn, 0].concat(_toConsumableArray(new Array(numberOfColumns).fill(0))));\n      }\n\n      this.size.width += numberOfColumns;\n    }\n  }, {\n    key: \"removeRows\",\n    value: function removeRows(startRow, endRow) {\n      if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      var numberOfRows = endRow - startRow + 1;\n      this.matrix.splice(startRow, numberOfRows);\n      this.size.height -= numberOfRows;\n    }\n  }, {\n    key: \"removeColumns\",\n    value: function removeColumns(leftmostColumn, rightmostColumn) {\n      if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      var numberOfColumns = rightmostColumn - leftmostColumn + 1;\n\n      var _iterator = _createForOfIteratorHelper(this.matrix),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n          row.splice(leftmostColumn, numberOfColumns);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.size.width -= numberOfColumns;\n    }\n  }, {\n    key: \"zeroArrays\",\n    value: function zeroArrays(count, size) {\n      var result = [];\n\n      for (var i = 0; i < count; ++i) {\n        result.push(new Array(size).fill(0));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"get\",\n    value: function get(col, row) {\n      if (this.outOfBound(col, row)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      return this.matrix[row][col];\n    }\n  }, {\n    key: \"set\",\n    value: function set(col, row, value) {\n      if (this.outOfBound(col, row)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      this.matrix[row][col] = value;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      return this.matrix;\n    }\n  }, {\n    key: \"generateValues\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function generateValues(leftCorner) {\n      var row, col;\n      return _regeneratorRuntime.wrap(function generateValues$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              row = 0;\n\n            case 1:\n              if (!(row < this.size.height)) {\n                _context.next = 12;\n                break;\n              }\n\n              col = 0;\n\n            case 3:\n              if (!(col < this.size.width)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return [this.matrix[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\n\n            case 6:\n              ++col;\n              _context.next = 3;\n              break;\n\n            case 9:\n              ++row;\n              _context.next = 1;\n              break;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, generateValues, this);\n    })\n  }, {\n    key: \"outOfBound\",\n    value: function outOfBound(col, row) {\n      return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\n    }\n  }]);\n\n  return Matrix;\n}();\nexport var ErroredMatrix = /*#__PURE__*/function () {\n  function ErroredMatrix(error, size) {\n    _classCallCheck(this, ErroredMatrix);\n\n    this.error = error;\n    this.size = size;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  _createClass(ErroredMatrix, [{\n    key: \"get\",\n    value: function get(col, row) {\n      return this.error;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    }\n  }]);\n\n  return ErroredMatrix;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/Matrix.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","AbsoluteCellRange","CellError","ErrorType","simpleCellAddress","ErrorMessage","AstNodeType","MatrixSize","width","height","Error","matrixSizeForTranspose","inputSize","matrixSizeForMultiplication","leftMatrixSize","rightMatrixSize","matrixSizeForPoolFunction","inputMatrix","windowSize","stride","checkMatrixSize","ast","formulaAddress","type","FUNCTION_CALL","procedureName","args","NA","WrongArgNumber","some","astIt","EMPTY","NUM","EmptyArg","left","right","VALUE","MatrixDimensions","matrix","windowArg","NUMBER","NumberExpected","window","strideArg","MatrixParams","size","MatrixFunction","CELL_RANGE","range","fromCellRange","CELL_REFERENCE","NotComputedMatrix","get","col","row","Matrix","addRows","aboveRow","numberOfRows","_this$matrix","splice","apply","concat","zeroArrays","addColumns","aboveColumn","numberOfColumns","_this$matrix$i","fill","removeRows","startRow","endRow","outOfBound","removeColumns","leftmostColumn","rightmostColumn","_iterator","_step","count","result","push","set","raw","mark","generateValues","leftCorner","wrap","generateValues$","_context","prev","sheet","stop","ErroredMatrix","error"],"mappings":"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","sourcesContent":["import \"regenerator-runtime/runtime.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { CellError, ErrorType, simpleCellAddress } from './Cell';\nimport { ErrorMessage } from './error-message';\nimport { AstNodeType } from './parser';\nexport var MatrixSize = function MatrixSize(width, height) {\n  _classCallCheck(this, MatrixSize);\n\n  this.width = width;\n  this.height = height;\n\n  if (width <= 0 || height <= 0) {\n    throw Error('Incorrect matrix size');\n  }\n};\nexport function matrixSizeForTranspose(inputSize) {\n  return new MatrixSize(inputSize.height, inputSize.width);\n}\nexport function matrixSizeForMultiplication(leftMatrixSize, rightMatrixSize) {\n  return new MatrixSize(rightMatrixSize.width, leftMatrixSize.height);\n}\nexport function matrixSizeForPoolFunction(inputMatrix, windowSize, stride) {\n  return new MatrixSize(1 + (inputMatrix.width - windowSize) / stride, 1 + (inputMatrix.height - windowSize) / stride);\n}\nexport function checkMatrixSize(ast, formulaAddress) {\n  if (ast.type === AstNodeType.FUNCTION_CALL) {\n    switch (ast.procedureName) {\n      case 'MMULT':\n        {\n          if (ast.args.length !== 2) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n          }\n\n          if (ast.args.some(function (astIt) {\n            return astIt.type === AstNodeType.EMPTY;\n          })) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n          }\n\n          var left = checkMatrixSize(ast.args[0], formulaAddress);\n          var right = checkMatrixSize(ast.args[1], formulaAddress);\n\n          if (left instanceof CellError) {\n            return left;\n          } else if (right instanceof CellError) {\n            return right;\n          } else if (left.width !== right.height) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.MatrixDimensions);\n          } else {\n            return matrixSizeForMultiplication(left, right);\n          }\n        }\n\n      case 'MEDIANPOOL':\n      case 'MAXPOOL':\n        {\n          if (ast.args.length < 2 || ast.args.length > 3) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n          }\n\n          if (ast.args.some(function (astIt) {\n            return astIt.type === AstNodeType.EMPTY;\n          })) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n          }\n\n          var matrix = checkMatrixSize(ast.args[0], formulaAddress);\n          var windowArg = ast.args[1];\n\n          if (matrix instanceof CellError) {\n            return matrix;\n          } else if (windowArg.type !== AstNodeType.NUMBER) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n          }\n\n          var window = windowArg.value;\n          var stride = windowArg.value;\n\n          if (ast.args.length === 3) {\n            var strideArg = ast.args[2];\n\n            if (strideArg.type === AstNodeType.NUMBER) {\n              stride = strideArg.value;\n            } else {\n              return new CellError(ErrorType.VALUE, ErrorMessage.MatrixParams);\n            }\n          }\n\n          if (window > matrix.width || window > matrix.height || stride > window || (matrix.width - window) % stride !== 0 || (matrix.height - window) % stride !== 0) {\n            return new CellError(ErrorType.VALUE); //TODO\n          }\n\n          return matrixSizeForPoolFunction(matrix, window, stride);\n        }\n\n      case 'TRANSPOSE':\n        {\n          if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n          }\n\n          if (ast.args[0].type === AstNodeType.EMPTY) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n          }\n\n          var size = checkMatrixSize(ast.args[0], formulaAddress);\n          return size instanceof CellError ? size : matrixSizeForTranspose(size);\n        }\n\n      default:\n        {\n          return new CellError(ErrorType.VALUE, ErrorMessage.MatrixFunction);\n        }\n    }\n  } else if (ast.type === AstNodeType.CELL_RANGE) {\n    var range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n    return {\n      width: range.width(),\n      height: range.height()\n    };\n  } else if (ast.type === AstNodeType.NUMBER || ast.type === AstNodeType.CELL_REFERENCE) {\n    return {\n      width: 1,\n      height: 1\n    };\n  } else {\n    return new CellError(ErrorType.VALUE); //TODO\n  }\n}\nexport var NotComputedMatrix = /*#__PURE__*/function () {\n  function NotComputedMatrix(size) {\n    _classCallCheck(this, NotComputedMatrix);\n\n    this.size = size;\n  }\n\n  _createClass(NotComputedMatrix, [{\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"get\",\n    value: function get(col, row) {\n      throw Error('Matrix not computed yet.');\n    }\n  }]);\n\n  return NotComputedMatrix;\n}();\nexport var Matrix = /*#__PURE__*/function () {\n  function Matrix(matrix) {\n    _classCallCheck(this, Matrix);\n\n    this.size = new MatrixSize(matrix.length > 0 ? matrix[0].length : 0, matrix.length);\n    this.matrix = matrix;\n  }\n\n  _createClass(Matrix, [{\n    key: \"addRows\",\n    value: function addRows(aboveRow, numberOfRows) {\n      var _this$matrix;\n\n      (_this$matrix = this.matrix).splice.apply(_this$matrix, [aboveRow, 0].concat(_toConsumableArray(this.zeroArrays(numberOfRows, this.width()))));\n\n      this.size.height += numberOfRows;\n    }\n  }, {\n    key: \"addColumns\",\n    value: function addColumns(aboveColumn, numberOfColumns) {\n      for (var i = 0; i < this.height(); i++) {\n        var _this$matrix$i;\n\n        (_this$matrix$i = this.matrix[i]).splice.apply(_this$matrix$i, [aboveColumn, 0].concat(_toConsumableArray(new Array(numberOfColumns).fill(0))));\n      }\n\n      this.size.width += numberOfColumns;\n    }\n  }, {\n    key: \"removeRows\",\n    value: function removeRows(startRow, endRow) {\n      if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      var numberOfRows = endRow - startRow + 1;\n      this.matrix.splice(startRow, numberOfRows);\n      this.size.height -= numberOfRows;\n    }\n  }, {\n    key: \"removeColumns\",\n    value: function removeColumns(leftmostColumn, rightmostColumn) {\n      if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      var numberOfColumns = rightmostColumn - leftmostColumn + 1;\n\n      var _iterator = _createForOfIteratorHelper(this.matrix),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var row = _step.value;\n          row.splice(leftmostColumn, numberOfColumns);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.size.width -= numberOfColumns;\n    }\n  }, {\n    key: \"zeroArrays\",\n    value: function zeroArrays(count, size) {\n      var result = [];\n\n      for (var i = 0; i < count; ++i) {\n        result.push(new Array(size).fill(0));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"get\",\n    value: function get(col, row) {\n      if (this.outOfBound(col, row)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      return this.matrix[row][col];\n    }\n  }, {\n    key: \"set\",\n    value: function set(col, row, value) {\n      if (this.outOfBound(col, row)) {\n        throw Error('Matrix index out of bound');\n      }\n\n      this.matrix[row][col] = value;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      return this.matrix;\n    }\n  }, {\n    key: \"generateValues\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function generateValues(leftCorner) {\n      var row, col;\n      return regeneratorRuntime.wrap(function generateValues$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              row = 0;\n\n            case 1:\n              if (!(row < this.size.height)) {\n                _context.next = 12;\n                break;\n              }\n\n              col = 0;\n\n            case 3:\n              if (!(col < this.size.width)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return [this.matrix[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\n\n            case 6:\n              ++col;\n              _context.next = 3;\n              break;\n\n            case 9:\n              ++row;\n              _context.next = 1;\n              break;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, generateValues, this);\n    })\n  }, {\n    key: \"outOfBound\",\n    value: function outOfBound(col, row) {\n      return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\n    }\n  }]);\n\n  return Matrix;\n}();\nexport var ErroredMatrix = /*#__PURE__*/function () {\n  function ErroredMatrix(error, size) {\n    _classCallCheck(this, ErroredMatrix);\n\n    this.error = error;\n    this.size = size;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  _createClass(ErroredMatrix, [{\n    key: \"get\",\n    value: function get(col, row) {\n      return this.error;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    }\n  }]);\n\n  return ErroredMatrix;\n}();"]},"metadata":{},"sourceType":"module"}