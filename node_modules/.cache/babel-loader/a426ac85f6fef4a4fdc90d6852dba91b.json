{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport assert from 'assert';\nimport { AbsoluteCellRange, DIFFERENT_SHEETS_ERROR } from '../../AbsoluteCellRange';\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { coerceBooleanToNumber } from '../ArithmeticHelper';\nimport { EmptyValue, getRawValue, isExtendedNumber } from '../InterpreterValue';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n\nfunction identityMap(arg) {\n  return arg;\n}\n\nfunction zeroForInfinite(value) {\n  if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\n    return 0;\n  } else {\n    return value;\n  }\n}\n\nvar MomentsAggregate = /*#__PURE__*/function () {\n  function MomentsAggregate(sumsq, sum, count) {\n    _classCallCheck(this, MomentsAggregate);\n\n    this.sumsq = sumsq;\n    this.sum = sum;\n    this.count = count;\n  }\n\n  _createClass(MomentsAggregate, [{\n    key: \"compose\",\n    value: function compose(other) {\n      return new MomentsAggregate(this.sumsq + other.sumsq, this.sum + other.sum, this.count + other.count);\n    }\n  }, {\n    key: \"averageValue\",\n    value: function averageValue() {\n      if (this.count > 0) {\n        return this.sum / this.count;\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"varSValue\",\n    value: function varSValue() {\n      if (this.count > 1) {\n        return (this.sumsq - this.sum * this.sum / this.count) / (this.count - 1);\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"varPValue\",\n    value: function varPValue() {\n      if (this.count > 0) {\n        return (this.sumsq - this.sum * this.sum / this.count) / this.count;\n      } else {\n        return undefined;\n      }\n    }\n  }], [{\n    key: \"single\",\n    value: function single(arg) {\n      return new MomentsAggregate(arg * arg, arg, 1);\n    }\n  }]);\n\n  return MomentsAggregate;\n}();\n\nMomentsAggregate.empty = new MomentsAggregate(0, 0, 0);\nexport var NumericAggregationPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(NumericAggregationPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(NumericAggregationPlugin);\n\n  function NumericAggregationPlugin() {\n    var _this;\n\n    _classCallCheck(this, NumericAggregationPlugin);\n\n    _this = _super.apply(this, arguments);\n\n    _this.addWithEpsilonRaw = function (left, right) {\n      return _this.interpreter.arithmeticHelper.addWithEpsilonRaw(left, right);\n    };\n\n    return _this;\n  }\n  /**\n   * Corresponds to SUM(Number1, Number2, ...).\n   *\n   * Returns a sum of given numbers.\n   *\n   * @param ast\n   * @param formulaAddress\n   */\n\n\n  _createClass(NumericAggregationPlugin, [{\n    key: \"sum\",\n    value: function sum(ast, formulaAddress) {\n      return this.doSum(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"sumsq\",\n    value: function sumsq(ast, formulaAddress) {\n      return this.reduce(ast.args, formulaAddress, 0, 'SUMSQ', this.addWithEpsilonRaw, function (arg) {\n        return Math.pow(getRawValue(arg), 2);\n      }, strictlyNumbers);\n    }\n    /**\n     * Corresponds to MAX(Number1, Number2, ...).\n     *\n     * Returns a max of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n\n  }, {\n    key: \"max\",\n    value: function max(ast, formulaAddress) {\n      return this.doMax(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"maxa\",\n    value: function maxa(ast, formulaAddress) {\n      var value = this.reduce(ast.args, formulaAddress, Number.NEGATIVE_INFINITY, 'MAXA', function (left, right) {\n        return Math.max(left, right);\n      }, getRawValue, numbersBooleans);\n      return zeroForInfinite(value);\n    }\n    /**\n     * Corresponds to MIN(Number1, Number2, ...).\n     *\n     * Returns a min of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n\n  }, {\n    key: \"min\",\n    value: function min(ast, formulaAddress) {\n      return this.doMin(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"mina\",\n    value: function mina(ast, formulaAddress) {\n      var value = this.reduce(ast.args, formulaAddress, Number.POSITIVE_INFINITY, 'MINA', function (left, right) {\n        return Math.min(left, right);\n      }, getRawValue, numbersBooleans);\n      return zeroForInfinite(value);\n    }\n  }, {\n    key: \"count\",\n    value: function count(ast, formulaAddress) {\n      return this.doCount(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"counta\",\n    value: function counta(ast, formulaAddress) {\n      return this.doCounta(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"average\",\n    value: function average(ast, formulaAddress) {\n      return this.doAverage(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"averagea\",\n    value: function averagea(ast, formulaAddress) {\n      var _a;\n\n      var result = this.reduce(ast.args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE_A', function (left, right) {\n        return left.compose(right);\n      }, function (arg) {\n        return MomentsAggregate.single(getRawValue(arg));\n      }, numbersBooleans);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"vars\",\n    value: function vars(ast, formulaAddress) {\n      return this.doVarS(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"varp\",\n    value: function varp(ast, formulaAddress) {\n      return this.doVarP(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"vara\",\n    value: function vara(ast, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"varpa\",\n    value: function varpa(ast, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"stdevs\",\n    value: function stdevs(ast, formulaAddress) {\n      return this.doStdevS(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"stdevp\",\n    value: function stdevp(ast, formulaAddress) {\n      return this.doStdevP(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"stdeva\",\n    value: function stdeva(ast, formulaAddress) {\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varSValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"stdevpa\",\n    value: function stdevpa(ast, formulaAddress) {\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varPValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"product\",\n    value: function product(ast, formulaAddress) {\n      return this.doProduct(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"subtotal\",\n    value: function subtotal(ast, formulaAddress) {\n      if (ast.args.length < 1) {\n        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n      }\n\n      var functionType = this.coerceToType(this.evaluateAst(ast.args[0], formulaAddress), {\n        argumentType: ArgumentTypes.NUMBER\n      });\n      var args = ast.args.slice(1);\n\n      switch (functionType) {\n        case 1:\n        case 101:\n          return this.doAverage(args, formulaAddress);\n\n        case 2:\n        case 102:\n          return this.doCount(args, formulaAddress);\n\n        case 3:\n        case 103:\n          return this.doCounta(args, formulaAddress);\n\n        case 4:\n        case 104:\n          return this.doMax(args, formulaAddress);\n\n        case 5:\n        case 105:\n          return this.doMin(args, formulaAddress);\n\n        case 6:\n        case 106:\n          return this.doProduct(args, formulaAddress);\n\n        case 7:\n        case 107:\n          return this.doStdevS(args, formulaAddress);\n\n        case 8:\n        case 108:\n          return this.doStdevP(args, formulaAddress);\n\n        case 9:\n        case 109:\n          return this.doSum(args, formulaAddress);\n\n        case 10:\n        case 110:\n          return this.doVarS(args, formulaAddress);\n\n        case 11:\n        case 111:\n          return this.doVarP(args, formulaAddress);\n\n        default:\n          return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\n      }\n    }\n  }, {\n    key: \"reduceAggregate\",\n    value: function reduceAggregate(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE', function (left, right) {\n        return left.compose(right);\n      }, function (arg) {\n        return MomentsAggregate.single(getRawValue(arg));\n      }, strictlyNumbers);\n    }\n  }, {\n    key: \"reduceAggregateA\",\n    value: function reduceAggregateA(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE_A', function (left, right) {\n        return left.compose(right);\n      }, function (arg) {\n        return MomentsAggregate.single(getRawValue(arg));\n      }, numbersBooleans);\n    }\n  }, {\n    key: \"doAverage\",\n    value: function doAverage(args, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"doVarS\",\n    value: function doVarS(args, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"doVarP\",\n    value: function doVarP(args, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"doStdevS\",\n    value: function doStdevS(args, formulaAddress) {\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varSValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"doStdevP\",\n    value: function doStdevP(args, formulaAddress) {\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varPValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"doCount\",\n    value: function doCount(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 0, 'COUNT', function (left, right) {\n        return left + right;\n      }, getRawValue, function (arg) {\n        return isExtendedNumber(arg) ? 1 : 0;\n      });\n    }\n  }, {\n    key: \"doCounta\",\n    value: function doCounta(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 0, 'COUNTA', function (left, right) {\n        return left + right;\n      }, getRawValue, function (arg) {\n        return arg === EmptyValue ? 0 : 1;\n      });\n    }\n  }, {\n    key: \"doMax\",\n    value: function doMax(args, formulaAddress) {\n      var value = this.reduce(args, formulaAddress, Number.NEGATIVE_INFINITY, 'MAX', function (left, right) {\n        return Math.max(left, right);\n      }, getRawValue, strictlyNumbers);\n      return zeroForInfinite(value);\n    }\n  }, {\n    key: \"doMin\",\n    value: function doMin(args, formulaAddress) {\n      var value = this.reduce(args, formulaAddress, Number.POSITIVE_INFINITY, 'MAX', function (left, right) {\n        return Math.min(left, right);\n      }, getRawValue, strictlyNumbers);\n      return zeroForInfinite(value);\n    }\n  }, {\n    key: \"doSum\",\n    value: function doSum(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 0, 'SUM', this.addWithEpsilonRaw, getRawValue, strictlyNumbers);\n    }\n  }, {\n    key: \"doProduct\",\n    value: function doProduct(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 1, 'PRODUCT', function (left, right) {\n        return left * right;\n      }, getRawValue, strictlyNumbers);\n    }\n    /**\n     * Reduces procedure arguments with given reducing function\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     * @param mapFunction\n     * @param coerceFunction\n     * */\n\n  }, {\n    key: \"reduce\",\n    value: function reduce(args, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\n      var _this2 = this;\n\n      if (args.length < 1) {\n        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n      }\n\n      return args.reduce(function (acc, arg) {\n        if (acc instanceof CellError) {\n          return acc;\n        }\n\n        if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\n          return _this2.evaluateRange(arg, formulaAddress, acc, functionName, reducingFunction, mapFunction, coercionFunction);\n        }\n\n        var value;\n        value = _this2.evaluateAst(arg, formulaAddress);\n\n        if (value instanceof SimpleRangeValue) {\n          var coercedRangeValues = Array.from(value.valuesFromTopLeftCorner()).map(coercionFunction).filter(function (arg) {\n            return arg !== undefined;\n          });\n          return coercedRangeValues.map(function (arg) {\n            if (arg instanceof CellError) {\n              return arg;\n            } else {\n              return mapFunction(arg);\n            }\n          }).reduce(function (left, right) {\n            if (left instanceof CellError) {\n              return left;\n            } else if (right instanceof CellError) {\n              return right;\n            } else {\n              return reducingFunction(left, right);\n            }\n          }, acc);\n        } else if (arg.type === AstNodeType.CELL_REFERENCE) {\n          value = coercionFunction(value);\n\n          if (value === undefined) {\n            return acc;\n          }\n        } else {\n          value = _this2.coerceScalarToNumberOrError(value);\n          value = coercionFunction(value);\n\n          if (value === undefined) {\n            return acc;\n          }\n        }\n\n        if (value instanceof CellError) {\n          return value;\n        }\n\n        return reducingFunction(acc, mapFunction(value));\n      }, initialAccValue);\n    }\n    /**\n     * Performs range operation on given range\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     */\n\n  }, {\n    key: \"evaluateRange\",\n    value: function evaluateRange(ast, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\n      var range;\n\n      try {\n        range = AbsoluteCellRange.fromAst(ast, formulaAddress);\n      } catch (err) {\n        if (err.message === DIFFERENT_SHEETS_ERROR) {\n          return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n        } else {\n          throw err;\n        }\n      }\n\n      var rangeStart = range.start;\n      var rangeEnd = range.end;\n      var rangeVertex = this.dependencyGraph.getRange(rangeStart, rangeEnd);\n      assert.ok(rangeVertex, 'Range does not exists in graph');\n      var value = rangeVertex.getFunctionValue(functionName);\n\n      if (!value) {\n        var rangeValues = this.getRangeValues(functionName, range, mapFunction, coercionFunction);\n        value = rangeValues.reduce(function (arg1, arg2) {\n          if (arg1 instanceof CellError) {\n            return arg1;\n          } else if (arg2 instanceof CellError) {\n            return arg2;\n          } else {\n            return reducingFunction(arg1, arg2);\n          }\n        }, initialAccValue);\n        rangeVertex.setFunctionValue(functionName, value);\n      }\n\n      return value;\n    }\n    /**\n     * Returns list of values for given range and function name\n     *\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\n     * and values of cells that are not present in smaller range\n     *\n     * @param functionName - function name (e.g. SUM)\n     * @param range - cell range\n     */\n\n  }, {\n    key: \"getRangeValues\",\n    value: function getRangeValues(functionName, range, mapFunction, coercionFunction) {\n      var rangeResult = [];\n\n      var _this$dependencyGraph = this.dependencyGraph.rangeMapping.findSmallerRange(range),\n          smallerRangeVertex = _this$dependencyGraph.smallerRangeVertex,\n          restRange = _this$dependencyGraph.restRange;\n\n      var currentRangeVertex = this.dependencyGraph.getRange(range.start, range.end);\n      var actualRange;\n\n      if (smallerRangeVertex && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\n        var cachedValue = smallerRangeVertex.getFunctionValue(functionName);\n\n        if (cachedValue) {\n          rangeResult.push(cachedValue);\n        } else {\n          var _iterator = _createForOfIteratorHelper(smallerRangeVertex.range.addresses(this.dependencyGraph)),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var cellFromRange = _step.value;\n              var val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\n\n              if (val instanceof CellError) {\n                rangeResult.push(val);\n              } else if (val !== undefined) {\n                rangeResult.push(mapFunction(val));\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        actualRange = restRange;\n      } else {\n        actualRange = range;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(actualRange.addresses(this.dependencyGraph)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _cellFromRange = _step2.value;\n\n          var _val = coercionFunction(this.dependencyGraph.getScalarValue(_cellFromRange));\n\n          if (_val instanceof CellError) {\n            rangeResult.push(_val);\n          } else if (_val !== undefined) {\n            rangeResult.push(mapFunction(_val));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return rangeResult;\n    }\n  }]);\n\n  return NumericAggregationPlugin;\n}(FunctionPlugin);\nNumericAggregationPlugin.implementedFunctions = {\n  'SUM': {\n    method: 'sum'\n  },\n  'SUMSQ': {\n    method: 'sumsq'\n  },\n  'MAX': {\n    method: 'max'\n  },\n  'MIN': {\n    method: 'min'\n  },\n  'MAXA': {\n    method: 'maxa'\n  },\n  'MINA': {\n    method: 'mina'\n  },\n  'COUNT': {\n    method: 'count'\n  },\n  'COUNTA': {\n    method: 'counta'\n  },\n  'AVERAGE': {\n    method: 'average'\n  },\n  'AVERAGEA': {\n    method: 'averagea'\n  },\n  'PRODUCT': {\n    method: 'product'\n  },\n  'VAR.S': {\n    method: 'vars'\n  },\n  'VAR.P': {\n    method: 'varp'\n  },\n  'VARA': {\n    method: 'vara'\n  },\n  'VARPA': {\n    method: 'varpa'\n  },\n  'STDEV.S': {\n    method: 'stdevs'\n  },\n  'STDEV.P': {\n    method: 'stdevp'\n  },\n  'STDEVA': {\n    method: 'stdeva'\n  },\n  'STDEVPA': {\n    method: 'stdevpa'\n  },\n  'SUBTOTAL': {\n    method: 'subtotal'\n  }\n};\nNumericAggregationPlugin.aliases = {\n  VAR: 'VAR.S',\n  VARP: 'VAR.P',\n  STDEV: 'STDEV.S',\n  STDEVP: 'STDEV.P',\n  VARS: 'VAR.S',\n  STDEVS: 'STDEV.S'\n};\n\nfunction strictlyNumbers(arg) {\n  if (isExtendedNumber(arg) || arg instanceof CellError) {\n    return arg;\n  } else {\n    return undefined;\n  }\n}\n\nfunction numbersBooleans(arg) {\n  if (typeof arg === 'boolean') {\n    return coerceBooleanToNumber(arg);\n  } else if (isExtendedNumber(arg) || arg instanceof CellError) {\n    return arg;\n  } else if (typeof arg === 'string') {\n    return 0;\n  } else {\n    return undefined;\n  }\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/plugin/NumericAggregationPlugin.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","toString","slice","name","from","test","arr","len","arr2","_inherits","subClass","superClass","create","writable","configurable","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","defineProperty","key","_createClass","protoProps","staticProps","assert","AbsoluteCellRange","DIFFERENT_SHEETS_ERROR","CellError","ErrorType","ErrorMessage","AstNodeType","coerceBooleanToNumber","EmptyValue","getRawValue","isExtendedNumber","SimpleRangeValue","ArgumentTypes","FunctionPlugin","identityMap","arg","zeroForInfinite","Number","isFinite","MomentsAggregate","sumsq","sum","count","compose","other","averageValue","undefined","varSValue","varPValue","single","empty","NumericAggregationPlugin","_FunctionPlugin","_super","_this","addWithEpsilonRaw","left","right","interpreter","arithmeticHelper","ast","formulaAddress","doSum","args","reduce","Math","pow","strictlyNumbers","max","doMax","maxa","NEGATIVE_INFINITY","numbersBooleans","min","doMin","mina","POSITIVE_INFINITY","doCount","counta","doCounta","average","doAverage","averagea","_a","DIV_BY_ZERO","vars","doVarS","varp","doVarP","vara","reduceAggregateA","varpa","stdevs","doStdevS","stdevp","doStdevP","stdeva","val","sqrt","stdevpa","product","doProduct","subtotal","NA","WrongArgNumber","functionType","coerceToType","evaluateAst","argumentType","NUMBER","VALUE","BadMode","reduceAggregate","initialAccValue","functionName","reducingFunction","mapFunction","coercionFunction","_this2","acc","type","CELL_RANGE","COLUMN_RANGE","ROW_RANGE","evaluateRange","coercedRangeValues","valuesFromTopLeftCorner","map","filter","CELL_REFERENCE","coerceScalarToNumberOrError","range","fromAst","message","REF","RangeManySheets","rangeStart","start","rangeEnd","end","rangeVertex","dependencyGraph","getRange","ok","getFunctionValue","rangeValues","getRangeValues","arg1","arg2","setFunctionValue","rangeResult","_this$dependencyGraph","rangeMapping","findSmallerRange","smallerRangeVertex","restRange","currentRangeVertex","actualRange","existsEdge","cachedValue","push","_iterator","addresses","_step","cellFromRange","getScalarValue","_iterator2","_step2","_cellFromRange","_val","implementedFunctions","method","aliases","VAR","VARP","STDEV","STDEVP","VARS","STDEVS"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport \"core-js/modules/es.number.is-finite.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport assert from 'assert';\nimport { AbsoluteCellRange, DIFFERENT_SHEETS_ERROR } from '../../AbsoluteCellRange';\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { coerceBooleanToNumber } from '../ArithmeticHelper';\nimport { EmptyValue, getRawValue, isExtendedNumber } from '../InterpreterValue';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n\nfunction identityMap(arg) {\n  return arg;\n}\n\nfunction zeroForInfinite(value) {\n  if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\n    return 0;\n  } else {\n    return value;\n  }\n}\n\nvar MomentsAggregate = /*#__PURE__*/function () {\n  function MomentsAggregate(sumsq, sum, count) {\n    _classCallCheck(this, MomentsAggregate);\n\n    this.sumsq = sumsq;\n    this.sum = sum;\n    this.count = count;\n  }\n\n  _createClass(MomentsAggregate, [{\n    key: \"compose\",\n    value: function compose(other) {\n      return new MomentsAggregate(this.sumsq + other.sumsq, this.sum + other.sum, this.count + other.count);\n    }\n  }, {\n    key: \"averageValue\",\n    value: function averageValue() {\n      if (this.count > 0) {\n        return this.sum / this.count;\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"varSValue\",\n    value: function varSValue() {\n      if (this.count > 1) {\n        return (this.sumsq - this.sum * this.sum / this.count) / (this.count - 1);\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"varPValue\",\n    value: function varPValue() {\n      if (this.count > 0) {\n        return (this.sumsq - this.sum * this.sum / this.count) / this.count;\n      } else {\n        return undefined;\n      }\n    }\n  }], [{\n    key: \"single\",\n    value: function single(arg) {\n      return new MomentsAggregate(arg * arg, arg, 1);\n    }\n  }]);\n\n  return MomentsAggregate;\n}();\n\nMomentsAggregate.empty = new MomentsAggregate(0, 0, 0);\nexport var NumericAggregationPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(NumericAggregationPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(NumericAggregationPlugin);\n\n  function NumericAggregationPlugin() {\n    var _this;\n\n    _classCallCheck(this, NumericAggregationPlugin);\n\n    _this = _super.apply(this, arguments);\n\n    _this.addWithEpsilonRaw = function (left, right) {\n      return _this.interpreter.arithmeticHelper.addWithEpsilonRaw(left, right);\n    };\n\n    return _this;\n  }\n  /**\n   * Corresponds to SUM(Number1, Number2, ...).\n   *\n   * Returns a sum of given numbers.\n   *\n   * @param ast\n   * @param formulaAddress\n   */\n\n\n  _createClass(NumericAggregationPlugin, [{\n    key: \"sum\",\n    value: function sum(ast, formulaAddress) {\n      return this.doSum(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"sumsq\",\n    value: function sumsq(ast, formulaAddress) {\n      return this.reduce(ast.args, formulaAddress, 0, 'SUMSQ', this.addWithEpsilonRaw, function (arg) {\n        return Math.pow(getRawValue(arg), 2);\n      }, strictlyNumbers);\n    }\n    /**\n     * Corresponds to MAX(Number1, Number2, ...).\n     *\n     * Returns a max of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n\n  }, {\n    key: \"max\",\n    value: function max(ast, formulaAddress) {\n      return this.doMax(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"maxa\",\n    value: function maxa(ast, formulaAddress) {\n      var value = this.reduce(ast.args, formulaAddress, Number.NEGATIVE_INFINITY, 'MAXA', function (left, right) {\n        return Math.max(left, right);\n      }, getRawValue, numbersBooleans);\n      return zeroForInfinite(value);\n    }\n    /**\n     * Corresponds to MIN(Number1, Number2, ...).\n     *\n     * Returns a min of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n\n  }, {\n    key: \"min\",\n    value: function min(ast, formulaAddress) {\n      return this.doMin(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"mina\",\n    value: function mina(ast, formulaAddress) {\n      var value = this.reduce(ast.args, formulaAddress, Number.POSITIVE_INFINITY, 'MINA', function (left, right) {\n        return Math.min(left, right);\n      }, getRawValue, numbersBooleans);\n      return zeroForInfinite(value);\n    }\n  }, {\n    key: \"count\",\n    value: function count(ast, formulaAddress) {\n      return this.doCount(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"counta\",\n    value: function counta(ast, formulaAddress) {\n      return this.doCounta(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"average\",\n    value: function average(ast, formulaAddress) {\n      return this.doAverage(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"averagea\",\n    value: function averagea(ast, formulaAddress) {\n      var _a;\n\n      var result = this.reduce(ast.args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE_A', function (left, right) {\n        return left.compose(right);\n      }, function (arg) {\n        return MomentsAggregate.single(getRawValue(arg));\n      }, numbersBooleans);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"vars\",\n    value: function vars(ast, formulaAddress) {\n      return this.doVarS(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"varp\",\n    value: function varp(ast, formulaAddress) {\n      return this.doVarP(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"vara\",\n    value: function vara(ast, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"varpa\",\n    value: function varpa(ast, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"stdevs\",\n    value: function stdevs(ast, formulaAddress) {\n      return this.doStdevS(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"stdevp\",\n    value: function stdevp(ast, formulaAddress) {\n      return this.doStdevP(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"stdeva\",\n    value: function stdeva(ast, formulaAddress) {\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varSValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"stdevpa\",\n    value: function stdevpa(ast, formulaAddress) {\n      var result = this.reduceAggregateA(ast.args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varPValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"product\",\n    value: function product(ast, formulaAddress) {\n      return this.doProduct(ast.args, formulaAddress);\n    }\n  }, {\n    key: \"subtotal\",\n    value: function subtotal(ast, formulaAddress) {\n      if (ast.args.length < 1) {\n        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n      }\n\n      var functionType = this.coerceToType(this.evaluateAst(ast.args[0], formulaAddress), {\n        argumentType: ArgumentTypes.NUMBER\n      });\n      var args = ast.args.slice(1);\n\n      switch (functionType) {\n        case 1:\n        case 101:\n          return this.doAverage(args, formulaAddress);\n\n        case 2:\n        case 102:\n          return this.doCount(args, formulaAddress);\n\n        case 3:\n        case 103:\n          return this.doCounta(args, formulaAddress);\n\n        case 4:\n        case 104:\n          return this.doMax(args, formulaAddress);\n\n        case 5:\n        case 105:\n          return this.doMin(args, formulaAddress);\n\n        case 6:\n        case 106:\n          return this.doProduct(args, formulaAddress);\n\n        case 7:\n        case 107:\n          return this.doStdevS(args, formulaAddress);\n\n        case 8:\n        case 108:\n          return this.doStdevP(args, formulaAddress);\n\n        case 9:\n        case 109:\n          return this.doSum(args, formulaAddress);\n\n        case 10:\n        case 110:\n          return this.doVarS(args, formulaAddress);\n\n        case 11:\n        case 111:\n          return this.doVarP(args, formulaAddress);\n\n        default:\n          return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\n      }\n    }\n  }, {\n    key: \"reduceAggregate\",\n    value: function reduceAggregate(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE', function (left, right) {\n        return left.compose(right);\n      }, function (arg) {\n        return MomentsAggregate.single(getRawValue(arg));\n      }, strictlyNumbers);\n    }\n  }, {\n    key: \"reduceAggregateA\",\n    value: function reduceAggregateA(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE_A', function (left, right) {\n        return left.compose(right);\n      }, function (arg) {\n        return MomentsAggregate.single(getRawValue(arg));\n      }, numbersBooleans);\n    }\n  }, {\n    key: \"doAverage\",\n    value: function doAverage(args, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"doVarS\",\n    value: function doVarS(args, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"doVarP\",\n    value: function doVarP(args, formulaAddress) {\n      var _a;\n\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n      }\n    }\n  }, {\n    key: \"doStdevS\",\n    value: function doStdevS(args, formulaAddress) {\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varSValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"doStdevP\",\n    value: function doStdevP(args, formulaAddress) {\n      var result = this.reduceAggregate(args, formulaAddress);\n\n      if (result instanceof CellError) {\n        return result;\n      } else {\n        var val = result.varPValue();\n        return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n      }\n    }\n  }, {\n    key: \"doCount\",\n    value: function doCount(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 0, 'COUNT', function (left, right) {\n        return left + right;\n      }, getRawValue, function (arg) {\n        return isExtendedNumber(arg) ? 1 : 0;\n      });\n    }\n  }, {\n    key: \"doCounta\",\n    value: function doCounta(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 0, 'COUNTA', function (left, right) {\n        return left + right;\n      }, getRawValue, function (arg) {\n        return arg === EmptyValue ? 0 : 1;\n      });\n    }\n  }, {\n    key: \"doMax\",\n    value: function doMax(args, formulaAddress) {\n      var value = this.reduce(args, formulaAddress, Number.NEGATIVE_INFINITY, 'MAX', function (left, right) {\n        return Math.max(left, right);\n      }, getRawValue, strictlyNumbers);\n      return zeroForInfinite(value);\n    }\n  }, {\n    key: \"doMin\",\n    value: function doMin(args, formulaAddress) {\n      var value = this.reduce(args, formulaAddress, Number.POSITIVE_INFINITY, 'MAX', function (left, right) {\n        return Math.min(left, right);\n      }, getRawValue, strictlyNumbers);\n      return zeroForInfinite(value);\n    }\n  }, {\n    key: \"doSum\",\n    value: function doSum(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 0, 'SUM', this.addWithEpsilonRaw, getRawValue, strictlyNumbers);\n    }\n  }, {\n    key: \"doProduct\",\n    value: function doProduct(args, formulaAddress) {\n      return this.reduce(args, formulaAddress, 1, 'PRODUCT', function (left, right) {\n        return left * right;\n      }, getRawValue, strictlyNumbers);\n    }\n    /**\n     * Reduces procedure arguments with given reducing function\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     * @param mapFunction\n     * @param coerceFunction\n     * */\n\n  }, {\n    key: \"reduce\",\n    value: function reduce(args, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\n      var _this2 = this;\n\n      if (args.length < 1) {\n        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n      }\n\n      return args.reduce(function (acc, arg) {\n        if (acc instanceof CellError) {\n          return acc;\n        }\n\n        if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\n          return _this2.evaluateRange(arg, formulaAddress, acc, functionName, reducingFunction, mapFunction, coercionFunction);\n        }\n\n        var value;\n        value = _this2.evaluateAst(arg, formulaAddress);\n\n        if (value instanceof SimpleRangeValue) {\n          var coercedRangeValues = Array.from(value.valuesFromTopLeftCorner()).map(coercionFunction).filter(function (arg) {\n            return arg !== undefined;\n          });\n          return coercedRangeValues.map(function (arg) {\n            if (arg instanceof CellError) {\n              return arg;\n            } else {\n              return mapFunction(arg);\n            }\n          }).reduce(function (left, right) {\n            if (left instanceof CellError) {\n              return left;\n            } else if (right instanceof CellError) {\n              return right;\n            } else {\n              return reducingFunction(left, right);\n            }\n          }, acc);\n        } else if (arg.type === AstNodeType.CELL_REFERENCE) {\n          value = coercionFunction(value);\n\n          if (value === undefined) {\n            return acc;\n          }\n        } else {\n          value = _this2.coerceScalarToNumberOrError(value);\n          value = coercionFunction(value);\n\n          if (value === undefined) {\n            return acc;\n          }\n        }\n\n        if (value instanceof CellError) {\n          return value;\n        }\n\n        return reducingFunction(acc, mapFunction(value));\n      }, initialAccValue);\n    }\n    /**\n     * Performs range operation on given range\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     */\n\n  }, {\n    key: \"evaluateRange\",\n    value: function evaluateRange(ast, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\n      var range;\n\n      try {\n        range = AbsoluteCellRange.fromAst(ast, formulaAddress);\n      } catch (err) {\n        if (err.message === DIFFERENT_SHEETS_ERROR) {\n          return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n        } else {\n          throw err;\n        }\n      }\n\n      var rangeStart = range.start;\n      var rangeEnd = range.end;\n      var rangeVertex = this.dependencyGraph.getRange(rangeStart, rangeEnd);\n      assert.ok(rangeVertex, 'Range does not exists in graph');\n      var value = rangeVertex.getFunctionValue(functionName);\n\n      if (!value) {\n        var rangeValues = this.getRangeValues(functionName, range, mapFunction, coercionFunction);\n        value = rangeValues.reduce(function (arg1, arg2) {\n          if (arg1 instanceof CellError) {\n            return arg1;\n          } else if (arg2 instanceof CellError) {\n            return arg2;\n          } else {\n            return reducingFunction(arg1, arg2);\n          }\n        }, initialAccValue);\n        rangeVertex.setFunctionValue(functionName, value);\n      }\n\n      return value;\n    }\n    /**\n     * Returns list of values for given range and function name\n     *\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\n     * and values of cells that are not present in smaller range\n     *\n     * @param functionName - function name (e.g. SUM)\n     * @param range - cell range\n     */\n\n  }, {\n    key: \"getRangeValues\",\n    value: function getRangeValues(functionName, range, mapFunction, coercionFunction) {\n      var rangeResult = [];\n\n      var _this$dependencyGraph = this.dependencyGraph.rangeMapping.findSmallerRange(range),\n          smallerRangeVertex = _this$dependencyGraph.smallerRangeVertex,\n          restRange = _this$dependencyGraph.restRange;\n\n      var currentRangeVertex = this.dependencyGraph.getRange(range.start, range.end);\n      var actualRange;\n\n      if (smallerRangeVertex && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\n        var cachedValue = smallerRangeVertex.getFunctionValue(functionName);\n\n        if (cachedValue) {\n          rangeResult.push(cachedValue);\n        } else {\n          var _iterator = _createForOfIteratorHelper(smallerRangeVertex.range.addresses(this.dependencyGraph)),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var cellFromRange = _step.value;\n              var val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\n\n              if (val instanceof CellError) {\n                rangeResult.push(val);\n              } else if (val !== undefined) {\n                rangeResult.push(mapFunction(val));\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        actualRange = restRange;\n      } else {\n        actualRange = range;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(actualRange.addresses(this.dependencyGraph)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _cellFromRange = _step2.value;\n\n          var _val = coercionFunction(this.dependencyGraph.getScalarValue(_cellFromRange));\n\n          if (_val instanceof CellError) {\n            rangeResult.push(_val);\n          } else if (_val !== undefined) {\n            rangeResult.push(mapFunction(_val));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return rangeResult;\n    }\n  }]);\n\n  return NumericAggregationPlugin;\n}(FunctionPlugin);\nNumericAggregationPlugin.implementedFunctions = {\n  'SUM': {\n    method: 'sum'\n  },\n  'SUMSQ': {\n    method: 'sumsq'\n  },\n  'MAX': {\n    method: 'max'\n  },\n  'MIN': {\n    method: 'min'\n  },\n  'MAXA': {\n    method: 'maxa'\n  },\n  'MINA': {\n    method: 'mina'\n  },\n  'COUNT': {\n    method: 'count'\n  },\n  'COUNTA': {\n    method: 'counta'\n  },\n  'AVERAGE': {\n    method: 'average'\n  },\n  'AVERAGEA': {\n    method: 'averagea'\n  },\n  'PRODUCT': {\n    method: 'product'\n  },\n  'VAR.S': {\n    method: 'vars'\n  },\n  'VAR.P': {\n    method: 'varp'\n  },\n  'VARA': {\n    method: 'vara'\n  },\n  'VARPA': {\n    method: 'varpa'\n  },\n  'STDEV.S': {\n    method: 'stdevs'\n  },\n  'STDEV.P': {\n    method: 'stdevp'\n  },\n  'STDEVA': {\n    method: 'stdeva'\n  },\n  'STDEVPA': {\n    method: 'stdevpa'\n  },\n  'SUBTOTAL': {\n    method: 'subtotal'\n  }\n};\nNumericAggregationPlugin.aliases = {\n  VAR: 'VAR.S',\n  VARP: 'VAR.P',\n  STDEV: 'STDEV.S',\n  STDEVP: 'STDEV.P',\n  VARS: 'VAR.S',\n  STDEVS: 'STDEV.S'\n};\n\nfunction strictlyNumbers(arg) {\n  if (isExtendedNumber(arg) || arg instanceof CellError) {\n    return arg;\n  } else {\n    return undefined;\n  }\n}\n\nfunction numbersBooleans(arg) {\n  if (typeof arg === 'boolean') {\n    return coerceBooleanToNumber(arg);\n  } else if (isExtendedNumber(arg) || arg instanceof CellError) {\n    return arg;\n  } else if (typeof arg === 'string') {\n    return 0;\n  } else {\n    return undefined;\n  }\n}"]},"metadata":{},"sourceType":"module"}