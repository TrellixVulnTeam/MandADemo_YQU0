{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { padLeft } from '../../format/format';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nvar MAX_LENGTH = 10;\nvar DECIMAL_NUMBER_OF_BITS = 255;\nvar MIN_BASE = 2;\nvar MAX_BASE = 36;\nvar ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport var RadixConversionPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(RadixConversionPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(RadixConversionPlugin);\n\n  function RadixConversionPlugin() {\n    _classCallCheck(this, RadixConversionPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadixConversionPlugin, [{\n    key: \"dec2bin\",\n    value: function dec2bin(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DEC2BIN'), function (value, places) {\n        return decimalToBaseWithExactPadding(value, 2, places);\n      });\n    }\n  }, {\n    key: \"dec2oct\",\n    value: function dec2oct(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DEC2OCT'), function (value, places) {\n        return decimalToBaseWithExactPadding(value, 8, places);\n      });\n    }\n  }, {\n    key: \"dec2hex\",\n    value: function dec2hex(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DEC2HEX'), function (value, places) {\n        return decimalToBaseWithExactPadding(value, 16, places);\n      });\n    }\n  }, {\n    key: \"bin2dec\",\n    value: function bin2dec(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BIN2DEC'), function (binary) {\n        var binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n\n        if (binaryWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n        }\n\n        return twoComplementToDecimal(binaryWithSign, 2);\n      });\n    }\n  }, {\n    key: \"bin2oct\",\n    value: function bin2oct(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BIN2OCT'), function (binary, places) {\n        var binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n\n        if (binaryWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 8, places);\n      });\n    }\n  }, {\n    key: \"bin2hex\",\n    value: function bin2hex(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BIN2HEX'), function (binary, places) {\n        var binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n\n        if (binaryWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 16, places);\n      });\n    }\n  }, {\n    key: \"oct2dec\",\n    value: function oct2dec(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('OCT2DEC'), function (octal) {\n        var octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n\n        if (octalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n        }\n\n        return twoComplementToDecimal(octalWithSign, 8);\n      });\n    }\n  }, {\n    key: \"oct2bin\",\n    value: function oct2bin(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('OCT2BIN'), function (octal, places) {\n        var octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n\n        if (octalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 2, places);\n      });\n    }\n  }, {\n    key: \"oct2hex\",\n    value: function oct2hex(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('OCT2HEX'), function (octal, places) {\n        var octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n\n        if (octalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 16, places);\n      });\n    }\n  }, {\n    key: \"hex2dec\",\n    value: function hex2dec(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HEX2DEC'), function (hexadecimal) {\n        var hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n\n        if (hexadecimalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return twoComplementToDecimal(hexadecimalWithSign, 16);\n      });\n    }\n  }, {\n    key: \"hex2bin\",\n    value: function hex2bin(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HEX2BIN'), function (hexadecimal, places) {\n        var hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n\n        if (hexadecimalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 2, places);\n      });\n    }\n  }, {\n    key: \"hex2oct\",\n    value: function hex2oct(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HEX2OCT'), function (hexadecimal, places) {\n        var hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n\n        if (hexadecimalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 8, places);\n      });\n    }\n  }, {\n    key: \"base\",\n    value: function base(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BASE'), decimalToBaseWithMinimumPadding);\n    }\n  }, {\n    key: \"decimal\",\n    value: function decimal(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DECIMAL'), function (arg, base) {\n        var input = coerceStringToBase(arg, base, DECIMAL_NUMBER_OF_BITS);\n\n        if (input === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return parseInt(input, base);\n      });\n    }\n  }]);\n\n  return RadixConversionPlugin;\n}(FunctionPlugin);\nRadixConversionPlugin.implementedFunctions = {\n  'DEC2BIN': {\n    method: 'dec2bin',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 1,\n      maxValue: 10\n    }]\n  },\n  'DEC2OCT': {\n    method: 'dec2oct',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 1,\n      maxValue: 10\n    }]\n  },\n  'DEC2HEX': {\n    method: 'dec2hex',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 1,\n      maxValue: 10\n    }]\n  },\n  'BIN2DEC': {\n    method: 'bin2dec',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'BIN2OCT': {\n    method: 'bin2oct',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'BIN2HEX': {\n    method: 'bin2hex',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'OCT2DEC': {\n    method: 'oct2dec',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'OCT2BIN': {\n    method: 'oct2bin',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'OCT2HEX': {\n    method: 'oct2hex',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'HEX2DEC': {\n    method: 'hex2dec',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'HEX2BIN': {\n    method: 'hex2bin',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'HEX2OCT': {\n    method: 'hex2oct',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'DECIMAL': {\n    method: 'decimal',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: MIN_BASE,\n      maxValue: MAX_BASE\n    }]\n  },\n  'BASE': {\n    method: 'base',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: MIN_BASE,\n      maxValue: MAX_BASE\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: DECIMAL_NUMBER_OF_BITS\n    }]\n  }\n};\n\nfunction coerceStringToBase(value, base, maxLength) {\n  var baseAlphabet = ALPHABET.substr(0, base);\n  var regex = new RegExp(\"^[\".concat(baseAlphabet, \"]+$\"));\n\n  if (value.length > maxLength || !regex.test(value)) {\n    return undefined;\n  }\n\n  return value;\n}\n\nfunction decimalToBaseWithExactPadding(value, base, places) {\n  if (value > maxValFromBase(base)) {\n    return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLarge);\n  }\n\n  if (value < minValFromBase(base)) {\n    return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseSmall);\n  }\n\n  var result = decimalToRadixComplement(value, base);\n\n  if (places === undefined || value < 0) {\n    return result;\n  } else if (result.length > places) {\n    return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLong);\n  } else {\n    return padLeft(result, places);\n  }\n}\n\nfunction minValFromBase(base) {\n  return -Math.pow(base, MAX_LENGTH) / 2;\n}\n\nfunction maxValFromBase(base) {\n  return -minValFromBase(base) - 1;\n}\n\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\n  var result = decimalToRadixComplement(value, base);\n\n  if (places !== undefined && places > result.length) {\n    return padLeft(result, places);\n  } else {\n    return result;\n  }\n}\n\nfunction decimalToRadixComplement(value, base) {\n  var offset = value < 0 ? Math.pow(base, MAX_LENGTH) : 0;\n  return (value + offset).toString(base).toUpperCase();\n}\n\nfunction twoComplementToDecimal(value, base) {\n  var parsed = parseInt(value, base);\n  var offset = Math.pow(base, MAX_LENGTH);\n  return parsed >= offset / 2 ? parsed - offset : parsed;\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/plugin/RadixConversionPlugin.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","CellError","ErrorType","ErrorMessage","padLeft","ArgumentTypes","FunctionPlugin","MAX_LENGTH","DECIMAL_NUMBER_OF_BITS","MIN_BASE","MAX_BASE","ALPHABET","RadixConversionPlugin","_FunctionPlugin","_super","dec2bin","ast","state","runFunction","args","metadata","places","decimalToBaseWithExactPadding","dec2oct","dec2hex","bin2dec","binary","binaryWithSign","coerceStringToBase","undefined","NUM","NotBinary","twoComplementToDecimal","bin2oct","bin2hex","oct2dec","octal","octalWithSign","NotOctal","oct2bin","oct2hex","hex2dec","hexadecimal","hexadecimalWithSign","NotHex","hex2bin","hex2oct","base","decimalToBaseWithMinimumPadding","decimal","arg","input","parseInt","implementedFunctions","method","parameters","argumentType","NUMBER","optionalArg","minValue","maxValue","STRING","maxLength","baseAlphabet","substr","regex","RegExp","concat","test","maxValFromBase","ValueBaseLarge","minValFromBase","ValueBaseSmall","decimalToRadixComplement","ValueBaseLong","Math","pow","offset","toString","toUpperCase","parsed"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { padLeft } from '../../format/format';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nvar MAX_LENGTH = 10;\nvar DECIMAL_NUMBER_OF_BITS = 255;\nvar MIN_BASE = 2;\nvar MAX_BASE = 36;\nvar ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport var RadixConversionPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(RadixConversionPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(RadixConversionPlugin);\n\n  function RadixConversionPlugin() {\n    _classCallCheck(this, RadixConversionPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadixConversionPlugin, [{\n    key: \"dec2bin\",\n    value: function dec2bin(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DEC2BIN'), function (value, places) {\n        return decimalToBaseWithExactPadding(value, 2, places);\n      });\n    }\n  }, {\n    key: \"dec2oct\",\n    value: function dec2oct(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DEC2OCT'), function (value, places) {\n        return decimalToBaseWithExactPadding(value, 8, places);\n      });\n    }\n  }, {\n    key: \"dec2hex\",\n    value: function dec2hex(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DEC2HEX'), function (value, places) {\n        return decimalToBaseWithExactPadding(value, 16, places);\n      });\n    }\n  }, {\n    key: \"bin2dec\",\n    value: function bin2dec(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BIN2DEC'), function (binary) {\n        var binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n\n        if (binaryWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n        }\n\n        return twoComplementToDecimal(binaryWithSign, 2);\n      });\n    }\n  }, {\n    key: \"bin2oct\",\n    value: function bin2oct(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BIN2OCT'), function (binary, places) {\n        var binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n\n        if (binaryWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 8, places);\n      });\n    }\n  }, {\n    key: \"bin2hex\",\n    value: function bin2hex(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BIN2HEX'), function (binary, places) {\n        var binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n\n        if (binaryWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 16, places);\n      });\n    }\n  }, {\n    key: \"oct2dec\",\n    value: function oct2dec(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('OCT2DEC'), function (octal) {\n        var octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n\n        if (octalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n        }\n\n        return twoComplementToDecimal(octalWithSign, 8);\n      });\n    }\n  }, {\n    key: \"oct2bin\",\n    value: function oct2bin(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('OCT2BIN'), function (octal, places) {\n        var octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n\n        if (octalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 2, places);\n      });\n    }\n  }, {\n    key: \"oct2hex\",\n    value: function oct2hex(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('OCT2HEX'), function (octal, places) {\n        var octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n\n        if (octalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 16, places);\n      });\n    }\n  }, {\n    key: \"hex2dec\",\n    value: function hex2dec(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HEX2DEC'), function (hexadecimal) {\n        var hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n\n        if (hexadecimalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return twoComplementToDecimal(hexadecimalWithSign, 16);\n      });\n    }\n  }, {\n    key: \"hex2bin\",\n    value: function hex2bin(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HEX2BIN'), function (hexadecimal, places) {\n        var hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n\n        if (hexadecimalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 2, places);\n      });\n    }\n  }, {\n    key: \"hex2oct\",\n    value: function hex2oct(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HEX2OCT'), function (hexadecimal, places) {\n        var hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n\n        if (hexadecimalWithSign === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 8, places);\n      });\n    }\n  }, {\n    key: \"base\",\n    value: function base(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BASE'), decimalToBaseWithMinimumPadding);\n    }\n  }, {\n    key: \"decimal\",\n    value: function decimal(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('DECIMAL'), function (arg, base) {\n        var input = coerceStringToBase(arg, base, DECIMAL_NUMBER_OF_BITS);\n\n        if (input === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n        }\n\n        return parseInt(input, base);\n      });\n    }\n  }]);\n\n  return RadixConversionPlugin;\n}(FunctionPlugin);\nRadixConversionPlugin.implementedFunctions = {\n  'DEC2BIN': {\n    method: 'dec2bin',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 1,\n      maxValue: 10\n    }]\n  },\n  'DEC2OCT': {\n    method: 'dec2oct',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 1,\n      maxValue: 10\n    }]\n  },\n  'DEC2HEX': {\n    method: 'dec2hex',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 1,\n      maxValue: 10\n    }]\n  },\n  'BIN2DEC': {\n    method: 'bin2dec',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'BIN2OCT': {\n    method: 'bin2oct',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'BIN2HEX': {\n    method: 'bin2hex',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'OCT2DEC': {\n    method: 'oct2dec',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'OCT2BIN': {\n    method: 'oct2bin',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'OCT2HEX': {\n    method: 'oct2hex',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'HEX2DEC': {\n    method: 'hex2dec',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'HEX2BIN': {\n    method: 'hex2bin',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'HEX2OCT': {\n    method: 'hex2oct',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: MAX_LENGTH\n    }]\n  },\n  'DECIMAL': {\n    method: 'decimal',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: MIN_BASE,\n      maxValue: MAX_BASE\n    }]\n  },\n  'BASE': {\n    method: 'base',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: MIN_BASE,\n      maxValue: MAX_BASE\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true,\n      minValue: 0,\n      maxValue: DECIMAL_NUMBER_OF_BITS\n    }]\n  }\n};\n\nfunction coerceStringToBase(value, base, maxLength) {\n  var baseAlphabet = ALPHABET.substr(0, base);\n  var regex = new RegExp(\"^[\".concat(baseAlphabet, \"]+$\"));\n\n  if (value.length > maxLength || !regex.test(value)) {\n    return undefined;\n  }\n\n  return value;\n}\n\nfunction decimalToBaseWithExactPadding(value, base, places) {\n  if (value > maxValFromBase(base)) {\n    return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLarge);\n  }\n\n  if (value < minValFromBase(base)) {\n    return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseSmall);\n  }\n\n  var result = decimalToRadixComplement(value, base);\n\n  if (places === undefined || value < 0) {\n    return result;\n  } else if (result.length > places) {\n    return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLong);\n  } else {\n    return padLeft(result, places);\n  }\n}\n\nfunction minValFromBase(base) {\n  return -Math.pow(base, MAX_LENGTH) / 2;\n}\n\nfunction maxValFromBase(base) {\n  return -minValFromBase(base) - 1;\n}\n\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\n  var result = decimalToRadixComplement(value, base);\n\n  if (places !== undefined && places > result.length) {\n    return padLeft(result, places);\n  } else {\n    return result;\n  }\n}\n\nfunction decimalToRadixComplement(value, base) {\n  var offset = value < 0 ? Math.pow(base, MAX_LENGTH) : 0;\n  return (value + offset).toString(base).toUpperCase();\n}\n\nfunction twoComplementToDecimal(value, base) {\n  var parsed = parseInt(value, base);\n  var offset = Math.pow(base, MAX_LENGTH);\n  return parsed >= offset / 2 ? parsed - offset : parsed;\n}"]},"metadata":{},"sourceType":"module"}