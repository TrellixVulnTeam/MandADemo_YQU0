{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\n\nvar collectDependenciesFn = function collectDependenciesFn(ast, functionRegistry, dependenciesSet, needArgument) {\n  switch (ast.type) {\n    case AstNodeType.EMPTY:\n    case AstNodeType.NUMBER:\n    case AstNodeType.STRING:\n    case AstNodeType.ERROR:\n      return;\n\n    case AstNodeType.NAMED_EXPRESSION:\n      {\n        if (needArgument) {\n          dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\n        }\n\n        return;\n      }\n\n    case AstNodeType.CELL_REFERENCE:\n      {\n        if (needArgument) {\n          dependenciesSet.push(new AddressDependency(ast.reference));\n        }\n\n        return;\n      }\n\n    case AstNodeType.CELL_RANGE:\n      {\n        if (needArgument && ast.start.sheet === ast.end.sheet) {\n          dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\n        }\n\n        return;\n      }\n\n    case AstNodeType.COLUMN_RANGE:\n      {\n        if (needArgument && ast.start.sheet === ast.end.sheet) {\n          dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\n        }\n\n        return;\n      }\n\n    case AstNodeType.ROW_RANGE:\n      {\n        if (needArgument && ast.start.sheet === ast.end.sheet) {\n          dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\n        }\n\n        return;\n      }\n\n    case AstNodeType.PERCENT_OP:\n    case AstNodeType.PLUS_UNARY_OP:\n    case AstNodeType.MINUS_UNARY_OP:\n      {\n        collectDependenciesFn(ast.value, functionRegistry, dependenciesSet, true);\n        return;\n      }\n\n    case AstNodeType.CONCATENATE_OP:\n    case AstNodeType.EQUALS_OP:\n    case AstNodeType.NOT_EQUAL_OP:\n    case AstNodeType.LESS_THAN_OP:\n    case AstNodeType.GREATER_THAN_OP:\n    case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n    case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n    case AstNodeType.MINUS_OP:\n    case AstNodeType.PLUS_OP:\n    case AstNodeType.TIMES_OP:\n    case AstNodeType.DIV_OP:\n    case AstNodeType.POWER_OP:\n      collectDependenciesFn(ast.left, functionRegistry, dependenciesSet, true);\n      collectDependenciesFn(ast.right, functionRegistry, dependenciesSet, true);\n      return;\n\n    case AstNodeType.PARENTHESIS:\n      collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet, needArgument);\n      return;\n\n    case AstNodeType.FUNCTION_CALL:\n      {\n        var functionNeedArgument = !functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName);\n        ast.args.forEach(function (argAst) {\n          return collectDependenciesFn(argAst, functionRegistry, dependenciesSet, functionNeedArgument);\n        });\n        return;\n      }\n  }\n};\n\nexport var collectDependencies = function collectDependencies(ast, functionRegistry) {\n  var result = new Array();\n  collectDependenciesFn(ast, functionRegistry, result, true);\n  return result;\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/parser/collectDependencies.js"],"names":["AddressDependency","AstNodeType","CellRangeDependency","ColumnRangeDependency","NamedExpressionDependency","RowRangeDependency","collectDependenciesFn","ast","functionRegistry","dependenciesSet","needArgument","type","EMPTY","NUMBER","STRING","ERROR","NAMED_EXPRESSION","push","expressionName","CELL_REFERENCE","reference","CELL_RANGE","start","sheet","end","COLUMN_RANGE","ROW_RANGE","PERCENT_OP","PLUS_UNARY_OP","MINUS_UNARY_OP","value","CONCATENATE_OP","EQUALS_OP","NOT_EQUAL_OP","LESS_THAN_OP","GREATER_THAN_OP","LESS_THAN_OR_EQUAL_OP","GREATER_THAN_OR_EQUAL_OP","MINUS_OP","PLUS_OP","TIMES_OP","DIV_OP","POWER_OP","left","right","PARENTHESIS","expression","FUNCTION_CALL","functionNeedArgument","doesFunctionNeedArgumentToBeComputed","procedureName","args","forEach","argAst","collectDependencies","result","Array"],"mappings":"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","sourcesContent":["import \"core-js/modules/web.dom-collections.for-each.js\";\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\n\nvar collectDependenciesFn = function collectDependenciesFn(ast, functionRegistry, dependenciesSet, needArgument) {\n  switch (ast.type) {\n    case AstNodeType.EMPTY:\n    case AstNodeType.NUMBER:\n    case AstNodeType.STRING:\n    case AstNodeType.ERROR:\n      return;\n\n    case AstNodeType.NAMED_EXPRESSION:\n      {\n        if (needArgument) {\n          dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\n        }\n\n        return;\n      }\n\n    case AstNodeType.CELL_REFERENCE:\n      {\n        if (needArgument) {\n          dependenciesSet.push(new AddressDependency(ast.reference));\n        }\n\n        return;\n      }\n\n    case AstNodeType.CELL_RANGE:\n      {\n        if (needArgument && ast.start.sheet === ast.end.sheet) {\n          dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\n        }\n\n        return;\n      }\n\n    case AstNodeType.COLUMN_RANGE:\n      {\n        if (needArgument && ast.start.sheet === ast.end.sheet) {\n          dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\n        }\n\n        return;\n      }\n\n    case AstNodeType.ROW_RANGE:\n      {\n        if (needArgument && ast.start.sheet === ast.end.sheet) {\n          dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\n        }\n\n        return;\n      }\n\n    case AstNodeType.PERCENT_OP:\n    case AstNodeType.PLUS_UNARY_OP:\n    case AstNodeType.MINUS_UNARY_OP:\n      {\n        collectDependenciesFn(ast.value, functionRegistry, dependenciesSet, true);\n        return;\n      }\n\n    case AstNodeType.CONCATENATE_OP:\n    case AstNodeType.EQUALS_OP:\n    case AstNodeType.NOT_EQUAL_OP:\n    case AstNodeType.LESS_THAN_OP:\n    case AstNodeType.GREATER_THAN_OP:\n    case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n    case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n    case AstNodeType.MINUS_OP:\n    case AstNodeType.PLUS_OP:\n    case AstNodeType.TIMES_OP:\n    case AstNodeType.DIV_OP:\n    case AstNodeType.POWER_OP:\n      collectDependenciesFn(ast.left, functionRegistry, dependenciesSet, true);\n      collectDependenciesFn(ast.right, functionRegistry, dependenciesSet, true);\n      return;\n\n    case AstNodeType.PARENTHESIS:\n      collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet, needArgument);\n      return;\n\n    case AstNodeType.FUNCTION_CALL:\n      {\n        var functionNeedArgument = !functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName);\n        ast.args.forEach(function (argAst) {\n          return collectDependenciesFn(argAst, functionRegistry, dependenciesSet, functionNeedArgument);\n        });\n        return;\n      }\n  }\n};\n\nexport var collectDependencies = function collectDependencies(ast, functionRegistry) {\n  var result = new Array();\n  collectDependenciesFn(ast, functionRegistry, result, true);\n  return result;\n};"]},"metadata":{},"sourceType":"module"}