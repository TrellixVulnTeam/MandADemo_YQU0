{"ast":null,"code":"import { isUndefined } from \"../utils/utils\";\nexport function classNameFromInstance(instance) {\n  return functionName(instance.constructor);\n}\nvar FUNC_NAME_REGEXP = /^\\s*function\\s*(\\S*)\\s*\\(/;\nvar NAME = \"name\";\n/* istanbul ignore next too many hacks for IE/old versions of node.js here*/\n\nexport function functionName(func) {\n  // Engines that support Function.prototype.name OR the nth (n>1) time after\n  // the name has been computed in the following else block.\n  var existingNameProp = func.name;\n\n  if (existingNameProp) {\n    return existingNameProp;\n  } // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)\n\n\n  var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];\n  return computedName;\n}\n/**\n * @returns {boolean} - has the property been successfully defined\n */\n\nexport function defineNameProp(obj, nameValue) {\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n  /* istanbul ignore else -> will only run in old versions of node.js */\n\n  if (isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n    Object.defineProperty(obj, NAME, {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: nameValue\n    });\n    return true;\n  }\n  /* istanbul ignore next -> will only run in old versions of node.js */\n\n\n  return false;\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/lang/lang_extensions.js"],"names":["isUndefined","classNameFromInstance","instance","functionName","constructor","FUNC_NAME_REGEXP","NAME","func","existingNameProp","name","computedName","toString","match","defineNameProp","obj","nameValue","namePropDescriptor","Object","getOwnPropertyDescriptor","configurable","defineProperty","enumerable","writable","value"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAO,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AAC5C,SAAOC,YAAY,CAACD,QAAQ,CAACE,WAAV,CAAnB;AACH;AACD,IAAIC,gBAAgB,GAAG,2BAAvB;AACA,IAAIC,IAAI,GAAG,MAAX;AACA;;AACA,OAAO,SAASH,YAAT,CAAsBI,IAAtB,EAA4B;AAC/B;AACA;AACA,MAAIC,gBAAgB,GAAGD,IAAI,CAACE,IAA5B;;AACA,MAAID,gBAAJ,EAAsB;AAClB,WAAOA,gBAAP;AACH,GAN8B,CAO/B;;;AACA,MAAIE,YAAY,GAAGH,IAAI,CAACI,QAAL,GAAgBC,KAAhB,CAAsBP,gBAAtB,EAAwC,CAAxC,CAAnB;AACA,SAAOK,YAAP;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASG,cAAT,CAAwBC,GAAxB,EAA6BC,SAA7B,EAAwC;AAC3C,MAAIC,kBAAkB,GAAGC,MAAM,CAACC,wBAAP,CAAgCJ,GAAhC,EAAqCR,IAArC,CAAzB;AACA;;AACA,MAAIN,WAAW,CAACgB,kBAAD,CAAX,IAAmCA,kBAAkB,CAACG,YAA1D,EAAwE;AACpEF,IAAAA,MAAM,CAACG,cAAP,CAAsBN,GAAtB,EAA2BR,IAA3B,EAAiC;AAC7Be,MAAAA,UAAU,EAAE,KADiB;AAE7BF,MAAAA,YAAY,EAAE,IAFe;AAG7BG,MAAAA,QAAQ,EAAE,KAHmB;AAI7BC,MAAAA,KAAK,EAAER;AAJsB,KAAjC;AAMA,WAAO,IAAP;AACH;AACD;;;AACA,SAAO,KAAP;AACH","sourcesContent":["import { isUndefined } from \"../utils/utils\";\nexport function classNameFromInstance(instance) {\n    return functionName(instance.constructor);\n}\nvar FUNC_NAME_REGEXP = /^\\s*function\\s*(\\S*)\\s*\\(/;\nvar NAME = \"name\";\n/* istanbul ignore next too many hacks for IE/old versions of node.js here*/\nexport function functionName(func) {\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\n    // the name has been computed in the following else block.\n    var existingNameProp = func.name;\n    if (existingNameProp) {\n        return existingNameProp;\n    }\n    // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)\n    var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];\n    return computedName;\n}\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nexport function defineNameProp(obj, nameValue) {\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n    /* istanbul ignore else -> will only run in old versions of node.js */\n    if (isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n        Object.defineProperty(obj, NAME, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameValue\n        });\n        return true;\n    }\n    /* istanbul ignore next -> will only run in old versions of node.js */\n    return false;\n}\n//# sourceMappingURL=lang_extensions.js.map"]},"metadata":{},"sourceType":"module"}