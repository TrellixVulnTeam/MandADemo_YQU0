{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { ArraySize } from '../ArraySize';\nimport { ArrayValue, ErroredArray, NotComputedArray } from '../ArrayValue';\nimport { CellError, equalSimpleCellAddress, ErrorType } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\nimport { ColumnsSpan, RowsSpan } from '../Span';\nexport var FormulaVertex = /*#__PURE__*/function () {\n  function FormulaVertex(formula, cellAddress, version) {\n    _classCallCheck(this, FormulaVertex);\n\n    this.formula = formula;\n    this.cellAddress = cellAddress;\n    this.version = version;\n  }\n\n  _createClass(FormulaVertex, [{\n    key: \"width\",\n    get: function get() {\n      return 1;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return 1;\n    }\n    /**\n     * Returns formula stored in this vertex\n     */\n\n  }, {\n    key: \"getFormula\",\n    value: function getFormula(updatingService) {\n      this.ensureRecentData(updatingService);\n      return this.formula;\n    }\n  }, {\n    key: \"ensureRecentData\",\n    value: function ensureRecentData(updatingService) {\n      if (this.version != updatingService.version()) {\n        var _updatingService$appl = updatingService.applyTransformations(this.formula, this.cellAddress, this.version),\n            _updatingService$appl2 = _slicedToArray(_updatingService$appl, 3),\n            newAst = _updatingService$appl2[0],\n            newAddress = _updatingService$appl2[1],\n            newVersion = _updatingService$appl2[2];\n\n        this.formula = newAst;\n        this.cellAddress = newAddress;\n        this.version = newVersion;\n      }\n    }\n    /**\n     * Returns address of the cell associated with vertex\n     */\n\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(updatingService) {\n      this.ensureRecentData(updatingService);\n      return this.cellAddress;\n    }\n  }], [{\n    key: \"fromAst\",\n    value: function fromAst(formula, address, size, version) {\n      if (size.isScalar()) {\n        return new FormulaCellVertex(formula, address, version);\n      } else {\n        return new ArrayVertex(formula, address, size, version);\n      }\n    }\n  }]);\n\n  return FormulaVertex;\n}();\nexport var ArrayVertex = /*#__PURE__*/function (_FormulaVertex) {\n  _inherits(ArrayVertex, _FormulaVertex);\n\n  var _super = _createSuper(ArrayVertex);\n\n  function ArrayVertex(formula, cellAddress, size) {\n    var _this;\n\n    var version = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, ArrayVertex);\n\n    _this = _super.call(this, formula, cellAddress, version);\n\n    if (size.isRef) {\n      _this.array = new ErroredArray(new CellError(ErrorType.REF, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\n    } else {\n      _this.array = new NotComputedArray(size);\n    }\n\n    return _this;\n  }\n\n  _createClass(ArrayVertex, [{\n    key: \"width\",\n    get: function get() {\n      return this.array.width();\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.array.height();\n    }\n  }, {\n    key: \"sheet\",\n    get: function get() {\n      return this.cellAddress.sheet;\n    }\n  }, {\n    key: \"leftCorner\",\n    get: function get() {\n      return this.cellAddress;\n    }\n  }, {\n    key: \"setCellValue\",\n    value: function setCellValue(value) {\n      if (value instanceof CellError) {\n        this.setErrorValue(value);\n        return value;\n      }\n\n      var array = ArrayValue.fromInterpreterValue(value);\n      array.resize(this.array.size);\n      this.array = array;\n      return value;\n    }\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue() {\n      if (this.array instanceof NotComputedArray) {\n        throw Error('Array not computed yet.');\n      }\n\n      return this.array.simpleRangeValue();\n    }\n  }, {\n    key: \"valueOrUndef\",\n    value: function valueOrUndef() {\n      if (this.array instanceof NotComputedArray) {\n        return undefined;\n      }\n\n      return this.array.simpleRangeValue();\n    }\n  }, {\n    key: \"getArrayCellValue\",\n    value: function getArrayCellValue(address) {\n      var col = address.col - this.cellAddress.col;\n      var row = address.row - this.cellAddress.row;\n\n      try {\n        return this.array.get(col, row);\n      } catch (e) {\n        return new CellError(ErrorType.REF);\n      }\n    }\n  }, {\n    key: \"getArrayCellRawValue\",\n    value: function getArrayCellRawValue(address) {\n      var val = this.getArrayCellValue(address);\n\n      if (val instanceof CellError || val === EmptyValue) {\n        return undefined;\n      } else {\n        return getRawValue(val);\n      }\n    }\n  }, {\n    key: \"setArrayCellValue\",\n    value: function setArrayCellValue(address, value) {\n      var col = address.col - this.cellAddress.col;\n      var row = address.row - this.cellAddress.row;\n\n      if (this.array instanceof ArrayValue) {\n        this.array.set(col, row, value);\n      }\n    }\n  }, {\n    key: \"setNoSpace\",\n    value: function setNoSpace() {\n      this.array = new ErroredArray(new CellError(ErrorType.SPILL, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\n      return this.getCellValue();\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\n    }\n  }, {\n    key: \"setAddress\",\n    value: function setAddress(address) {\n      this.cellAddress = address;\n    }\n  }, {\n    key: \"setFormula\",\n    value: function setFormula(newFormula) {\n      this.formula = newFormula;\n    }\n  }, {\n    key: \"spansThroughSheetRows\",\n    value: function spansThroughSheetRows(sheet, startRow) {\n      var endRow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startRow;\n      return this.cellAddress.sheet === sheet && this.cellAddress.row <= endRow && startRow < this.cellAddress.row + this.height;\n    }\n  }, {\n    key: \"spansThroughSheetColumn\",\n    value: function spansThroughSheetColumn(sheet, col) {\n      var columnEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : col;\n      return this.cellAddress.sheet === sheet && this.cellAddress.col <= columnEnd && col < this.cellAddress.col + this.width;\n    }\n  }, {\n    key: \"isComputed\",\n    value: function isComputed() {\n      return !(this.array instanceof NotComputedArray);\n    }\n  }, {\n    key: \"columnsFromArray\",\n    value: function columnsFromArray() {\n      return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\n    }\n  }, {\n    key: \"rowsFromArray\",\n    value: function rowsFromArray() {\n      return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\n    }\n    /**\n     * No-op as array vertices are transformed eagerly.\n     * */\n\n  }, {\n    key: \"ensureRecentData\",\n    value: function ensureRecentData(_updatingService) {}\n  }, {\n    key: \"isLeftCorner\",\n    value: function isLeftCorner(address) {\n      return equalSimpleCellAddress(this.cellAddress, address);\n    }\n  }, {\n    key: \"setErrorValue\",\n    value: function setErrorValue(error) {\n      this.array = new ErroredArray(error, this.array.size);\n    }\n  }]);\n\n  return ArrayVertex;\n}(FormulaVertex);\n/**\n * Represents vertex which keeps formula\n */\n\nexport var FormulaCellVertex = /*#__PURE__*/function (_FormulaVertex2) {\n  _inherits(FormulaCellVertex, _FormulaVertex2);\n\n  var _super2 = _createSuper(FormulaCellVertex);\n\n  function FormulaCellVertex(\n  /** Formula in AST format */\n  formula,\n  /** Address which this vertex represents */\n  address, version) {\n    _classCallCheck(this, FormulaCellVertex);\n\n    return _super2.call(this, formula, address, version);\n  }\n\n  _createClass(FormulaCellVertex, [{\n    key: \"valueOrUndef\",\n    value: function valueOrUndef() {\n      return this.cachedCellValue;\n    }\n    /**\n     * Sets computed cell value stored in this vertex\n     */\n\n  }, {\n    key: \"setCellValue\",\n    value: function setCellValue(cellValue) {\n      this.cachedCellValue = cellValue;\n      return this.cachedCellValue;\n    }\n    /**\n     * Returns cell value stored in vertex\n     */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue() {\n      if (this.cachedCellValue !== undefined) {\n        return this.cachedCellValue;\n      } else {\n        throw Error('Value of the formula cell is not computed.');\n      }\n    }\n  }, {\n    key: \"isComputed\",\n    value: function isComputed() {\n      return this.cachedCellValue !== undefined;\n    }\n  }]);\n\n  return FormulaCellVertex;\n}(FormulaVertex);","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/DependencyGraph/FormulaCellVertex.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_inherits","subClass","superClass","TypeError","Object","create","value","writable","configurable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","ArraySize","ArrayValue","ErroredArray","NotComputedArray","CellError","equalSimpleCellAddress","ErrorType","ErrorMessage","EmptyValue","getRawValue","ColumnsSpan","RowsSpan","FormulaVertex","formula","cellAddress","version","get","getFormula","updatingService","ensureRecentData","_updatingService$appl","applyTransformations","_updatingService$appl2","newAst","newAddress","newVersion","getAddress","fromAst","address","size","isScalar","FormulaCellVertex","ArrayVertex","_FormulaVertex","_super","_this","undefined","isRef","array","REF","NoSpaceForArrayResult","error","width","height","sheet","setCellValue","setErrorValue","fromInterpreterValue","resize","getCellValue","Error","simpleRangeValue","valueOrUndef","getArrayCellValue","col","row","getArrayCellRawValue","val","setArrayCellValue","set","setNoSpace","SPILL","getRange","spanFrom","setAddress","setFormula","newFormula","spansThroughSheetRows","startRow","endRow","spansThroughSheetColumn","columnEnd","isComputed","columnsFromArray","fromNumberOfColumns","rowsFromArray","fromNumberOfRows","_updatingService","isLeftCorner","_FormulaVertex2","_super2","cachedCellValue","cellValue"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { ArraySize } from '../ArraySize';\nimport { ArrayValue, ErroredArray, NotComputedArray } from '../ArrayValue';\nimport { CellError, equalSimpleCellAddress, ErrorType } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\nimport { ColumnsSpan, RowsSpan } from '../Span';\nexport var FormulaVertex = /*#__PURE__*/function () {\n  function FormulaVertex(formula, cellAddress, version) {\n    _classCallCheck(this, FormulaVertex);\n\n    this.formula = formula;\n    this.cellAddress = cellAddress;\n    this.version = version;\n  }\n\n  _createClass(FormulaVertex, [{\n    key: \"width\",\n    get: function get() {\n      return 1;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return 1;\n    }\n    /**\n     * Returns formula stored in this vertex\n     */\n\n  }, {\n    key: \"getFormula\",\n    value: function getFormula(updatingService) {\n      this.ensureRecentData(updatingService);\n      return this.formula;\n    }\n  }, {\n    key: \"ensureRecentData\",\n    value: function ensureRecentData(updatingService) {\n      if (this.version != updatingService.version()) {\n        var _updatingService$appl = updatingService.applyTransformations(this.formula, this.cellAddress, this.version),\n            _updatingService$appl2 = _slicedToArray(_updatingService$appl, 3),\n            newAst = _updatingService$appl2[0],\n            newAddress = _updatingService$appl2[1],\n            newVersion = _updatingService$appl2[2];\n\n        this.formula = newAst;\n        this.cellAddress = newAddress;\n        this.version = newVersion;\n      }\n    }\n    /**\n     * Returns address of the cell associated with vertex\n     */\n\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(updatingService) {\n      this.ensureRecentData(updatingService);\n      return this.cellAddress;\n    }\n  }], [{\n    key: \"fromAst\",\n    value: function fromAst(formula, address, size, version) {\n      if (size.isScalar()) {\n        return new FormulaCellVertex(formula, address, version);\n      } else {\n        return new ArrayVertex(formula, address, size, version);\n      }\n    }\n  }]);\n\n  return FormulaVertex;\n}();\nexport var ArrayVertex = /*#__PURE__*/function (_FormulaVertex) {\n  _inherits(ArrayVertex, _FormulaVertex);\n\n  var _super = _createSuper(ArrayVertex);\n\n  function ArrayVertex(formula, cellAddress, size) {\n    var _this;\n\n    var version = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, ArrayVertex);\n\n    _this = _super.call(this, formula, cellAddress, version);\n\n    if (size.isRef) {\n      _this.array = new ErroredArray(new CellError(ErrorType.REF, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\n    } else {\n      _this.array = new NotComputedArray(size);\n    }\n\n    return _this;\n  }\n\n  _createClass(ArrayVertex, [{\n    key: \"width\",\n    get: function get() {\n      return this.array.width();\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.array.height();\n    }\n  }, {\n    key: \"sheet\",\n    get: function get() {\n      return this.cellAddress.sheet;\n    }\n  }, {\n    key: \"leftCorner\",\n    get: function get() {\n      return this.cellAddress;\n    }\n  }, {\n    key: \"setCellValue\",\n    value: function setCellValue(value) {\n      if (value instanceof CellError) {\n        this.setErrorValue(value);\n        return value;\n      }\n\n      var array = ArrayValue.fromInterpreterValue(value);\n      array.resize(this.array.size);\n      this.array = array;\n      return value;\n    }\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue() {\n      if (this.array instanceof NotComputedArray) {\n        throw Error('Array not computed yet.');\n      }\n\n      return this.array.simpleRangeValue();\n    }\n  }, {\n    key: \"valueOrUndef\",\n    value: function valueOrUndef() {\n      if (this.array instanceof NotComputedArray) {\n        return undefined;\n      }\n\n      return this.array.simpleRangeValue();\n    }\n  }, {\n    key: \"getArrayCellValue\",\n    value: function getArrayCellValue(address) {\n      var col = address.col - this.cellAddress.col;\n      var row = address.row - this.cellAddress.row;\n\n      try {\n        return this.array.get(col, row);\n      } catch (e) {\n        return new CellError(ErrorType.REF);\n      }\n    }\n  }, {\n    key: \"getArrayCellRawValue\",\n    value: function getArrayCellRawValue(address) {\n      var val = this.getArrayCellValue(address);\n\n      if (val instanceof CellError || val === EmptyValue) {\n        return undefined;\n      } else {\n        return getRawValue(val);\n      }\n    }\n  }, {\n    key: \"setArrayCellValue\",\n    value: function setArrayCellValue(address, value) {\n      var col = address.col - this.cellAddress.col;\n      var row = address.row - this.cellAddress.row;\n\n      if (this.array instanceof ArrayValue) {\n        this.array.set(col, row, value);\n      }\n    }\n  }, {\n    key: \"setNoSpace\",\n    value: function setNoSpace() {\n      this.array = new ErroredArray(new CellError(ErrorType.SPILL, ErrorMessage.NoSpaceForArrayResult), ArraySize.error());\n      return this.getCellValue();\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\n    }\n  }, {\n    key: \"setAddress\",\n    value: function setAddress(address) {\n      this.cellAddress = address;\n    }\n  }, {\n    key: \"setFormula\",\n    value: function setFormula(newFormula) {\n      this.formula = newFormula;\n    }\n  }, {\n    key: \"spansThroughSheetRows\",\n    value: function spansThroughSheetRows(sheet, startRow) {\n      var endRow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startRow;\n      return this.cellAddress.sheet === sheet && this.cellAddress.row <= endRow && startRow < this.cellAddress.row + this.height;\n    }\n  }, {\n    key: \"spansThroughSheetColumn\",\n    value: function spansThroughSheetColumn(sheet, col) {\n      var columnEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : col;\n      return this.cellAddress.sheet === sheet && this.cellAddress.col <= columnEnd && col < this.cellAddress.col + this.width;\n    }\n  }, {\n    key: \"isComputed\",\n    value: function isComputed() {\n      return !(this.array instanceof NotComputedArray);\n    }\n  }, {\n    key: \"columnsFromArray\",\n    value: function columnsFromArray() {\n      return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\n    }\n  }, {\n    key: \"rowsFromArray\",\n    value: function rowsFromArray() {\n      return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\n    }\n    /**\n     * No-op as array vertices are transformed eagerly.\n     * */\n\n  }, {\n    key: \"ensureRecentData\",\n    value: function ensureRecentData(_updatingService) {}\n  }, {\n    key: \"isLeftCorner\",\n    value: function isLeftCorner(address) {\n      return equalSimpleCellAddress(this.cellAddress, address);\n    }\n  }, {\n    key: \"setErrorValue\",\n    value: function setErrorValue(error) {\n      this.array = new ErroredArray(error, this.array.size);\n    }\n  }]);\n\n  return ArrayVertex;\n}(FormulaVertex);\n/**\n * Represents vertex which keeps formula\n */\n\nexport var FormulaCellVertex = /*#__PURE__*/function (_FormulaVertex2) {\n  _inherits(FormulaCellVertex, _FormulaVertex2);\n\n  var _super2 = _createSuper(FormulaCellVertex);\n\n  function FormulaCellVertex(\n  /** Formula in AST format */\n  formula,\n  /** Address which this vertex represents */\n  address, version) {\n    _classCallCheck(this, FormulaCellVertex);\n\n    return _super2.call(this, formula, address, version);\n  }\n\n  _createClass(FormulaCellVertex, [{\n    key: \"valueOrUndef\",\n    value: function valueOrUndef() {\n      return this.cachedCellValue;\n    }\n    /**\n     * Sets computed cell value stored in this vertex\n     */\n\n  }, {\n    key: \"setCellValue\",\n    value: function setCellValue(cellValue) {\n      this.cachedCellValue = cellValue;\n      return this.cachedCellValue;\n    }\n    /**\n     * Returns cell value stored in vertex\n     */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue() {\n      if (this.cachedCellValue !== undefined) {\n        return this.cachedCellValue;\n      } else {\n        throw Error('Value of the formula cell is not computed.');\n      }\n    }\n  }, {\n    key: \"isComputed\",\n    value: function isComputed() {\n      return this.cachedCellValue !== undefined;\n    }\n  }]);\n\n  return FormulaCellVertex;\n}(FormulaVertex);"]},"metadata":{},"sourceType":"module"}