{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { ArraySize } from '../../ArraySize';\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { InterpreterState } from '../InterpreterState';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n\nfunction arraySizeForMultiplication(leftArraySize, rightArraySize) {\n  return new ArraySize(rightArraySize.width, leftArraySize.height);\n}\n\nfunction arraySizeForPoolFunction(inputArray, windowSize, stride) {\n  return new ArraySize(1 + (inputArray.width - windowSize) / stride, 1 + (inputArray.height - windowSize) / stride);\n}\n\nexport var MatrixPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(MatrixPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(MatrixPlugin);\n\n  function MatrixPlugin(interpreter) {\n    var _this;\n\n    _classCallCheck(this, MatrixPlugin);\n\n    _this = _super.call(this, interpreter);\n\n    _this.createCpuKernel = function (kernel, outputSize) {\n      return function () {\n        var result = [];\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        for (var y = 0; y < outputSize.height; ++y) {\n          result.push([]);\n\n          for (var x = 0; x < outputSize.width; ++x) {\n            result[y][x] = kernel.apply({\n              thread: {\n                x: x,\n                y: y\n              }\n            }, args);\n          }\n        }\n\n        return result;\n      };\n    };\n\n    _this.createGpuJsKernel = function (kernel, outputSize) {\n      return _this.interpreter.getGpuInstance().createKernel(kernel).setPrecision('unsigned').setOutput([outputSize.width, outputSize.height]);\n    };\n\n    if (_this.config.gpujs === undefined) {\n      _this.createKernel = _this.createCpuKernel;\n    } else {\n      _this.createKernel = _this.createGpuJsKernel;\n    }\n\n    return _this;\n  }\n\n  _createClass(MatrixPlugin, [{\n    key: \"mmult\",\n    value: function mmult(ast, state) {\n      var _this2 = this;\n\n      return this.runFunction(ast.args, state, this.metadata('MMULT'), function (leftMatrix, rightMatrix) {\n        if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        if (rightMatrix.height() !== leftMatrix.width()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.ArrayDimensions);\n        }\n\n        var outputSize = arraySizeForMultiplication(leftMatrix.size, rightMatrix.size);\n\n        var result = _this2.createKernel(function (a, b, width) {\n          var sum = 0;\n\n          for (var i = 0; i < width; ++i) {\n            sum += a[this.thread.y][i] * b[i][this.thread.x];\n          }\n\n          return sum;\n        }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\n\n        return SimpleRangeValue.onlyNumbers(result);\n      });\n    }\n  }, {\n    key: \"mmultArraySize\",\n    value: function mmultArraySize(ast, state) {\n      var _this3 = this;\n\n      if (ast.args.length !== 2) {\n        return ArraySize.error();\n      }\n\n      var metadata = this.metadata('MMULT');\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this3.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n\n      var _subChecks = _slicedToArray(subChecks, 2),\n          left = _subChecks[0],\n          right = _subChecks[1];\n\n      return arraySizeForMultiplication(left, right);\n    }\n  }, {\n    key: \"maxpool\",\n    value: function maxpool(ast, state) {\n      var _this4 = this;\n\n      return this.runFunction(ast.args, state, this.metadata('MAXPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this4.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          return currentMax;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbers(result);\n      });\n    }\n  }, {\n    key: \"medianpool\",\n    value: function medianpool(ast, state) {\n      var _this5 = this;\n\n      return this.runFunction(ast.args, state, this.metadata('MEDIANPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this5.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          var currentMin = a[leftCornerY][leftCornerX];\n\n          for (var i2 = 0; i2 < windowSize; i2++) {\n            for (var j2 = 0; j2 < windowSize; j2++) {\n              currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\n            }\n          }\n\n          var numberOfElements = windowSize * windowSize;\n          var leftEnd = currentMin;\n          var rightEnd = currentMax;\n          var result = 42;\n\n          for (var iter = 0; iter < 32; iter++) {\n            var medianGuess = (leftEnd + rightEnd) / 2;\n            var medianGuessCount = 0;\n\n            for (var i3 = 0; i3 < windowSize; i3++) {\n              for (var j3 = 0; j3 < windowSize; j3++) {\n                if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\n                  medianGuessCount++;\n                }\n              }\n            }\n\n            if (windowSize % 2 === 0) {\n              if (medianGuessCount === numberOfElements / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > numberOfElements / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            } else {\n              if (medianGuessCount === (numberOfElements - 1) / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > (numberOfElements - 1) / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            }\n          }\n\n          return result;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbers(result);\n      });\n    }\n  }, {\n    key: \"maxpoolArraySize\",\n    value: function maxpoolArraySize(ast, state) {\n      var _this6 = this;\n\n      if (ast.args.length < 2 || ast.args.length > 3) {\n        return ArraySize.error();\n      }\n\n      var metadata = this.metadata('MAXPOOL');\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this6.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n      var array = subChecks[0];\n      var windowArg = ast.args[1];\n      var window;\n\n      if (windowArg.type === AstNodeType.NUMBER) {\n        window = windowArg.value;\n      } else {\n        window = 1;\n      }\n\n      var stride = window;\n\n      if (ast.args.length === 3) {\n        var strideArg = ast.args[2];\n\n        if (strideArg.type === AstNodeType.NUMBER) {\n          stride = strideArg.value;\n        } else {\n          stride = 1;\n        }\n      }\n\n      if (window > array.width || window > array.height || stride > window || (array.width - window) % stride !== 0 || (array.height - window) % stride !== 0) {\n        return ArraySize.error();\n      }\n\n      return arraySizeForPoolFunction(array, window, stride);\n    }\n  }, {\n    key: \"medianpoolArraySize\",\n    value: function medianpoolArraySize(ast, state) {\n      return this.maxpoolArraySize(ast, state);\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('TRANSPOSE'), function (matrix) {\n        var input = matrix.rawData();\n        var inputSize = matrix.size;\n        var result = [];\n\n        for (var i = 0; i < inputSize.width; ++i) {\n          result[i] = [];\n\n          for (var j = 0; j < inputSize.height; ++j) {\n            result[i][j] = input[j][i];\n          }\n        }\n\n        return SimpleRangeValue.onlyValues(result);\n      });\n    }\n  }, {\n    key: \"transposeArraySize\",\n    value: function transposeArraySize(ast, state) {\n      var _this7 = this;\n\n      if (ast.args.length !== 1) {\n        return ArraySize.error();\n      }\n\n      var metadata = this.metadata('MMULT');\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this7.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n\n      var _subChecks2 = _slicedToArray(subChecks, 1),\n          size = _subChecks2[0];\n\n      return new ArraySize(size.height, size.width);\n    }\n  }]);\n\n  return MatrixPlugin;\n}(FunctionPlugin);\nMatrixPlugin.implementedFunctions = {\n  'MMULT': {\n    method: 'mmult',\n    arraySizeMethod: 'mmultArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.RANGE\n    }],\n    vectorizationForbidden: true\n  },\n  'TRANSPOSE': {\n    method: 'transpose',\n    arraySizeMethod: 'transposeArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }],\n    vectorizationForbidden: true\n  },\n  'MAXPOOL': {\n    method: 'maxpool',\n    arraySizeMethod: 'maxpoolArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }],\n    vectorizationForbidden: true\n  },\n  'MEDIANPOOL': {\n    method: 'medianpool',\n    arraySizeMethod: 'medianpoolArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }],\n    vectorizationForbidden: true\n  }\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/plugin/MatrixPlugin.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","len","length","arr2","_i","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","ArraySize","CellError","ErrorType","ErrorMessage","AstNodeType","InterpreterState","SimpleRangeValue","ArgumentTypes","FunctionPlugin","arraySizeForMultiplication","leftArraySize","rightArraySize","width","height","arraySizeForPoolFunction","inputArray","windowSize","stride","MatrixPlugin","_FunctionPlugin","_super","interpreter","_this","createCpuKernel","kernel","outputSize","_len","args","_key","y","x","thread","createGpuJsKernel","getGpuInstance","createKernel","setPrecision","setOutput","config","gpujs","undefined","mmult","ast","state","_this2","runFunction","metadata","leftMatrix","rightMatrix","hasOnlyNumbers","VALUE","NumberRange","ArrayDimensions","size","a","b","sum","rawNumbers","onlyNumbers","mmultArraySize","_this3","error","subChecks","map","arg","_a","arraySizeForAst","formulaAddress","arraysFlag","arrayFunction","_subChecks","left","right","maxpool","_this4","matrix","leftCornerX","leftCornerY","currentMax","j","Math","max","medianpool","_this5","currentMin","i2","j2","min","numberOfElements","leftEnd","rightEnd","iter","medianGuess","medianGuessCount","i3","j3","maxpoolArraySize","_this6","array","windowArg","window","type","NUMBER","strideArg","medianpoolArraySize","transpose","input","rawData","inputSize","onlyValues","transposeArraySize","_this7","_subChecks2","implementedFunctions","method","arraySizeMethod","parameters","argumentType","RANGE","vectorizationForbidden","optionalArg"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArraySize } from '../../ArraySize';\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { InterpreterState } from '../InterpreterState';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n\nfunction arraySizeForMultiplication(leftArraySize, rightArraySize) {\n  return new ArraySize(rightArraySize.width, leftArraySize.height);\n}\n\nfunction arraySizeForPoolFunction(inputArray, windowSize, stride) {\n  return new ArraySize(1 + (inputArray.width - windowSize) / stride, 1 + (inputArray.height - windowSize) / stride);\n}\n\nexport var MatrixPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(MatrixPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(MatrixPlugin);\n\n  function MatrixPlugin(interpreter) {\n    var _this;\n\n    _classCallCheck(this, MatrixPlugin);\n\n    _this = _super.call(this, interpreter);\n\n    _this.createCpuKernel = function (kernel, outputSize) {\n      return function () {\n        var result = [];\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        for (var y = 0; y < outputSize.height; ++y) {\n          result.push([]);\n\n          for (var x = 0; x < outputSize.width; ++x) {\n            result[y][x] = kernel.apply({\n              thread: {\n                x: x,\n                y: y\n              }\n            }, args);\n          }\n        }\n\n        return result;\n      };\n    };\n\n    _this.createGpuJsKernel = function (kernel, outputSize) {\n      return _this.interpreter.getGpuInstance().createKernel(kernel).setPrecision('unsigned').setOutput([outputSize.width, outputSize.height]);\n    };\n\n    if (_this.config.gpujs === undefined) {\n      _this.createKernel = _this.createCpuKernel;\n    } else {\n      _this.createKernel = _this.createGpuJsKernel;\n    }\n\n    return _this;\n  }\n\n  _createClass(MatrixPlugin, [{\n    key: \"mmult\",\n    value: function mmult(ast, state) {\n      var _this2 = this;\n\n      return this.runFunction(ast.args, state, this.metadata('MMULT'), function (leftMatrix, rightMatrix) {\n        if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        if (rightMatrix.height() !== leftMatrix.width()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.ArrayDimensions);\n        }\n\n        var outputSize = arraySizeForMultiplication(leftMatrix.size, rightMatrix.size);\n\n        var result = _this2.createKernel(function (a, b, width) {\n          var sum = 0;\n\n          for (var i = 0; i < width; ++i) {\n            sum += a[this.thread.y][i] * b[i][this.thread.x];\n          }\n\n          return sum;\n        }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\n\n        return SimpleRangeValue.onlyNumbers(result);\n      });\n    }\n  }, {\n    key: \"mmultArraySize\",\n    value: function mmultArraySize(ast, state) {\n      var _this3 = this;\n\n      if (ast.args.length !== 2) {\n        return ArraySize.error();\n      }\n\n      var metadata = this.metadata('MMULT');\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this3.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n\n      var _subChecks = _slicedToArray(subChecks, 2),\n          left = _subChecks[0],\n          right = _subChecks[1];\n\n      return arraySizeForMultiplication(left, right);\n    }\n  }, {\n    key: \"maxpool\",\n    value: function maxpool(ast, state) {\n      var _this4 = this;\n\n      return this.runFunction(ast.args, state, this.metadata('MAXPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this4.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          return currentMax;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbers(result);\n      });\n    }\n  }, {\n    key: \"medianpool\",\n    value: function medianpool(ast, state) {\n      var _this5 = this;\n\n      return this.runFunction(ast.args, state, this.metadata('MEDIANPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = arraySizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this5.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          var currentMin = a[leftCornerY][leftCornerX];\n\n          for (var i2 = 0; i2 < windowSize; i2++) {\n            for (var j2 = 0; j2 < windowSize; j2++) {\n              currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\n            }\n          }\n\n          var numberOfElements = windowSize * windowSize;\n          var leftEnd = currentMin;\n          var rightEnd = currentMax;\n          var result = 42;\n\n          for (var iter = 0; iter < 32; iter++) {\n            var medianGuess = (leftEnd + rightEnd) / 2;\n            var medianGuessCount = 0;\n\n            for (var i3 = 0; i3 < windowSize; i3++) {\n              for (var j3 = 0; j3 < windowSize; j3++) {\n                if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\n                  medianGuessCount++;\n                }\n              }\n            }\n\n            if (windowSize % 2 === 0) {\n              if (medianGuessCount === numberOfElements / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > numberOfElements / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            } else {\n              if (medianGuessCount === (numberOfElements - 1) / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > (numberOfElements - 1) / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            }\n          }\n\n          return result;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbers(result);\n      });\n    }\n  }, {\n    key: \"maxpoolArraySize\",\n    value: function maxpoolArraySize(ast, state) {\n      var _this6 = this;\n\n      if (ast.args.length < 2 || ast.args.length > 3) {\n        return ArraySize.error();\n      }\n\n      var metadata = this.metadata('MAXPOOL');\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this6.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n      var array = subChecks[0];\n      var windowArg = ast.args[1];\n      var window;\n\n      if (windowArg.type === AstNodeType.NUMBER) {\n        window = windowArg.value;\n      } else {\n        window = 1;\n      }\n\n      var stride = window;\n\n      if (ast.args.length === 3) {\n        var strideArg = ast.args[2];\n\n        if (strideArg.type === AstNodeType.NUMBER) {\n          stride = strideArg.value;\n        } else {\n          stride = 1;\n        }\n      }\n\n      if (window > array.width || window > array.height || stride > window || (array.width - window) % stride !== 0 || (array.height - window) % stride !== 0) {\n        return ArraySize.error();\n      }\n\n      return arraySizeForPoolFunction(array, window, stride);\n    }\n  }, {\n    key: \"medianpoolArraySize\",\n    value: function medianpoolArraySize(ast, state) {\n      return this.maxpoolArraySize(ast, state);\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('TRANSPOSE'), function (matrix) {\n        var input = matrix.rawData();\n        var inputSize = matrix.size;\n        var result = [];\n\n        for (var i = 0; i < inputSize.width; ++i) {\n          result[i] = [];\n\n          for (var j = 0; j < inputSize.height; ++j) {\n            result[i][j] = input[j][i];\n          }\n        }\n\n        return SimpleRangeValue.onlyValues(result);\n      });\n    }\n  }, {\n    key: \"transposeArraySize\",\n    value: function transposeArraySize(ast, state) {\n      var _this7 = this;\n\n      if (ast.args.length !== 1) {\n        return ArraySize.error();\n      }\n\n      var metadata = this.metadata('MMULT');\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this7.arraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n\n      var _subChecks2 = _slicedToArray(subChecks, 1),\n          size = _subChecks2[0];\n\n      return new ArraySize(size.height, size.width);\n    }\n  }]);\n\n  return MatrixPlugin;\n}(FunctionPlugin);\nMatrixPlugin.implementedFunctions = {\n  'MMULT': {\n    method: 'mmult',\n    arraySizeMethod: 'mmultArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.RANGE\n    }],\n    vectorizationForbidden: true\n  },\n  'TRANSPOSE': {\n    method: 'transpose',\n    arraySizeMethod: 'transposeArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }],\n    vectorizationForbidden: true\n  },\n  'MAXPOOL': {\n    method: 'maxpool',\n    arraySizeMethod: 'maxpoolArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }],\n    vectorizationForbidden: true\n  },\n  'MEDIANPOOL': {\n    method: 'medianpool',\n    arraySizeMethod: 'medianpoolArraySize',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }],\n    vectorizationForbidden: true\n  }\n};"]},"metadata":{},"sourceType":"module"}