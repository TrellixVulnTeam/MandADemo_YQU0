{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport var RemoveRowsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(RemoveRowsTransformer, _Transformer);\n\n  var _super = _createSuper(RemoveRowsTransformer);\n\n  function RemoveRowsTransformer(rowsSpan) {\n    var _this;\n\n    _classCallCheck(this, RemoveRowsTransformer);\n\n    _this = _super.call(this);\n    _this.rowsSpan = rowsSpan;\n    return _this;\n  }\n\n  _createClass(RemoveRowsTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.rowsSpan.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return true;\n    }\n  }, {\n    key: \"transformColumnRangeAst\",\n    value: function transformColumnRangeAst(ast, _formulaAddress) {\n      return ast;\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      var absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress); // Case 4\n\n      if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n        return false;\n      } // Case 3 -- removed row in same sheet where dependency is but formula in different\n\n\n      if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n        var absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n\n        if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\n          // 3.ARa\n          return false;\n        } else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\n          // 3.ARb\n          return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n        }\n      } // Case 2 -- removed row in same sheet where formula but dependency in different sheet\n\n\n      if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n        if (dependencyAddress.isRowAbsolute()) {\n          // 2.A\n          return false;\n        } else {\n          if (formulaAddress.row < this.rowsSpan.rowStart) {\n            // 2.Ra\n            return false;\n          } else if (formulaAddress.row > this.rowsSpan.rowEnd) {\n            // 2.Rb\n            return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n          }\n        }\n      } // Case 1 -- same sheet\n\n\n      if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n        if (dependencyAddress.isRowAbsolute()) {\n          if (dependencyAddress.row < this.rowsSpan.rowStart) {\n            // 1.Aa\n            return false;\n          } else if (dependencyAddress.row > this.rowsSpan.rowEnd) {\n            // 1.Ab\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n          }\n        } else {\n          var _absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n\n          if (_absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\n              // 1.Raa\n              return false;\n            } else if (formulaAddress.row > this.rowsSpan.rowEnd) {\n              // 1.Rab\n              return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n            }\n          } else if (_absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\n              // 1.Rba\n              return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n            } else if (formulaAddress.row > this.rowsSpan.rowEnd) {\n              // 1.Rbb\n              return false;\n            }\n          }\n        }\n      } // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\n\n\n      return ErrorType.REF;\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(_start, _end, _formulaAddress) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n        return Object.assign(Object.assign({}, address), {\n          row: address.row - this.rowsSpan.numberOfRows\n        });\n      } else {\n        return address;\n      }\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var startSheet = absoluteSheetReference(start, formulaAddress);\n      var actualStart = start;\n      var actualEnd = end;\n\n      if (this.rowsSpan.sheet === startSheet) {\n        var startSCA = start.toSimpleRowAddress(formulaAddress);\n        var endSCA = end.toSimpleRowAddress(formulaAddress);\n\n        if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\n          return ErrorType.REF;\n        }\n\n        if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\n          actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\n        }\n\n        if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\n          actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\n        }\n      }\n\n      var newStart = this.transformCellAddress(actualStart, formulaAddress);\n      var newEnd = this.transformCellAddress(actualEnd, formulaAddress);\n\n      if (newStart === false && newEnd === false) {\n        return [actualStart, actualEnd];\n      } else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n        return ErrorType.REF;\n      } else {\n        return [newStart || actualStart, newEnd || actualEnd];\n      }\n    }\n  }]);\n\n  return RemoveRowsTransformer;\n}(Transformer);","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/dependencyTransformers/RemoveRowsTransformer.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","absoluteSheetReference","ErrorType","Transformer","RemoveRowsTransformer","_Transformer","_super","rowsSpan","_this","get","sheet","isIrreversible","transformColumnRangeAst","ast","_formulaAddress","transformCellAddress","dependencyAddress","formulaAddress","absoluteDependencySheet","absoluteDependencyAddress","toSimpleRowAddress","row","rowStart","rowEnd","shiftedByRows","numberOfRows","isRowAbsolute","_absoluteDependencyAddress","REF","transformCellRange","start","end","transformRange","transformRowRange","transformColumnRange","_start","_end","Error","fixNodeAddress","address","assign","startSheet","actualStart","actualEnd","startSCA","endSCA","newStart","newEnd"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport var RemoveRowsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(RemoveRowsTransformer, _Transformer);\n\n  var _super = _createSuper(RemoveRowsTransformer);\n\n  function RemoveRowsTransformer(rowsSpan) {\n    var _this;\n\n    _classCallCheck(this, RemoveRowsTransformer);\n\n    _this = _super.call(this);\n    _this.rowsSpan = rowsSpan;\n    return _this;\n  }\n\n  _createClass(RemoveRowsTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.rowsSpan.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return true;\n    }\n  }, {\n    key: \"transformColumnRangeAst\",\n    value: function transformColumnRangeAst(ast, _formulaAddress) {\n      return ast;\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      var absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress); // Case 4\n\n      if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n        return false;\n      } // Case 3 -- removed row in same sheet where dependency is but formula in different\n\n\n      if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n        var absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n\n        if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\n          // 3.ARa\n          return false;\n        } else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\n          // 3.ARb\n          return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n        }\n      } // Case 2 -- removed row in same sheet where formula but dependency in different sheet\n\n\n      if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n        if (dependencyAddress.isRowAbsolute()) {\n          // 2.A\n          return false;\n        } else {\n          if (formulaAddress.row < this.rowsSpan.rowStart) {\n            // 2.Ra\n            return false;\n          } else if (formulaAddress.row > this.rowsSpan.rowEnd) {\n            // 2.Rb\n            return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n          }\n        }\n      } // Case 1 -- same sheet\n\n\n      if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n        if (dependencyAddress.isRowAbsolute()) {\n          if (dependencyAddress.row < this.rowsSpan.rowStart) {\n            // 1.Aa\n            return false;\n          } else if (dependencyAddress.row > this.rowsSpan.rowEnd) {\n            // 1.Ab\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n          }\n        } else {\n          var _absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n\n          if (_absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\n              // 1.Raa\n              return false;\n            } else if (formulaAddress.row > this.rowsSpan.rowEnd) {\n              // 1.Rab\n              return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n            }\n          } else if (_absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\n              // 1.Rba\n              return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n            } else if (formulaAddress.row > this.rowsSpan.rowEnd) {\n              // 1.Rbb\n              return false;\n            }\n          }\n        }\n      } // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\n\n\n      return ErrorType.REF;\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(_start, _end, _formulaAddress) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n        return Object.assign(Object.assign({}, address), {\n          row: address.row - this.rowsSpan.numberOfRows\n        });\n      } else {\n        return address;\n      }\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var startSheet = absoluteSheetReference(start, formulaAddress);\n      var actualStart = start;\n      var actualEnd = end;\n\n      if (this.rowsSpan.sheet === startSheet) {\n        var startSCA = start.toSimpleRowAddress(formulaAddress);\n        var endSCA = end.toSimpleRowAddress(formulaAddress);\n\n        if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\n          return ErrorType.REF;\n        }\n\n        if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\n          actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\n        }\n\n        if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\n          actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\n        }\n      }\n\n      var newStart = this.transformCellAddress(actualStart, formulaAddress);\n      var newEnd = this.transformCellAddress(actualEnd, formulaAddress);\n\n      if (newStart === false && newEnd === false) {\n        return [actualStart, actualEnd];\n      } else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n        return ErrorType.REF;\n      } else {\n        return [newStart || actualStart, newEnd || actualEnd];\n      }\n    }\n  }]);\n\n  return RemoveRowsTransformer;\n}(Transformer);"]},"metadata":{},"sourceType":"module"}