{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { besseli, besselj, besselk, bessely } from './3rdparty/bessel/bessel';\nimport { beta, binomial, centralF, chisquare, erf as _erf, erfc as _erfc, exponential, gamma, gammafn, gammaln as _gammaln, hypgeom, lognormal, negbin, normal, normalci, poisson, studentt, tci, weibull } from './3rdparty/jstat/jstat';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport var StatisticalPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(StatisticalPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(StatisticalPlugin);\n\n  function StatisticalPlugin() {\n    _classCallCheck(this, StatisticalPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StatisticalPlugin, [{\n    key: \"erf\",\n    value: function erf(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('ERF'), function (lowerBound, upperBound) {\n        if (upperBound === undefined) {\n          return _erf(lowerBound);\n        } else {\n          return _erf(upperBound) - _erf(lowerBound);\n        }\n      });\n    }\n  }, {\n    key: \"erfc\",\n    value: function erfc(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('ERFC'), _erfc);\n    }\n  }, {\n    key: \"expondist\",\n    value: function expondist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('EXPON.DIST'), function (x, lambda, cumulative) {\n        if (cumulative) {\n          return exponential.cdf(x, lambda);\n        } else {\n          return exponential.pdf(x, lambda);\n        }\n      });\n    }\n  }, {\n    key: \"fisher\",\n    value: function fisher(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('FISHER'), function (x) {\n        return Math.log((1 + x) / (1 - x)) / 2;\n      });\n    }\n  }, {\n    key: \"fisherinv\",\n    value: function fisherinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('FISHERINV'), function (y) {\n        return 1 - 2 / (Math.exp(2 * y) + 1);\n      });\n    }\n  }, {\n    key: \"gamma\",\n    value: function gamma(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMA'), gammafn);\n    }\n  }, {\n    key: \"gammadist\",\n    value: function gammadist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMA.DIST'), function (value, alphaVal, betaVal, cumulative) {\n        if (cumulative) {\n          return gamma.cdf(value, alphaVal, betaVal);\n        } else {\n          return gamma.pdf(value, alphaVal, betaVal);\n        }\n      });\n    }\n  }, {\n    key: \"gammaln\",\n    value: function gammaln(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMALN'), _gammaln);\n    }\n  }, {\n    key: \"gammainv\",\n    value: function gammainv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMA.INV'), gamma.inv);\n    }\n  }, {\n    key: \"gauss\",\n    value: function gauss(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAUSS'), function (z) {\n        return normal.cdf(z, 0, 1) - 0.5;\n      });\n    }\n  }, {\n    key: \"betadist\",\n    value: function betadist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BETA.DIST'), function (x, alphaVal, betaVal, cumulative, A, B) {\n        if (x <= A) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n        } else if (x >= B) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n        }\n\n        x = (x - A) / (B - A);\n\n        if (cumulative) {\n          return beta.cdf(x, alphaVal, betaVal);\n        } else {\n          return beta.pdf(x, alphaVal, betaVal);\n        }\n      });\n    }\n  }, {\n    key: \"betainv\",\n    value: function betainv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BETA.INV'), function (x, alphaVal, betaVal, A, B) {\n        if (A >= B) {\n          return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n        } else {\n          return beta.inv(x, alphaVal, betaVal) * (B - A) + A;\n        }\n      });\n    }\n  }, {\n    key: \"binomialdist\",\n    value: function binomialdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BINOM.DIST'), function (succ, trials, prob, cumulative) {\n        if (succ > trials) {\n          return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n        }\n\n        succ = Math.trunc(succ);\n        trials = Math.trunc(trials);\n\n        if (cumulative) {\n          return binomial.cdf(succ, trials, prob);\n        } else {\n          return binomial.pdf(succ, trials, prob);\n        }\n      });\n    }\n  }, {\n    key: \"binomialinv\",\n    value: function binomialinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BINOM.INV'), function (trials, prob, alpha) {\n        trials = Math.trunc(trials);\n        var lower = -1;\n        var upper = trials;\n\n        while (upper > lower + 1) {\n          var mid = Math.trunc((lower + upper) / 2);\n\n          if (binomial.cdf(mid, trials, prob) >= alpha) {\n            upper = mid;\n          } else {\n            lower = mid;\n          }\n        }\n\n        return upper;\n      });\n    }\n  }, {\n    key: \"besselifn\",\n    value: function besselifn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELI'), function (x, n) {\n        return besseli(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"besseljfn\",\n    value: function besseljfn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELJ'), function (x, n) {\n        return besselj(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"besselkfn\",\n    value: function besselkfn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELK'), function (x, n) {\n        return besselk(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"besselyfn\",\n    value: function besselyfn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELY'), function (x, n) {\n        return bessely(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"chisqdist\",\n    value: function chisqdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST'), function (x, deg, cumulative) {\n        deg = Math.trunc(deg);\n\n        if (cumulative) {\n          return chisquare.cdf(x, deg);\n        } else {\n          return chisquare.pdf(x, deg);\n        }\n      });\n    }\n  }, {\n    key: \"chisqdistrt\",\n    value: function chisqdistrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST.RT'), function (x, deg) {\n        return 1 - chisquare.cdf(x, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"chisqinv\",\n    value: function chisqinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.INV'), function (p, deg) {\n        return chisquare.inv(p, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"chisqinvrt\",\n    value: function chisqinvrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.INV.RT'), function (p, deg) {\n        return chisquare.inv(1.0 - p, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"fdist\",\n    value: function fdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.DIST'), function (x, deg1, deg2, cumulative) {\n        deg1 = Math.trunc(deg1);\n        deg2 = Math.trunc(deg2);\n\n        if (cumulative) {\n          return centralF.cdf(x, deg1, deg2);\n        } else {\n          return centralF.pdf(x, deg1, deg2);\n        }\n      });\n    }\n  }, {\n    key: \"fdistrt\",\n    value: function fdistrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.DIST.RT'), function (x, deg1, deg2) {\n        return 1 - centralF.cdf(x, Math.trunc(deg1), Math.trunc(deg2));\n      });\n    }\n  }, {\n    key: \"finv\",\n    value: function finv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.INV'), function (p, deg1, deg2) {\n        return centralF.inv(p, Math.trunc(deg1), Math.trunc(deg2));\n      });\n    }\n  }, {\n    key: \"finvrt\",\n    value: function finvrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.INV.RT'), function (p, deg1, deg2) {\n        return centralF.inv(1.0 - p, Math.trunc(deg1), Math.trunc(deg2));\n      });\n    }\n  }, {\n    key: \"weibulldist\",\n    value: function weibulldist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('WEIBULL.DIST'), function (x, shape, scale, cumulative) {\n        if (cumulative) {\n          return weibull.cdf(x, scale, shape);\n        } else {\n          return weibull.pdf(x, scale, shape);\n        }\n      });\n    }\n  }, {\n    key: \"poissondist\",\n    value: function poissondist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('POISSON.DIST'), function (x, mean, cumulative) {\n        x = Math.trunc(x);\n\n        if (cumulative) {\n          return poisson.cdf(x, mean);\n        } else {\n          return poisson.pdf(x, mean);\n        }\n      });\n    }\n  }, {\n    key: \"hypgeomdist\",\n    value: function hypgeomdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HYPGEOM.DIST'), function (s, numberS, populationS, numberPop, cumulative) {\n        if (s > numberS || s > populationS || numberS > numberPop || populationS > numberPop) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n        }\n\n        if (s + numberPop < populationS + numberS) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n        }\n\n        s = Math.trunc(s);\n        numberS = Math.trunc(numberS);\n        populationS = Math.trunc(populationS);\n        numberPop = Math.trunc(numberPop);\n\n        if (cumulative) {\n          return hypgeom.cdf(s, numberPop, populationS, numberS);\n        } else {\n          return hypgeom.pdf(s, numberPop, populationS, numberS);\n        }\n      });\n    }\n  }, {\n    key: \"tdist\",\n    value: function tdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.DIST'), function (x, deg, cumulative) {\n        deg = Math.trunc(deg);\n\n        if (cumulative) {\n          return studentt.cdf(x, deg);\n        } else {\n          return studentt.pdf(x, deg);\n        }\n      });\n    }\n  }, {\n    key: \"tdist2t\",\n    value: function tdist2t(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.DIST.2T'), function (x, deg) {\n        return (1 - studentt.cdf(x, Math.trunc(deg))) * 2;\n      });\n    }\n  }, {\n    key: \"tdistrt\",\n    value: function tdistrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.DIST.RT'), function (x, deg) {\n        return 1 - studentt.cdf(x, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"tdistold\",\n    value: function tdistold(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('TDIST'), function (x, deg, mode) {\n        return mode * (1 - studentt.cdf(x, Math.trunc(deg)));\n      });\n    }\n  }, {\n    key: \"tinv\",\n    value: function tinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.INV'), function (p, deg) {\n        return studentt.inv(p, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"tinv2t\",\n    value: function tinv2t(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.INV.2T'), function (p, deg) {\n        return studentt.inv(1 - p / 2, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"lognormdist\",\n    value: function lognormdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LOGNORM.DIST'), function (x, mean, stddev, cumulative) {\n        if (cumulative) {\n          return lognormal.cdf(x, mean, stddev);\n        } else {\n          return lognormal.pdf(x, mean, stddev);\n        }\n      });\n    }\n  }, {\n    key: \"lognorminv\",\n    value: function lognorminv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LOGNORM.INV'), function (p, mean, stddev) {\n        return lognormal.inv(p, mean, stddev);\n      });\n    }\n  }, {\n    key: \"normdist\",\n    value: function normdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.DIST'), function (x, mean, stddev, cumulative) {\n        if (cumulative) {\n          return normal.cdf(x, mean, stddev);\n        } else {\n          return normal.pdf(x, mean, stddev);\n        }\n      });\n    }\n  }, {\n    key: \"norminv\",\n    value: function norminv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.INV'), function (p, mean, stddev) {\n        return normal.inv(p, mean, stddev);\n      });\n    }\n  }, {\n    key: \"normsdist\",\n    value: function normsdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.S.DIST'), function (x, cumulative) {\n        if (cumulative) {\n          return normal.cdf(x, 0, 1);\n        } else {\n          return normal.pdf(x, 0, 1);\n        }\n      });\n    }\n  }, {\n    key: \"normsinv\",\n    value: function normsinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.S.INV'), function (p) {\n        return normal.inv(p, 0, 1);\n      });\n    }\n  }, {\n    key: \"phi\",\n    value: function phi(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('PHI'), function (x) {\n        return normal.pdf(x, 0, 1);\n      });\n    }\n  }, {\n    key: \"negbinomdist\",\n    value: function negbinomdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NEGBINOM.DIST'), function (nf, ns, p, cumulative) {\n        nf = Math.trunc(nf);\n        ns = Math.trunc(ns);\n\n        if (cumulative) {\n          return negbin.cdf(nf, ns, p);\n        } else {\n          return negbin.pdf(nf, ns, p);\n        }\n      });\n    }\n  }, {\n    key: \"confidencenorm\",\n    value: function confidencenorm(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.NORM'), // eslint-disable-next-line\n      // @ts-ignore\n      function (alpha, stddev, size) {\n        return normalci(1, alpha, stddev, Math.trunc(size))[1] - 1;\n      });\n    }\n  }, {\n    key: \"confidencet\",\n    value: function confidencet(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.T'), function (alpha, stddev, size) {\n        size = Math.trunc(size);\n\n        if (size === 1) {\n          return new CellError(ErrorType.DIV_BY_ZERO);\n        } // eslint-disable-next-line\n        // @ts-ignore\n\n\n        return tci(1, alpha, stddev, size)[1] - 1;\n      });\n    }\n  }, {\n    key: \"standardize\",\n    value: function standardize(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('STANDARDIZE'), function (x, mean, stddev) {\n        return (x - mean) / stddev;\n      });\n    }\n  }]);\n\n  return StatisticalPlugin;\n}(FunctionPlugin);\nStatisticalPlugin.implementedFunctions = {\n  'ERF': {\n    method: 'erf',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  },\n  'ERFC': {\n    method: 'erfc',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'EXPON.DIST': {\n    method: 'expondist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'FISHER': {\n    method: 'fisher',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: -1,\n      lessThan: 1\n    }]\n  },\n  'FISHERINV': {\n    method: 'fisherinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'GAMMA': {\n    method: 'gamma',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'GAMMA.DIST': {\n    method: 'gammadist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'GAMMALN': {\n    method: 'gammaln',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'GAMMA.INV': {\n    method: 'gammainv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'GAUSS': {\n    method: 'gauss',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'BETA.DIST': {\n    method: 'betadist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'BETA.INV': {\n    method: 'betainv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'BINOM.DIST': {\n    method: 'binomialdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'BINOM.INV': {\n    method: 'binomialinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }]\n  },\n  'BESSELI': {\n    method: 'besselifn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'BESSELJ': {\n    method: 'besseljfn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'BESSELK': {\n    method: 'besselkfn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'BESSELY': {\n    method: 'besselyfn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'CHISQ.DIST': {\n    method: 'chisqdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1,\n      maxValue: 1e10\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'CHISQ.DIST.RT': {\n    method: 'chisqdistrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1,\n      maxValue: 1e10\n    }]\n  },\n  'CHISQ.INV': {\n    method: 'chisqinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1,\n      maxValue: 1e10\n    }]\n  },\n  'CHISQ.INV.RT': {\n    method: 'chisqinvrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'F.DIST': {\n    method: 'fdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'F.DIST.RT': {\n    method: 'fdistrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'F.INV': {\n    method: 'finv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'F.INV.RT': {\n    method: 'finvrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'WEIBULL.DIST': {\n    method: 'weibulldist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'POISSON.DIST': {\n    method: 'poissondist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'HYPGEOM.DIST': {\n    method: 'hypgeomdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'T.DIST': {\n    method: 'tdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'T.DIST.2T': {\n    method: 'tdist2t',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'T.DIST.RT': {\n    method: 'tdistrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'TDIST': {\n    method: 'tdistold',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.INTEGER,\n      minValue: 1,\n      maxValue: 2\n    }]\n  },\n  'T.INV': {\n    method: 'tinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'T.INV.2T': {\n    method: 'tinv2t',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'LOGNORM.DIST': {\n    method: 'lognormdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'LOGNORM.INV': {\n    method: 'lognorminv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'NORM.DIST': {\n    method: 'normdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'NORM.INV': {\n    method: 'norminv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'NORM.S.DIST': {\n    method: 'normsdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'NORM.S.INV': {\n    method: 'normsinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }]\n  },\n  'PHI': {\n    method: 'phi',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'NEGBINOM.DIST': {\n    method: 'negbinomdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'CONFIDENCE.NORM': {\n    method: 'confidencenorm',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'CONFIDENCE.T': {\n    method: 'confidencet',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'STANDARDIZE': {\n    method: 'standardize',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  }\n};\nStatisticalPlugin.aliases = {\n  NEGBINOMDIST: 'NEGBINOM.DIST',\n  EXPONDIST: 'EXPON.DIST',\n  BETADIST: 'BETA.DIST',\n  NORMDIST: 'NORM.DIST',\n  NORMINV: 'NORM.INV',\n  NORMSDIST: 'NORM.S.DIST',\n  NORMSINV: 'NORM.S.INV',\n  LOGNORMDIST: 'LOGNORM.DIST',\n  LOGINV: 'LOGNORM.INV',\n  TINV: 'T.INV.2T',\n  HYPGEOMDIST: 'HYPGEOM.DIST',\n  POISSON: 'POISSON.DIST',\n  WEIBULL: 'WEIBULL.DIST',\n  FINV: 'F.INV.RT',\n  FDIST: 'F.DIST.RT',\n  CHIDIST: 'CHISQ.DIST.RT',\n  CHIINV: 'CHISQ.INV.RT',\n  GAMMADIST: 'GAMMA.DIST',\n  'GAMMALN.PRECISE': 'GAMMALN',\n  GAMMAINV: 'GAMMA.INV',\n  BETAINV: 'BETA.INV',\n  BINOMDIST: 'BINOM.DIST',\n  CONFIDENCE: 'CONFIDENCE.NORM',\n  CRITBINOM: 'BINOM.INV',\n  WEIBULLDIST: 'WEIBULL.DIST',\n  TINV2T: 'T.INV.2T',\n  TDISTRT: 'T.DIST.RT',\n  TDIST2T: 'T.DIST.2T',\n  FINVRT: 'F.INV.RT',\n  FDISTRT: 'F.DIST.RT',\n  CHIDISTRT: 'CHISQ.DIST.RT',\n  CHIINVRT: 'CHISQ.INV.RT',\n  LOGNORMINV: 'LOGNORM.INV',\n  POISSONDIST: 'POISSON.DIST'\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/plugin/StatisticalPlugin.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","CellError","ErrorType","ErrorMessage","besseli","besselj","besselk","bessely","beta","binomial","centralF","chisquare","erf","_erf","erfc","_erfc","exponential","gamma","gammafn","gammaln","_gammaln","hypgeom","lognormal","negbin","normal","normalci","poisson","studentt","tci","weibull","ArgumentTypes","FunctionPlugin","StatisticalPlugin","_FunctionPlugin","_super","ast","state","runFunction","args","metadata","lowerBound","upperBound","undefined","expondist","x","lambda","cumulative","cdf","pdf","fisher","Math","log","fisherinv","y","exp","gammadist","alphaVal","betaVal","gammainv","inv","gauss","z","betadist","A","B","NUM","ValueSmall","ValueLarge","betainv","WrongOrder","binomialdist","succ","trials","prob","trunc","binomialinv","alpha","lower","upper","mid","besselifn","n","besseljfn","besselkfn","besselyfn","chisqdist","deg","chisqdistrt","chisqinv","chisqinvrt","fdist","deg1","deg2","fdistrt","finv","finvrt","weibulldist","shape","scale","poissondist","mean","hypgeomdist","s","numberS","populationS","numberPop","tdist","tdist2t","tdistrt","tdistold","mode","tinv","tinv2t","lognormdist","stddev","lognorminv","normdist","norminv","normsdist","normsinv","phi","negbinomdist","nf","ns","confidencenorm","size","confidencet","DIV_BY_ZERO","standardize","implementedFunctions","method","parameters","argumentType","NUMBER","optionalArg","minValue","greaterThan","BOOLEAN","lessThan","defaultValue","maxValue","INTEGER","aliases","NEGBINOMDIST","EXPONDIST","BETADIST","NORMDIST","NORMINV","NORMSDIST","NORMSINV","LOGNORMDIST","LOGINV","TINV","HYPGEOMDIST","POISSON","WEIBULL","FINV","FDIST","CHIDIST","CHIINV","GAMMADIST","GAMMAINV","BETAINV","BINOMDIST","CONFIDENCE","CRITBINOM","WEIBULLDIST","TINV2T","TDISTRT","TDIST2T","FINVRT","FDISTRT","CHIDISTRT","CHIINVRT","LOGNORMINV","POISSONDIST"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.math.trunc.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { besseli, besselj, besselk, bessely } from './3rdparty/bessel/bessel';\nimport { beta, binomial, centralF, chisquare, erf as _erf, erfc as _erfc, exponential, gamma, gammafn, gammaln as _gammaln, hypgeom, lognormal, negbin, normal, normalci, poisson, studentt, tci, weibull } from './3rdparty/jstat/jstat';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport var StatisticalPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(StatisticalPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(StatisticalPlugin);\n\n  function StatisticalPlugin() {\n    _classCallCheck(this, StatisticalPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StatisticalPlugin, [{\n    key: \"erf\",\n    value: function erf(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('ERF'), function (lowerBound, upperBound) {\n        if (upperBound === undefined) {\n          return _erf(lowerBound);\n        } else {\n          return _erf(upperBound) - _erf(lowerBound);\n        }\n      });\n    }\n  }, {\n    key: \"erfc\",\n    value: function erfc(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('ERFC'), _erfc);\n    }\n  }, {\n    key: \"expondist\",\n    value: function expondist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('EXPON.DIST'), function (x, lambda, cumulative) {\n        if (cumulative) {\n          return exponential.cdf(x, lambda);\n        } else {\n          return exponential.pdf(x, lambda);\n        }\n      });\n    }\n  }, {\n    key: \"fisher\",\n    value: function fisher(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('FISHER'), function (x) {\n        return Math.log((1 + x) / (1 - x)) / 2;\n      });\n    }\n  }, {\n    key: \"fisherinv\",\n    value: function fisherinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('FISHERINV'), function (y) {\n        return 1 - 2 / (Math.exp(2 * y) + 1);\n      });\n    }\n  }, {\n    key: \"gamma\",\n    value: function gamma(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMA'), gammafn);\n    }\n  }, {\n    key: \"gammadist\",\n    value: function gammadist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMA.DIST'), function (value, alphaVal, betaVal, cumulative) {\n        if (cumulative) {\n          return gamma.cdf(value, alphaVal, betaVal);\n        } else {\n          return gamma.pdf(value, alphaVal, betaVal);\n        }\n      });\n    }\n  }, {\n    key: \"gammaln\",\n    value: function gammaln(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMALN'), _gammaln);\n    }\n  }, {\n    key: \"gammainv\",\n    value: function gammainv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAMMA.INV'), gamma.inv);\n    }\n  }, {\n    key: \"gauss\",\n    value: function gauss(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('GAUSS'), function (z) {\n        return normal.cdf(z, 0, 1) - 0.5;\n      });\n    }\n  }, {\n    key: \"betadist\",\n    value: function betadist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BETA.DIST'), function (x, alphaVal, betaVal, cumulative, A, B) {\n        if (x <= A) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n        } else if (x >= B) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n        }\n\n        x = (x - A) / (B - A);\n\n        if (cumulative) {\n          return beta.cdf(x, alphaVal, betaVal);\n        } else {\n          return beta.pdf(x, alphaVal, betaVal);\n        }\n      });\n    }\n  }, {\n    key: \"betainv\",\n    value: function betainv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BETA.INV'), function (x, alphaVal, betaVal, A, B) {\n        if (A >= B) {\n          return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n        } else {\n          return beta.inv(x, alphaVal, betaVal) * (B - A) + A;\n        }\n      });\n    }\n  }, {\n    key: \"binomialdist\",\n    value: function binomialdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BINOM.DIST'), function (succ, trials, prob, cumulative) {\n        if (succ > trials) {\n          return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n        }\n\n        succ = Math.trunc(succ);\n        trials = Math.trunc(trials);\n\n        if (cumulative) {\n          return binomial.cdf(succ, trials, prob);\n        } else {\n          return binomial.pdf(succ, trials, prob);\n        }\n      });\n    }\n  }, {\n    key: \"binomialinv\",\n    value: function binomialinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BINOM.INV'), function (trials, prob, alpha) {\n        trials = Math.trunc(trials);\n        var lower = -1;\n        var upper = trials;\n\n        while (upper > lower + 1) {\n          var mid = Math.trunc((lower + upper) / 2);\n\n          if (binomial.cdf(mid, trials, prob) >= alpha) {\n            upper = mid;\n          } else {\n            lower = mid;\n          }\n        }\n\n        return upper;\n      });\n    }\n  }, {\n    key: \"besselifn\",\n    value: function besselifn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELI'), function (x, n) {\n        return besseli(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"besseljfn\",\n    value: function besseljfn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELJ'), function (x, n) {\n        return besselj(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"besselkfn\",\n    value: function besselkfn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELK'), function (x, n) {\n        return besselk(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"besselyfn\",\n    value: function besselyfn(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('BESSELY'), function (x, n) {\n        return bessely(x, Math.trunc(n));\n      });\n    }\n  }, {\n    key: \"chisqdist\",\n    value: function chisqdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST'), function (x, deg, cumulative) {\n        deg = Math.trunc(deg);\n\n        if (cumulative) {\n          return chisquare.cdf(x, deg);\n        } else {\n          return chisquare.pdf(x, deg);\n        }\n      });\n    }\n  }, {\n    key: \"chisqdistrt\",\n    value: function chisqdistrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.DIST.RT'), function (x, deg) {\n        return 1 - chisquare.cdf(x, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"chisqinv\",\n    value: function chisqinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.INV'), function (p, deg) {\n        return chisquare.inv(p, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"chisqinvrt\",\n    value: function chisqinvrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CHISQ.INV.RT'), function (p, deg) {\n        return chisquare.inv(1.0 - p, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"fdist\",\n    value: function fdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.DIST'), function (x, deg1, deg2, cumulative) {\n        deg1 = Math.trunc(deg1);\n        deg2 = Math.trunc(deg2);\n\n        if (cumulative) {\n          return centralF.cdf(x, deg1, deg2);\n        } else {\n          return centralF.pdf(x, deg1, deg2);\n        }\n      });\n    }\n  }, {\n    key: \"fdistrt\",\n    value: function fdistrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.DIST.RT'), function (x, deg1, deg2) {\n        return 1 - centralF.cdf(x, Math.trunc(deg1), Math.trunc(deg2));\n      });\n    }\n  }, {\n    key: \"finv\",\n    value: function finv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.INV'), function (p, deg1, deg2) {\n        return centralF.inv(p, Math.trunc(deg1), Math.trunc(deg2));\n      });\n    }\n  }, {\n    key: \"finvrt\",\n    value: function finvrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('F.INV.RT'), function (p, deg1, deg2) {\n        return centralF.inv(1.0 - p, Math.trunc(deg1), Math.trunc(deg2));\n      });\n    }\n  }, {\n    key: \"weibulldist\",\n    value: function weibulldist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('WEIBULL.DIST'), function (x, shape, scale, cumulative) {\n        if (cumulative) {\n          return weibull.cdf(x, scale, shape);\n        } else {\n          return weibull.pdf(x, scale, shape);\n        }\n      });\n    }\n  }, {\n    key: \"poissondist\",\n    value: function poissondist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('POISSON.DIST'), function (x, mean, cumulative) {\n        x = Math.trunc(x);\n\n        if (cumulative) {\n          return poisson.cdf(x, mean);\n        } else {\n          return poisson.pdf(x, mean);\n        }\n      });\n    }\n  }, {\n    key: \"hypgeomdist\",\n    value: function hypgeomdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('HYPGEOM.DIST'), function (s, numberS, populationS, numberPop, cumulative) {\n        if (s > numberS || s > populationS || numberS > numberPop || populationS > numberPop) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n        }\n\n        if (s + numberPop < populationS + numberS) {\n          return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n        }\n\n        s = Math.trunc(s);\n        numberS = Math.trunc(numberS);\n        populationS = Math.trunc(populationS);\n        numberPop = Math.trunc(numberPop);\n\n        if (cumulative) {\n          return hypgeom.cdf(s, numberPop, populationS, numberS);\n        } else {\n          return hypgeom.pdf(s, numberPop, populationS, numberS);\n        }\n      });\n    }\n  }, {\n    key: \"tdist\",\n    value: function tdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.DIST'), function (x, deg, cumulative) {\n        deg = Math.trunc(deg);\n\n        if (cumulative) {\n          return studentt.cdf(x, deg);\n        } else {\n          return studentt.pdf(x, deg);\n        }\n      });\n    }\n  }, {\n    key: \"tdist2t\",\n    value: function tdist2t(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.DIST.2T'), function (x, deg) {\n        return (1 - studentt.cdf(x, Math.trunc(deg))) * 2;\n      });\n    }\n  }, {\n    key: \"tdistrt\",\n    value: function tdistrt(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.DIST.RT'), function (x, deg) {\n        return 1 - studentt.cdf(x, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"tdistold\",\n    value: function tdistold(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('TDIST'), function (x, deg, mode) {\n        return mode * (1 - studentt.cdf(x, Math.trunc(deg)));\n      });\n    }\n  }, {\n    key: \"tinv\",\n    value: function tinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.INV'), function (p, deg) {\n        return studentt.inv(p, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"tinv2t\",\n    value: function tinv2t(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T.INV.2T'), function (p, deg) {\n        return studentt.inv(1 - p / 2, Math.trunc(deg));\n      });\n    }\n  }, {\n    key: \"lognormdist\",\n    value: function lognormdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LOGNORM.DIST'), function (x, mean, stddev, cumulative) {\n        if (cumulative) {\n          return lognormal.cdf(x, mean, stddev);\n        } else {\n          return lognormal.pdf(x, mean, stddev);\n        }\n      });\n    }\n  }, {\n    key: \"lognorminv\",\n    value: function lognorminv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LOGNORM.INV'), function (p, mean, stddev) {\n        return lognormal.inv(p, mean, stddev);\n      });\n    }\n  }, {\n    key: \"normdist\",\n    value: function normdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.DIST'), function (x, mean, stddev, cumulative) {\n        if (cumulative) {\n          return normal.cdf(x, mean, stddev);\n        } else {\n          return normal.pdf(x, mean, stddev);\n        }\n      });\n    }\n  }, {\n    key: \"norminv\",\n    value: function norminv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.INV'), function (p, mean, stddev) {\n        return normal.inv(p, mean, stddev);\n      });\n    }\n  }, {\n    key: \"normsdist\",\n    value: function normsdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.S.DIST'), function (x, cumulative) {\n        if (cumulative) {\n          return normal.cdf(x, 0, 1);\n        } else {\n          return normal.pdf(x, 0, 1);\n        }\n      });\n    }\n  }, {\n    key: \"normsinv\",\n    value: function normsinv(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NORM.S.INV'), function (p) {\n        return normal.inv(p, 0, 1);\n      });\n    }\n  }, {\n    key: \"phi\",\n    value: function phi(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('PHI'), function (x) {\n        return normal.pdf(x, 0, 1);\n      });\n    }\n  }, {\n    key: \"negbinomdist\",\n    value: function negbinomdist(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('NEGBINOM.DIST'), function (nf, ns, p, cumulative) {\n        nf = Math.trunc(nf);\n        ns = Math.trunc(ns);\n\n        if (cumulative) {\n          return negbin.cdf(nf, ns, p);\n        } else {\n          return negbin.pdf(nf, ns, p);\n        }\n      });\n    }\n  }, {\n    key: \"confidencenorm\",\n    value: function confidencenorm(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.NORM'), // eslint-disable-next-line\n      // @ts-ignore\n      function (alpha, stddev, size) {\n        return normalci(1, alpha, stddev, Math.trunc(size))[1] - 1;\n      });\n    }\n  }, {\n    key: \"confidencet\",\n    value: function confidencet(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CONFIDENCE.T'), function (alpha, stddev, size) {\n        size = Math.trunc(size);\n\n        if (size === 1) {\n          return new CellError(ErrorType.DIV_BY_ZERO);\n        } // eslint-disable-next-line\n        // @ts-ignore\n\n\n        return tci(1, alpha, stddev, size)[1] - 1;\n      });\n    }\n  }, {\n    key: \"standardize\",\n    value: function standardize(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('STANDARDIZE'), function (x, mean, stddev) {\n        return (x - mean) / stddev;\n      });\n    }\n  }]);\n\n  return StatisticalPlugin;\n}(FunctionPlugin);\nStatisticalPlugin.implementedFunctions = {\n  'ERF': {\n    method: 'erf',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  },\n  'ERFC': {\n    method: 'erfc',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'EXPON.DIST': {\n    method: 'expondist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'FISHER': {\n    method: 'fisher',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: -1,\n      lessThan: 1\n    }]\n  },\n  'FISHERINV': {\n    method: 'fisherinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'GAMMA': {\n    method: 'gamma',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'GAMMA.DIST': {\n    method: 'gammadist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'GAMMALN': {\n    method: 'gammaln',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'GAMMA.INV': {\n    method: 'gammainv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'GAUSS': {\n    method: 'gauss',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'BETA.DIST': {\n    method: 'betadist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'BETA.INV': {\n    method: 'betainv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'BINOM.DIST': {\n    method: 'binomialdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'BINOM.INV': {\n    method: 'binomialinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }]\n  },\n  'BESSELI': {\n    method: 'besselifn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'BESSELJ': {\n    method: 'besseljfn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'BESSELK': {\n    method: 'besselkfn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'BESSELY': {\n    method: 'besselyfn',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }]\n  },\n  'CHISQ.DIST': {\n    method: 'chisqdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1,\n      maxValue: 1e10\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'CHISQ.DIST.RT': {\n    method: 'chisqdistrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1,\n      maxValue: 1e10\n    }]\n  },\n  'CHISQ.INV': {\n    method: 'chisqinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1,\n      maxValue: 1e10\n    }]\n  },\n  'CHISQ.INV.RT': {\n    method: 'chisqinvrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'F.DIST': {\n    method: 'fdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'F.DIST.RT': {\n    method: 'fdistrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'F.INV': {\n    method: 'finv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'F.INV.RT': {\n    method: 'finvrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'WEIBULL.DIST': {\n    method: 'weibulldist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'POISSON.DIST': {\n    method: 'poissondist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'HYPGEOM.DIST': {\n    method: 'hypgeomdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'T.DIST': {\n    method: 'tdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'T.DIST.2T': {\n    method: 'tdist2t',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'T.DIST.RT': {\n    method: 'tdistrt',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'TDIST': {\n    method: 'tdistold',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.INTEGER,\n      minValue: 1,\n      maxValue: 2\n    }]\n  },\n  'T.INV': {\n    method: 'tinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'T.INV.2T': {\n    method: 'tinv2t',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'LOGNORM.DIST': {\n    method: 'lognormdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'LOGNORM.INV': {\n    method: 'lognorminv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'NORM.DIST': {\n    method: 'normdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'NORM.INV': {\n    method: 'norminv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  },\n  'NORM.S.DIST': {\n    method: 'normsdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'NORM.S.INV': {\n    method: 'normsinv',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }]\n  },\n  'PHI': {\n    method: 'phi',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'NEGBINOM.DIST': {\n    method: 'negbinomdist',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 0,\n      maxValue: 1\n    }, {\n      argumentType: ArgumentTypes.BOOLEAN\n    }]\n  },\n  'CONFIDENCE.NORM': {\n    method: 'confidencenorm',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'CONFIDENCE.T': {\n    method: 'confidencet',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0,\n      lessThan: 1\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      minValue: 1\n    }]\n  },\n  'STANDARDIZE': {\n    method: 'standardize',\n    parameters: [{\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      greaterThan: 0\n    }]\n  }\n};\nStatisticalPlugin.aliases = {\n  NEGBINOMDIST: 'NEGBINOM.DIST',\n  EXPONDIST: 'EXPON.DIST',\n  BETADIST: 'BETA.DIST',\n  NORMDIST: 'NORM.DIST',\n  NORMINV: 'NORM.INV',\n  NORMSDIST: 'NORM.S.DIST',\n  NORMSINV: 'NORM.S.INV',\n  LOGNORMDIST: 'LOGNORM.DIST',\n  LOGINV: 'LOGNORM.INV',\n  TINV: 'T.INV.2T',\n  HYPGEOMDIST: 'HYPGEOM.DIST',\n  POISSON: 'POISSON.DIST',\n  WEIBULL: 'WEIBULL.DIST',\n  FINV: 'F.INV.RT',\n  FDIST: 'F.DIST.RT',\n  CHIDIST: 'CHISQ.DIST.RT',\n  CHIINV: 'CHISQ.INV.RT',\n  GAMMADIST: 'GAMMA.DIST',\n  'GAMMALN.PRECISE': 'GAMMALN',\n  GAMMAINV: 'GAMMA.INV',\n  BETAINV: 'BETA.INV',\n  BINOMDIST: 'BINOM.DIST',\n  CONFIDENCE: 'CONFIDENCE.NORM',\n  CRITBINOM: 'BINOM.INV',\n  WEIBULLDIST: 'WEIBULL.DIST',\n  TINV2T: 'T.INV.2T',\n  TDISTRT: 'T.DIST.RT',\n  TDIST2T: 'T.DIST.2T',\n  FINVRT: 'F.INV.RT',\n  FDISTRT: 'F.DIST.RT',\n  CHIDISTRT: 'CHISQ.DIST.RT',\n  CHIINVRT: 'CHISQ.INV.RT',\n  LOGNORMINV: 'LOGNORM.INV',\n  POISSONDIST: 'POISSON.DIST'\n};"]},"metadata":{},"sourceType":"module"}