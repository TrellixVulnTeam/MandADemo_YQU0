{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n/**\n* This is a class for detailed error messages across HyperFormula.\n*/\n\n\nexport var ErrorMessage = function ErrorMessage() {\n  _classCallCheck(this, ErrorMessage);\n};\nErrorMessage.DistinctSigns = 'Distinct signs.';\nErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\nErrorMessage.EmptyArg = 'Empty function argument.';\nErrorMessage.MatrixDimensions = 'Matrix dimensions are not compatible.';\nErrorMessage.ValueSmall = 'Value too small.';\nErrorMessage.ValueLarge = 'Value too large.';\nErrorMessage.BadCriterion = 'Incorrect criterion.';\nErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\nErrorMessage.CellRangeExpected = 'Cell range expected.';\nErrorMessage.ScalarExpected = 'Cell range not allowed.';\nErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\nErrorMessage.NumberExpected = 'Number argument expected.';\nErrorMessage.IntegerExpected = 'Value needs to be an integer.';\nErrorMessage.BadMode = 'Mode not recognized.';\nErrorMessage.DateBounds = 'Date outside of bounds.';\nErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\nErrorMessage.WrongType = 'Wrong type of argument.';\nErrorMessage.NaN = 'NaN or infinite value encountered.';\nErrorMessage.EqualLength = 'Ranges need to be of equal length.';\nErrorMessage.Negative = 'Value cannot be negative.';\nErrorMessage.NotBinary = 'String does not represent a binary number.';\nErrorMessage.NotOctal = 'String does not represent an octal number.';\nErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\nErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\nErrorMessage.CellRefExpected = 'Cell reference expected.';\nErrorMessage.BadRef = 'Address is not correct.';\nErrorMessage.NumberRange = 'Number-only range expected.';\nErrorMessage.ValueNotFound = 'Value not found.';\nErrorMessage.ValueBaseLarge = 'Value in base too large.';\nErrorMessage.ValueBaseSmall = 'Value in base too small.';\nErrorMessage.ValueBaseLong = 'Value in base too long.';\nErrorMessage.NegativeLength = 'Length cannot be negative.';\nErrorMessage.PatternNotFound = 'Pattern not found.';\nErrorMessage.MatrixParams = 'Matrix function parameters are not compatible.';\nErrorMessage.OneValue = 'Needs at least one value.';\nErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\nErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\nErrorMessage.IndexBounds = 'Index out of bounds.';\nErrorMessage.IndexLarge = 'Index too large.';\nErrorMessage.Formula = 'Expected formula.';\nErrorMessage.NegativeCount = 'Count cannot be negative.';\nErrorMessage.ParseError = 'Parsing error.';\nErrorMessage.SheetRef = 'Sheet does not exist.';\nErrorMessage.MatrixFunction = 'Matrix function not recognized.';\nErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\nErrorMessage.InvalidDate = 'Invalid date.';\nErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\nErrorMessage.EmptyString = 'Empty-string argument not allowed.';\nErrorMessage.LengthBounds = 'Length out of bounds.';\nErrorMessage.NegativeTime = 'Time cannot be negative.';\nErrorMessage.NoDefault = 'No default option.';\nErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\nErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\nErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\nErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\nErrorMessage.NonZero = 'Argument cannot be 0.';\nErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\nErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\nErrorMessage.InvalidRoman = 'Invalid roman numeral.';\nErrorMessage.WrongOrder = 'Wrong order of values.';\nErrorMessage.ComplexNumberExpected = 'Complex number expected.';\nErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\n\nErrorMessage.FunctionName = function (arg) {\n  return \"Function name \".concat(arg, \" not recognized.\");\n};\n\nErrorMessage.NamedExpressionName = function (arg) {\n  return \"Named expression \".concat(arg, \" not recognized.\");\n};\n\nErrorMessage.LicenseKey = function (arg) {\n  return \"License key is \".concat(arg, \".\");\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/error-message.js"],"names":["_classCallCheck","instance","Constructor","TypeError","ErrorMessage","DistinctSigns","WrongArgNumber","EmptyArg","MatrixDimensions","ValueSmall","ValueLarge","BadCriterion","RangeManySheets","CellRangeExpected","ScalarExpected","NumberCoercion","NumberExpected","IntegerExpected","BadMode","DateBounds","OutOfSheet","WrongType","NaN","EqualLength","Negative","NotBinary","NotOctal","NotHex","EndStartPeriod","CellRefExpected","BadRef","NumberRange","ValueNotFound","ValueBaseLarge","ValueBaseSmall","ValueBaseLong","NegativeLength","PatternNotFound","MatrixParams","OneValue","TwoValues","ThreeValues","IndexBounds","IndexLarge","Formula","NegativeCount","ParseError","SheetRef","MatrixFunction","PeriodLong","InvalidDate","BitshiftLong","EmptyString","LengthBounds","NegativeTime","NoDefault","Selector","StartEndDate","IncorrectDateTime","CharacterCodeBounds","NonZero","LessThanOne","WeekendString","InvalidRoman","WrongOrder","ComplexNumberExpected","ShouldBeIorJ","FunctionName","arg","concat","NamedExpressionName","LicenseKey"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n/**\n* This is a class for detailed error messages across HyperFormula.\n*/\nexport var ErrorMessage = function ErrorMessage() {\n  _classCallCheck(this, ErrorMessage);\n};\nErrorMessage.DistinctSigns = 'Distinct signs.';\nErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\nErrorMessage.EmptyArg = 'Empty function argument.';\nErrorMessage.MatrixDimensions = 'Matrix dimensions are not compatible.';\nErrorMessage.ValueSmall = 'Value too small.';\nErrorMessage.ValueLarge = 'Value too large.';\nErrorMessage.BadCriterion = 'Incorrect criterion.';\nErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\nErrorMessage.CellRangeExpected = 'Cell range expected.';\nErrorMessage.ScalarExpected = 'Cell range not allowed.';\nErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\nErrorMessage.NumberExpected = 'Number argument expected.';\nErrorMessage.IntegerExpected = 'Value needs to be an integer.';\nErrorMessage.BadMode = 'Mode not recognized.';\nErrorMessage.DateBounds = 'Date outside of bounds.';\nErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\nErrorMessage.WrongType = 'Wrong type of argument.';\nErrorMessage.NaN = 'NaN or infinite value encountered.';\nErrorMessage.EqualLength = 'Ranges need to be of equal length.';\nErrorMessage.Negative = 'Value cannot be negative.';\nErrorMessage.NotBinary = 'String does not represent a binary number.';\nErrorMessage.NotOctal = 'String does not represent an octal number.';\nErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\nErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\nErrorMessage.CellRefExpected = 'Cell reference expected.';\nErrorMessage.BadRef = 'Address is not correct.';\nErrorMessage.NumberRange = 'Number-only range expected.';\nErrorMessage.ValueNotFound = 'Value not found.';\nErrorMessage.ValueBaseLarge = 'Value in base too large.';\nErrorMessage.ValueBaseSmall = 'Value in base too small.';\nErrorMessage.ValueBaseLong = 'Value in base too long.';\nErrorMessage.NegativeLength = 'Length cannot be negative.';\nErrorMessage.PatternNotFound = 'Pattern not found.';\nErrorMessage.MatrixParams = 'Matrix function parameters are not compatible.';\nErrorMessage.OneValue = 'Needs at least one value.';\nErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\nErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\nErrorMessage.IndexBounds = 'Index out of bounds.';\nErrorMessage.IndexLarge = 'Index too large.';\nErrorMessage.Formula = 'Expected formula.';\nErrorMessage.NegativeCount = 'Count cannot be negative.';\nErrorMessage.ParseError = 'Parsing error.';\nErrorMessage.SheetRef = 'Sheet does not exist.';\nErrorMessage.MatrixFunction = 'Matrix function not recognized.';\nErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\nErrorMessage.InvalidDate = 'Invalid date.';\nErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\nErrorMessage.EmptyString = 'Empty-string argument not allowed.';\nErrorMessage.LengthBounds = 'Length out of bounds.';\nErrorMessage.NegativeTime = 'Time cannot be negative.';\nErrorMessage.NoDefault = 'No default option.';\nErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\nErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\nErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\nErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\nErrorMessage.NonZero = 'Argument cannot be 0.';\nErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\nErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\nErrorMessage.InvalidRoman = 'Invalid roman numeral.';\nErrorMessage.WrongOrder = 'Wrong order of values.';\nErrorMessage.ComplexNumberExpected = 'Complex number expected.';\nErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\n\nErrorMessage.FunctionName = function (arg) {\n  return \"Function name \".concat(arg, \" not recognized.\");\n};\n\nErrorMessage.NamedExpressionName = function (arg) {\n  return \"Named expression \".concat(arg, \" not recognized.\");\n};\n\nErrorMessage.LicenseKey = function (arg) {\n  return \"License key is \".concat(arg, \".\");\n};"]},"metadata":{},"sourceType":"module"}