{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { simpleCellAddress } from './Cell';\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex } from './DependencyGraph';\nimport { buildLexerConfig, Unparser } from './parser';\nexport var Serialization = /*#__PURE__*/function () {\n  function Serialization(dependencyGraph, unparser, config, exporter) {\n    _classCallCheck(this, Serialization);\n\n    this.dependencyGraph = dependencyGraph;\n    this.unparser = unparser;\n    this.config = config;\n    this.exporter = exporter;\n  }\n\n  _createClass(Serialization, [{\n    key: \"getCellFormula\",\n    value: function getCellFormula(address) {\n      var formulaVertex = this.dependencyGraph.getCell(address);\n\n      if (formulaVertex instanceof FormulaCellVertex) {\n        var formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n        return this.unparser.unparse(formula, address);\n      } else if (formulaVertex instanceof MatrixVertex) {\n        var _formula = formulaVertex.getFormula();\n\n        if (_formula) {\n          return '{' + this.unparser.unparse(_formula, formulaVertex.getAddress()) + '}';\n        }\n      } else if (formulaVertex instanceof ParsingErrorVertex) {\n        return formulaVertex.getFormula();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getCellSerialized\",\n    value: function getCellSerialized(address) {\n      var formula = this.getCellFormula(address);\n\n      if (formula !== undefined) {\n        return formula;\n      } else {\n        return this.getRawValue(address);\n      }\n    }\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(address) {\n      return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\n    }\n  }, {\n    key: \"getRawValue\",\n    value: function getRawValue(address) {\n      return this.dependencyGraph.getRawValue(address);\n    }\n  }, {\n    key: \"getSheetValues\",\n    value: function getSheetValues(sheet) {\n      var _this = this;\n\n      return this.genericSheetGetter(sheet, function (arg) {\n        return _this.getCellValue(arg);\n      });\n    }\n  }, {\n    key: \"getSheetFormulas\",\n    value: function getSheetFormulas(sheet) {\n      var _this2 = this;\n\n      return this.genericSheetGetter(sheet, function (arg) {\n        return _this2.getCellFormula(arg);\n      });\n    }\n  }, {\n    key: \"genericSheetGetter\",\n    value: function genericSheetGetter(sheet, getter) {\n      var sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n      var sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n      var arr = new Array(sheetHeight);\n\n      for (var i = 0; i < sheetHeight; i++) {\n        arr[i] = new Array(sheetWidth);\n\n        for (var j = 0; j < sheetWidth; j++) {\n          var address = simpleCellAddress(sheet, j, i);\n          arr[i][j] = getter(address);\n        }\n\n        for (var _j = sheetWidth - 1; _j >= 0; _j--) {\n          if (arr[i][_j] === null || arr[i][_j] === undefined) {\n            arr[i].pop();\n          } else {\n            break;\n          }\n        }\n      }\n\n      for (var _i = sheetHeight - 1; _i >= 0; _i--) {\n        if (arr[_i].length === 0) {\n          arr.pop();\n        } else {\n          break;\n        }\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"genericAllSheetsGetter\",\n    value: function genericAllSheetsGetter(sheetGetter) {\n      var result = {};\n\n      var _iterator = _createForOfIteratorHelper(this.dependencyGraph.sheetMapping.displayNames()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sheetName = _step.value;\n          var sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\n          result[sheetName] = sheetGetter(sheetId);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSheetSerialized\",\n    value: function getSheetSerialized(sheet) {\n      var _this3 = this;\n\n      return this.genericSheetGetter(sheet, function (arg) {\n        return _this3.getCellSerialized(arg);\n      });\n    }\n  }, {\n    key: \"getAllSheetsValues\",\n    value: function getAllSheetsValues() {\n      var _this4 = this;\n\n      return this.genericAllSheetsGetter(function (arg) {\n        return _this4.getSheetValues(arg);\n      });\n    }\n  }, {\n    key: \"getAllSheetsFormulas\",\n    value: function getAllSheetsFormulas() {\n      var _this5 = this;\n\n      return this.genericAllSheetsGetter(function (arg) {\n        return _this5.getSheetFormulas(arg);\n      });\n    }\n  }, {\n    key: \"getAllSheetsSerialized\",\n    value: function getAllSheetsSerialized() {\n      var _this6 = this;\n\n      return this.genericAllSheetsGetter(function (arg) {\n        return _this6.getSheetSerialized(arg);\n      });\n    }\n  }, {\n    key: \"getAllNamedExpressionsSerialized\",\n    value: function getAllNamedExpressionsSerialized() {\n      var _this7 = this;\n\n      return this.dependencyGraph.namedExpressions.getAllNamedExpressions().map(function (entry) {\n        var scope = entry.scope !== undefined ? _this7.dependencyGraph.sheetMapping.fetchDisplayName(entry.scope) : undefined;\n        return {\n          name: entry.expression.displayName,\n          expression: _this7.getCellSerialized(entry.expression.address),\n          scope: scope,\n          options: entry.expression.options\n        };\n      });\n    }\n  }, {\n    key: \"withNewConfig\",\n    value: function withNewConfig(newConfig, namedExpressions) {\n      var newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\n      return new Serialization(this.dependencyGraph, newUnparser, newConfig, this.exporter);\n    }\n  }]);\n\n  return Serialization;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/Serialization.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","simpleCellAddress","FormulaCellVertex","MatrixVertex","ParsingErrorVertex","buildLexerConfig","Unparser","Serialization","dependencyGraph","unparser","config","exporter","getCellFormula","address","formulaVertex","getCell","formula","getFormula","lazilyTransformingAstService","unparse","_formula","getAddress","undefined","getCellSerialized","getRawValue","getCellValue","exportValue","getScalarValue","getSheetValues","sheet","_this","genericSheetGetter","arg","getSheetFormulas","_this2","getter","sheetHeight","getSheetHeight","sheetWidth","getSheetWidth","j","_j","pop","_i","genericAllSheetsGetter","sheetGetter","result","_iterator","sheetMapping","displayNames","_step","sheetName","sheetId","fetch","getSheetSerialized","_this3","getAllSheetsValues","_this4","getAllSheetsFormulas","_this5","getAllSheetsSerialized","_this6","getAllNamedExpressionsSerialized","_this7","namedExpressions","getAllNamedExpressions","map","entry","scope","fetchDisplayName","expression","displayName","options","withNewConfig","newConfig","newUnparser"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex } from './DependencyGraph';\nimport { buildLexerConfig, Unparser } from './parser';\nexport var Serialization = /*#__PURE__*/function () {\n  function Serialization(dependencyGraph, unparser, config, exporter) {\n    _classCallCheck(this, Serialization);\n\n    this.dependencyGraph = dependencyGraph;\n    this.unparser = unparser;\n    this.config = config;\n    this.exporter = exporter;\n  }\n\n  _createClass(Serialization, [{\n    key: \"getCellFormula\",\n    value: function getCellFormula(address) {\n      var formulaVertex = this.dependencyGraph.getCell(address);\n\n      if (formulaVertex instanceof FormulaCellVertex) {\n        var formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n        return this.unparser.unparse(formula, address);\n      } else if (formulaVertex instanceof MatrixVertex) {\n        var _formula = formulaVertex.getFormula();\n\n        if (_formula) {\n          return '{' + this.unparser.unparse(_formula, formulaVertex.getAddress()) + '}';\n        }\n      } else if (formulaVertex instanceof ParsingErrorVertex) {\n        return formulaVertex.getFormula();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getCellSerialized\",\n    value: function getCellSerialized(address) {\n      var formula = this.getCellFormula(address);\n\n      if (formula !== undefined) {\n        return formula;\n      } else {\n        return this.getRawValue(address);\n      }\n    }\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(address) {\n      return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\n    }\n  }, {\n    key: \"getRawValue\",\n    value: function getRawValue(address) {\n      return this.dependencyGraph.getRawValue(address);\n    }\n  }, {\n    key: \"getSheetValues\",\n    value: function getSheetValues(sheet) {\n      var _this = this;\n\n      return this.genericSheetGetter(sheet, function (arg) {\n        return _this.getCellValue(arg);\n      });\n    }\n  }, {\n    key: \"getSheetFormulas\",\n    value: function getSheetFormulas(sheet) {\n      var _this2 = this;\n\n      return this.genericSheetGetter(sheet, function (arg) {\n        return _this2.getCellFormula(arg);\n      });\n    }\n  }, {\n    key: \"genericSheetGetter\",\n    value: function genericSheetGetter(sheet, getter) {\n      var sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n      var sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n      var arr = new Array(sheetHeight);\n\n      for (var i = 0; i < sheetHeight; i++) {\n        arr[i] = new Array(sheetWidth);\n\n        for (var j = 0; j < sheetWidth; j++) {\n          var address = simpleCellAddress(sheet, j, i);\n          arr[i][j] = getter(address);\n        }\n\n        for (var _j = sheetWidth - 1; _j >= 0; _j--) {\n          if (arr[i][_j] === null || arr[i][_j] === undefined) {\n            arr[i].pop();\n          } else {\n            break;\n          }\n        }\n      }\n\n      for (var _i = sheetHeight - 1; _i >= 0; _i--) {\n        if (arr[_i].length === 0) {\n          arr.pop();\n        } else {\n          break;\n        }\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"genericAllSheetsGetter\",\n    value: function genericAllSheetsGetter(sheetGetter) {\n      var result = {};\n\n      var _iterator = _createForOfIteratorHelper(this.dependencyGraph.sheetMapping.displayNames()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sheetName = _step.value;\n          var sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\n          result[sheetName] = sheetGetter(sheetId);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSheetSerialized\",\n    value: function getSheetSerialized(sheet) {\n      var _this3 = this;\n\n      return this.genericSheetGetter(sheet, function (arg) {\n        return _this3.getCellSerialized(arg);\n      });\n    }\n  }, {\n    key: \"getAllSheetsValues\",\n    value: function getAllSheetsValues() {\n      var _this4 = this;\n\n      return this.genericAllSheetsGetter(function (arg) {\n        return _this4.getSheetValues(arg);\n      });\n    }\n  }, {\n    key: \"getAllSheetsFormulas\",\n    value: function getAllSheetsFormulas() {\n      var _this5 = this;\n\n      return this.genericAllSheetsGetter(function (arg) {\n        return _this5.getSheetFormulas(arg);\n      });\n    }\n  }, {\n    key: \"getAllSheetsSerialized\",\n    value: function getAllSheetsSerialized() {\n      var _this6 = this;\n\n      return this.genericAllSheetsGetter(function (arg) {\n        return _this6.getSheetSerialized(arg);\n      });\n    }\n  }, {\n    key: \"getAllNamedExpressionsSerialized\",\n    value: function getAllNamedExpressionsSerialized() {\n      var _this7 = this;\n\n      return this.dependencyGraph.namedExpressions.getAllNamedExpressions().map(function (entry) {\n        var scope = entry.scope !== undefined ? _this7.dependencyGraph.sheetMapping.fetchDisplayName(entry.scope) : undefined;\n        return {\n          name: entry.expression.displayName,\n          expression: _this7.getCellSerialized(entry.expression.address),\n          scope: scope,\n          options: entry.expression.options\n        };\n      });\n    }\n  }, {\n    key: \"withNewConfig\",\n    value: function withNewConfig(newConfig, namedExpressions) {\n      var newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\n      return new Serialization(this.dependencyGraph, newUnparser, newConfig, this.exporter);\n    }\n  }]);\n\n  return Serialization;\n}();"]},"metadata":{},"sourceType":"module"}