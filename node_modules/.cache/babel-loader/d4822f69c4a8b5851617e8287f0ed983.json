{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { ArraySizePredictor } from './ArraySize';\nimport { CellContentParser } from './CellContentParser';\nimport { ClipboardOperations } from './ClipboardOperations';\nimport { Config } from './Config';\nimport { CrudOperations } from './CrudOperations';\nimport { DateTimeHelper } from './DateTimeHelper';\nimport { DependencyGraph } from './DependencyGraph';\nimport { SheetSizeLimitExceededError } from './errors';\nimport { Evaluator } from './Evaluator';\nimport { Exporter } from './Exporter';\nimport { GraphBuilder } from './GraphBuilder';\nimport { UIElement } from './i18n';\nimport { ArithmeticHelper } from './interpreter/ArithmeticHelper';\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\nimport { Interpreter } from './interpreter/Interpreter';\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\nimport { buildColumnSearchStrategy } from './Lookup/SearchStrategy';\nimport { NamedExpressions } from './NamedExpressions';\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\nimport { Operations } from './Operations';\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\nimport { Serialization } from './Serialization';\nimport { findBoundaries, validateAsSheet } from './Sheet';\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\nimport { UndoRedo } from './UndoRedo';\nexport var BuildEngineFactory = /*#__PURE__*/function () {\n  function BuildEngineFactory() {\n    _classCallCheck(this, BuildEngineFactory);\n  }\n\n  _createClass(BuildEngineFactory, null, [{\n    key: \"buildEngine\",\n    value: function buildEngine(config) {\n      var sheets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var inputNamedExpressions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var stats = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : config.useStats ? new Statistics() : new EmptyStatistics();\n      stats.start(StatType.BUILD_ENGINE_TOTAL);\n      var namedExpressions = new NamedExpressions();\n      var functionRegistry = new FunctionRegistry(config);\n      var lazilyTransformingAstService = new LazilyTransformingAstService(stats);\n      var dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\n      var columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\n      var sheetMapping = dependencyGraph.sheetMapping;\n      var addressMapping = dependencyGraph.addressMapping;\n\n      for (var sheetName in sheets) {\n        if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\n          var sheet = sheets[sheetName];\n          validateAsSheet(sheet);\n          var boundaries = findBoundaries(sheet);\n\n          if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\n            throw new SheetSizeLimitExceededError();\n          }\n\n          var sheetId = sheetMapping.addSheet(sheetName);\n          addressMapping.autoAddSheet(sheetId, sheet, boundaries);\n        }\n      }\n\n      var parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\n      lazilyTransformingAstService.parser = parser;\n      var unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\n      var dateTimeHelper = new DateTimeHelper(config);\n      var numberLiteralHelper = new NumberLiteralHelper(config);\n      var arithmeticHelper = new ArithmeticHelper(config, dateTimeHelper, numberLiteralHelper);\n      var cellContentParser = new CellContentParser(config, dateTimeHelper, numberLiteralHelper);\n      var arraySizePredictor = new ArraySizePredictor(config, functionRegistry);\n      var operations = new Operations(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor);\n      var undoRedo = new UndoRedo(config, operations);\n      lazilyTransformingAstService.undoRedo = undoRedo;\n      var clipboardOperations = new ClipboardOperations(config, dependencyGraph, operations);\n      var crudOperations = new CrudOperations(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\n      inputNamedExpressions.forEach(function (entry) {\n        crudOperations.ensureItIsPossibleToAddNamedExpression(entry.name, entry.expression, entry.scope);\n        crudOperations.operations.addNamedExpression(entry.name, entry.expression, entry.scope, entry.options);\n      });\n      var exporter = new Exporter(config, namedExpressions, sheetMapping.fetchDisplayName, lazilyTransformingAstService);\n      var serialization = new Serialization(dependencyGraph, unparser, exporter);\n      var interpreter = new Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper);\n      stats.measure(StatType.GRAPH_BUILD, function () {\n        var graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor);\n        graphBuilder.buildGraph(sheets, stats);\n      });\n      var evaluator = new Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch);\n      evaluator.run();\n      stats.end(StatType.BUILD_ENGINE_TOTAL);\n      return {\n        config: config,\n        stats: stats,\n        dependencyGraph: dependencyGraph,\n        columnSearch: columnSearch,\n        parser: parser,\n        unparser: unparser,\n        cellContentParser: cellContentParser,\n        evaluator: evaluator,\n        lazilyTransformingAstService: lazilyTransformingAstService,\n        crudOperations: crudOperations,\n        exporter: exporter,\n        namedExpressions: namedExpressions,\n        serialization: serialization,\n        functionRegistry: functionRegistry\n      };\n    }\n  }, {\n    key: \"buildFromSheets\",\n    value: function buildFromSheets(sheets) {\n      var configInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var namedExpressions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var config = new Config(configInput);\n      return this.buildEngine(config, sheets, namedExpressions);\n    }\n  }, {\n    key: \"buildFromSheet\",\n    value: function buildFromSheet(sheet) {\n      var configInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var namedExpressions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var config = new Config(configInput);\n      var newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\n      return this.buildEngine(config, _defineProperty({}, newsheetprefix, sheet), namedExpressions);\n    }\n  }, {\n    key: \"buildEmpty\",\n    value: function buildEmpty() {\n      var configInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var namedExpressions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return this.buildEngine(new Config(configInput), {}, namedExpressions);\n    }\n  }, {\n    key: \"rebuildWithConfig\",\n    value: function rebuildWithConfig(config, sheets, namedExpressions, stats) {\n      return this.buildEngine(config, sheets, namedExpressions, stats);\n    }\n  }]);\n\n  return BuildEngineFactory;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/BuildEngineFactory.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","prototype","ArraySizePredictor","CellContentParser","ClipboardOperations","Config","CrudOperations","DateTimeHelper","DependencyGraph","SheetSizeLimitExceededError","Evaluator","Exporter","GraphBuilder","UIElement","ArithmeticHelper","FunctionRegistry","Interpreter","LazilyTransformingAstService","buildColumnSearchStrategy","NamedExpressions","NumberLiteralHelper","Operations","buildLexerConfig","ParserWithCaching","Unparser","Serialization","findBoundaries","validateAsSheet","EmptyStatistics","Statistics","StatType","UndoRedo","BuildEngineFactory","buildEngine","config","sheets","arguments","undefined","inputNamedExpressions","stats","useStats","start","BUILD_ENGINE_TOTAL","namedExpressions","functionRegistry","lazilyTransformingAstService","dependencyGraph","buildEmpty","columnSearch","sheetMapping","addressMapping","sheetName","hasOwnProperty","call","sheet","boundaries","height","maxRows","width","maxColumns","sheetId","addSheet","autoAddSheet","parser","get","unparser","fetchDisplayName","dateTimeHelper","numberLiteralHelper","arithmeticHelper","cellContentParser","arraySizePredictor","operations","undoRedo","clipboardOperations","crudOperations","forEach","entry","ensureItIsPossibleToAddNamedExpression","name","expression","scope","addNamedExpression","options","exporter","serialization","interpreter","measure","GRAPH_BUILD","graphBuilder","buildGraph","evaluator","run","end","buildFromSheets","configInput","buildFromSheet","newsheetprefix","translationPackage","getUITranslation","NEW_SHEET_PREFIX","rebuildWithConfig"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArraySizePredictor } from './ArraySize';\nimport { CellContentParser } from './CellContentParser';\nimport { ClipboardOperations } from './ClipboardOperations';\nimport { Config } from './Config';\nimport { CrudOperations } from './CrudOperations';\nimport { DateTimeHelper } from './DateTimeHelper';\nimport { DependencyGraph } from './DependencyGraph';\nimport { SheetSizeLimitExceededError } from './errors';\nimport { Evaluator } from './Evaluator';\nimport { Exporter } from './Exporter';\nimport { GraphBuilder } from './GraphBuilder';\nimport { UIElement } from './i18n';\nimport { ArithmeticHelper } from './interpreter/ArithmeticHelper';\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\nimport { Interpreter } from './interpreter/Interpreter';\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\nimport { buildColumnSearchStrategy } from './Lookup/SearchStrategy';\nimport { NamedExpressions } from './NamedExpressions';\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\nimport { Operations } from './Operations';\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\nimport { Serialization } from './Serialization';\nimport { findBoundaries, validateAsSheet } from './Sheet';\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\nimport { UndoRedo } from './UndoRedo';\nexport var BuildEngineFactory = /*#__PURE__*/function () {\n  function BuildEngineFactory() {\n    _classCallCheck(this, BuildEngineFactory);\n  }\n\n  _createClass(BuildEngineFactory, null, [{\n    key: \"buildEngine\",\n    value: function buildEngine(config) {\n      var sheets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var inputNamedExpressions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var stats = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : config.useStats ? new Statistics() : new EmptyStatistics();\n      stats.start(StatType.BUILD_ENGINE_TOTAL);\n      var namedExpressions = new NamedExpressions();\n      var functionRegistry = new FunctionRegistry(config);\n      var lazilyTransformingAstService = new LazilyTransformingAstService(stats);\n      var dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\n      var columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\n      var sheetMapping = dependencyGraph.sheetMapping;\n      var addressMapping = dependencyGraph.addressMapping;\n\n      for (var sheetName in sheets) {\n        if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\n          var sheet = sheets[sheetName];\n          validateAsSheet(sheet);\n          var boundaries = findBoundaries(sheet);\n\n          if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\n            throw new SheetSizeLimitExceededError();\n          }\n\n          var sheetId = sheetMapping.addSheet(sheetName);\n          addressMapping.autoAddSheet(sheetId, sheet, boundaries);\n        }\n      }\n\n      var parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\n      lazilyTransformingAstService.parser = parser;\n      var unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\n      var dateTimeHelper = new DateTimeHelper(config);\n      var numberLiteralHelper = new NumberLiteralHelper(config);\n      var arithmeticHelper = new ArithmeticHelper(config, dateTimeHelper, numberLiteralHelper);\n      var cellContentParser = new CellContentParser(config, dateTimeHelper, numberLiteralHelper);\n      var arraySizePredictor = new ArraySizePredictor(config, functionRegistry);\n      var operations = new Operations(config, dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, arraySizePredictor);\n      var undoRedo = new UndoRedo(config, operations);\n      lazilyTransformingAstService.undoRedo = undoRedo;\n      var clipboardOperations = new ClipboardOperations(config, dependencyGraph, operations);\n      var crudOperations = new CrudOperations(config, operations, undoRedo, clipboardOperations, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\n      inputNamedExpressions.forEach(function (entry) {\n        crudOperations.ensureItIsPossibleToAddNamedExpression(entry.name, entry.expression, entry.scope);\n        crudOperations.operations.addNamedExpression(entry.name, entry.expression, entry.scope, entry.options);\n      });\n      var exporter = new Exporter(config, namedExpressions, sheetMapping.fetchDisplayName, lazilyTransformingAstService);\n      var serialization = new Serialization(dependencyGraph, unparser, exporter);\n      var interpreter = new Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper);\n      stats.measure(StatType.GRAPH_BUILD, function () {\n        var graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, stats, arraySizePredictor);\n        graphBuilder.buildGraph(sheets, stats);\n      });\n      var evaluator = new Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch);\n      evaluator.run();\n      stats.end(StatType.BUILD_ENGINE_TOTAL);\n      return {\n        config: config,\n        stats: stats,\n        dependencyGraph: dependencyGraph,\n        columnSearch: columnSearch,\n        parser: parser,\n        unparser: unparser,\n        cellContentParser: cellContentParser,\n        evaluator: evaluator,\n        lazilyTransformingAstService: lazilyTransformingAstService,\n        crudOperations: crudOperations,\n        exporter: exporter,\n        namedExpressions: namedExpressions,\n        serialization: serialization,\n        functionRegistry: functionRegistry\n      };\n    }\n  }, {\n    key: \"buildFromSheets\",\n    value: function buildFromSheets(sheets) {\n      var configInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var namedExpressions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var config = new Config(configInput);\n      return this.buildEngine(config, sheets, namedExpressions);\n    }\n  }, {\n    key: \"buildFromSheet\",\n    value: function buildFromSheet(sheet) {\n      var configInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var namedExpressions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var config = new Config(configInput);\n      var newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\n      return this.buildEngine(config, _defineProperty({}, newsheetprefix, sheet), namedExpressions);\n    }\n  }, {\n    key: \"buildEmpty\",\n    value: function buildEmpty() {\n      var configInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var namedExpressions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return this.buildEngine(new Config(configInput), {}, namedExpressions);\n    }\n  }, {\n    key: \"rebuildWithConfig\",\n    value: function rebuildWithConfig(config, sheets, namedExpressions, stats) {\n      return this.buildEngine(config, sheets, namedExpressions, stats);\n    }\n  }]);\n\n  return BuildEngineFactory;\n}();"]},"metadata":{},"sourceType":"module"}