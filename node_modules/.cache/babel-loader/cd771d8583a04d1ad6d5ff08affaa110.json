{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport var AddRowsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(AddRowsTransformer, _Transformer);\n\n  var _super = _createSuper(AddRowsTransformer);\n\n  function AddRowsTransformer(rowsSpan) {\n    var _this;\n\n    _classCallCheck(this, AddRowsTransformer);\n\n    _this = _super.call(this);\n    _this.rowsSpan = rowsSpan;\n    return _this;\n  }\n\n  _createClass(AddRowsTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.rowsSpan.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return false;\n    }\n  }, {\n    key: \"transformColumnRangeAst\",\n    value: function transformColumnRangeAst(ast, _formulaAddress) {\n      return ast;\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(_start, _end, _formulaAddress) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      var absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress); // Case 4 and 5\n\n      if (absoluteDependencySheet !== this.rowsSpan.sheet && formulaAddress.sheet !== this.rowsSpan.sheet) {\n        return false;\n      }\n\n      var absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress); // Case 3\n\n      if (absoluteDependencySheet === this.rowsSpan.sheet && formulaAddress.sheet !== this.rowsSpan.sheet) {\n        if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\n          return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n        } else {\n          return false;\n        }\n      } // Case 2\n\n\n      if (formulaAddress.sheet === this.rowsSpan.sheet && absoluteDependencySheet !== this.rowsSpan.sheet) {\n        if (dependencyAddress.isRowAbsolute()) {\n          return false;\n        }\n\n        if (formulaAddress.row < this.rowsSpan.rowStart) {\n          return false;\n        }\n\n        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n      } // Case 1\n\n\n      if (dependencyAddress.isRowAbsolute()) {\n        if (dependencyAddress.row < this.rowsSpan.rowStart) {\n          // Case Aa\n          return false;\n        } else {\n          // Case Ab\n          return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n        }\n      } else {\n        if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\n          if (formulaAddress.row < this.rowsSpan.rowStart) {\n            // Case Raa\n            return false;\n          } else {\n            // Case Rab\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n          }\n        } else {\n          if (formulaAddress.row < this.rowsSpan.rowStart) {\n            // Case Rba\n            return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n          } else {\n            // Case Rbb\n            return false;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n        return Object.assign(Object.assign({}, address), {\n          row: address.row + this.rowsSpan.numberOfRows\n        });\n      } else {\n        return address;\n      }\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var newStart = this.transformCellAddress(start, formulaAddress);\n      var newEnd = this.transformCellAddress(end, formulaAddress);\n\n      if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n        return ErrorType.REF;\n      } else if (newStart || newEnd) {\n        return [newStart || start, newEnd || end];\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return AddRowsTransformer;\n}(Transformer);","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/dependencyTransformers/AddRowsTransformer.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","absoluteSheetReference","ErrorType","Transformer","AddRowsTransformer","_Transformer","_super","rowsSpan","_this","get","sheet","isIrreversible","transformColumnRangeAst","ast","_formulaAddress","transformCellRange","start","end","formulaAddress","transformRange","transformRowRange","transformColumnRange","_start","_end","Error","transformCellAddress","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","toSimpleRowAddress","rowStart","row","shiftedByRows","numberOfRows","isRowAbsolute","fixNodeAddress","address","assign","newStart","newEnd","REF"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport var AddRowsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(AddRowsTransformer, _Transformer);\n\n  var _super = _createSuper(AddRowsTransformer);\n\n  function AddRowsTransformer(rowsSpan) {\n    var _this;\n\n    _classCallCheck(this, AddRowsTransformer);\n\n    _this = _super.call(this);\n    _this.rowsSpan = rowsSpan;\n    return _this;\n  }\n\n  _createClass(AddRowsTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.rowsSpan.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return false;\n    }\n  }, {\n    key: \"transformColumnRangeAst\",\n    value: function transformColumnRangeAst(ast, _formulaAddress) {\n      return ast;\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(_start, _end, _formulaAddress) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      var absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress); // Case 4 and 5\n\n      if (absoluteDependencySheet !== this.rowsSpan.sheet && formulaAddress.sheet !== this.rowsSpan.sheet) {\n        return false;\n      }\n\n      var absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress); // Case 3\n\n      if (absoluteDependencySheet === this.rowsSpan.sheet && formulaAddress.sheet !== this.rowsSpan.sheet) {\n        if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\n          return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n        } else {\n          return false;\n        }\n      } // Case 2\n\n\n      if (formulaAddress.sheet === this.rowsSpan.sheet && absoluteDependencySheet !== this.rowsSpan.sheet) {\n        if (dependencyAddress.isRowAbsolute()) {\n          return false;\n        }\n\n        if (formulaAddress.row < this.rowsSpan.rowStart) {\n          return false;\n        }\n\n        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n      } // Case 1\n\n\n      if (dependencyAddress.isRowAbsolute()) {\n        if (dependencyAddress.row < this.rowsSpan.rowStart) {\n          // Case Aa\n          return false;\n        } else {\n          // Case Ab\n          return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n        }\n      } else {\n        if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\n          if (formulaAddress.row < this.rowsSpan.rowStart) {\n            // Case Raa\n            return false;\n          } else {\n            // Case Rab\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n          }\n        } else {\n          if (formulaAddress.row < this.rowsSpan.rowStart) {\n            // Case Rba\n            return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n          } else {\n            // Case Rbb\n            return false;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n        return Object.assign(Object.assign({}, address), {\n          row: address.row + this.rowsSpan.numberOfRows\n        });\n      } else {\n        return address;\n      }\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var newStart = this.transformCellAddress(start, formulaAddress);\n      var newEnd = this.transformCellAddress(end, formulaAddress);\n\n      if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n        return ErrorType.REF;\n      } else if (newStart || newEnd) {\n        return [newStart || start, newEnd || end];\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return AddRowsTransformer;\n}(Transformer);"]},"metadata":{},"sourceType":"module"}