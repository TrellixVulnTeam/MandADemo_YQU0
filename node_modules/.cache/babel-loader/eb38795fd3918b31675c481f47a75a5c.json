{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString } from './addressRepresentationConverters';\nexport { CellAddress } from './CellAddress';\nexport { ParserWithCaching } from './ParserWithCaching';\nexport { collectDependencies } from './collectDependencies';\nexport { buildLexerConfig } from './LexerConfig';\nexport { FormulaLexer } from './FormulaParser';\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst } from './Ast';\nexport { Unparser } from './Unparser';\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency } from './RelativeDependency';","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/parser/index.js"],"names":["cellAddressFromString","simpleCellAddressFromString","simpleCellAddressToString","CellAddress","ParserWithCaching","collectDependencies","buildLexerConfig","FormulaLexer","AstNodeType","ParsingErrorType","buildProcedureAst","buildCellRangeAst","buildParsingErrorAst","buildCellErrorAst","Unparser","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","NamedExpressionDependency"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAT,EAAgCC,2BAAhC,EAA6DC,yBAA7D,QAA8F,mCAA9F;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,iBAAxC,EAA2DC,iBAA3D,EAA8EC,oBAA9E,EAAoGC,iBAApG,QAA6H,OAA7H;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,qBAAjD,EAAwEC,kBAAxE,EAA4FC,yBAA5F,QAA6H,sBAA7H","sourcesContent":["/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString } from './addressRepresentationConverters';\nexport { CellAddress } from './CellAddress';\nexport { ParserWithCaching } from './ParserWithCaching';\nexport { collectDependencies } from './collectDependencies';\nexport { buildLexerConfig } from './LexerConfig';\nexport { FormulaLexer } from './FormulaParser';\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst } from './Ast';\nexport { Unparser } from './Unparser';\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency } from './RelativeDependency';"]},"metadata":{},"sourceType":"module"}