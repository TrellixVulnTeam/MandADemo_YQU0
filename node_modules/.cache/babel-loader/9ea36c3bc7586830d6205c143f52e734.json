{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { simpleCellAddress } from '../../Cell';\n/**\n * Mapping from cell addresses to vertices\n *\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\n */\n\nexport var DenseStrategy = /*#__PURE__*/function () {\n  /**\n   * @param width - width of the stored sheet\n   * @param height - height of the stored sheet\n   */\n  function DenseStrategy(width, height) {\n    _classCallCheck(this, DenseStrategy);\n\n    this.width = width;\n    this.height = height;\n    this.mapping = new Array(height);\n\n    for (var i = 0; i < height; i++) {\n      this.mapping[i] = new Array(width);\n    }\n  }\n  /** @inheritDoc */\n\n\n  _createClass(DenseStrategy, [{\n    key: \"getCell\",\n    value: function getCell(address) {\n      return this.getCellVertex(address.col, address.row);\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"setCell\",\n    value: function setCell(address, newVertex) {\n      this.width = Math.max(this.width, address.col + 1);\n      this.height = Math.max(this.height, address.row + 1);\n      var rowMapping = this.mapping[address.row];\n\n      if (!rowMapping) {\n        this.mapping[address.row] = new Array(this.width);\n      }\n\n      this.mapping[address.row][address.col] = newVertex;\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"has\",\n    value: function has(address) {\n      var row = this.mapping[address.row];\n\n      if (!row) {\n        return false;\n      }\n\n      return !!row[address.col];\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.height;\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.width;\n    }\n  }, {\n    key: \"removeCell\",\n    value: function removeCell(address) {\n      if (this.mapping[address.row] !== undefined) {\n        delete this.mapping[address.row][address.col];\n      }\n    }\n  }, {\n    key: \"addRows\",\n    value: function addRows(row, numberOfRows) {\n      var _this$mapping;\n\n      var newRows = [];\n\n      for (var i = 0; i < numberOfRows; i++) {\n        newRows.push(new Array(this.width));\n      }\n\n      (_this$mapping = this.mapping).splice.apply(_this$mapping, [row, 0].concat(newRows));\n\n      this.height += numberOfRows;\n    }\n  }, {\n    key: \"addColumns\",\n    value: function addColumns(column, numberOfColumns) {\n      for (var i = 0; i < this.height; i++) {\n        var _this$mapping$i;\n\n        (_this$mapping$i = this.mapping[i]).splice.apply(_this$mapping$i, [column, 0].concat(_toConsumableArray(new Array(numberOfColumns))));\n      }\n\n      this.width += numberOfColumns;\n    }\n  }, {\n    key: \"removeRows\",\n    value: function removeRows(removedRows) {\n      this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\n      var rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\n      var numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\n      this.height = Math.max(0, this.height - numberOfRowsRemoved);\n    }\n  }, {\n    key: \"removeColumns\",\n    value: function removeColumns(removedColumns) {\n      for (var i = 0; i < this.height; i++) {\n        this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\n      }\n\n      var rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\n      var numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\n      this.width = Math.max(0, this.width - numberOfColumnsRemoved);\n    }\n  }, {\n    key: \"getEntries\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function getEntries(sheet) {\n      var y, x, vertex;\n      return _regeneratorRuntime.wrap(function getEntries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context.next = 14;\n                break;\n              }\n\n              x = 0;\n\n            case 3:\n              if (!(x < this.width)) {\n                _context.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 8;\n              return [simpleCellAddress(sheet, x, y), vertex];\n\n            case 8:\n              ++x;\n              _context.next = 3;\n              break;\n\n            case 11:\n              ++y;\n              _context.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getEntries, this);\n    })\n  }, {\n    key: \"verticesFromColumn\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function verticesFromColumn(column) {\n      var y, vertex;\n      return _regeneratorRuntime.wrap(function verticesFromColumn$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context2.next = 9;\n                break;\n              }\n\n              vertex = this.getCellVertex(column, y);\n\n              if (!vertex) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 6;\n              return vertex;\n\n            case 6:\n              ++y;\n              _context2.next = 1;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, verticesFromColumn, this);\n    })\n  }, {\n    key: \"verticesFromRow\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function verticesFromRow(row) {\n      var x, vertex;\n      return _regeneratorRuntime.wrap(function verticesFromRow$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              x = 0;\n\n            case 1:\n              if (!(x < this.width)) {\n                _context3.next = 9;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, row);\n\n              if (!vertex) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 6;\n              return vertex;\n\n            case 6:\n              ++x;\n              _context3.next = 1;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, verticesFromRow, this);\n    })\n  }, {\n    key: \"verticesFromColumnsSpan\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function verticesFromColumnsSpan(columnsSpan) {\n      var x, y, vertex;\n      return _regeneratorRuntime.wrap(function verticesFromColumnsSpan$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              x = columnsSpan.columnStart;\n\n            case 1:\n              if (!(x <= columnsSpan.columnEnd)) {\n                _context4.next = 14;\n                break;\n              }\n\n              y = 0;\n\n            case 3:\n              if (!(y < this.height)) {\n                _context4.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 8;\n              return vertex;\n\n            case 8:\n              ++y;\n              _context4.next = 3;\n              break;\n\n            case 11:\n              ++x;\n              _context4.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, verticesFromColumnsSpan, this);\n    })\n  }, {\n    key: \"verticesFromRowsSpan\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function verticesFromRowsSpan(rowsSpan) {\n      var x, y, vertex;\n      return _regeneratorRuntime.wrap(function verticesFromRowsSpan$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              x = 0;\n\n            case 1:\n              if (!(x < this.width)) {\n                _context5.next = 14;\n                break;\n              }\n\n              y = rowsSpan.rowStart;\n\n            case 3:\n              if (!(y <= rowsSpan.rowEnd)) {\n                _context5.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context5.next = 8;\n                break;\n              }\n\n              _context5.next = 8;\n              return vertex;\n\n            case 8:\n              ++y;\n              _context5.next = 3;\n              break;\n\n            case 11:\n              ++x;\n              _context5.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, verticesFromRowsSpan, this);\n    })\n  }, {\n    key: \"entriesFromRowsSpan\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function entriesFromRowsSpan(rowsSpan) {\n      var x, y, vertex;\n      return _regeneratorRuntime.wrap(function entriesFromRowsSpan$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              x = 0;\n\n            case 1:\n              if (!(x < this.width)) {\n                _context6.next = 14;\n                break;\n              }\n\n              y = rowsSpan.rowStart;\n\n            case 3:\n              if (!(y <= rowsSpan.rowEnd)) {\n                _context6.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 8;\n              return [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\n\n            case 8:\n              ++y;\n              _context6.next = 3;\n              break;\n\n            case 11:\n              ++x;\n              _context6.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, entriesFromRowsSpan, this);\n    })\n  }, {\n    key: \"entriesFromColumnsSpan\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function entriesFromColumnsSpan(columnsSpan) {\n      var y, x, vertex;\n      return _regeneratorRuntime.wrap(function entriesFromColumnsSpan$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context7.next = 14;\n                break;\n              }\n\n              x = columnsSpan.columnStart;\n\n            case 3:\n              if (!(x <= columnsSpan.columnEnd)) {\n                _context7.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 8;\n              return [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\n\n            case 8:\n              ++x;\n              _context7.next = 3;\n              break;\n\n            case 11:\n              ++y;\n              _context7.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, entriesFromColumnsSpan, this);\n    })\n  }, {\n    key: \"vertices\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function vertices() {\n      var y, x, vertex;\n      return _regeneratorRuntime.wrap(function vertices$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context8.next = 14;\n                break;\n              }\n\n              x = 0;\n\n            case 3:\n              if (!(x < this.width)) {\n                _context8.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context8.next = 8;\n                break;\n              }\n\n              _context8.next = 8;\n              return vertex;\n\n            case 8:\n              ++x;\n              _context8.next = 3;\n              break;\n\n            case 11:\n              ++y;\n              _context8.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, vertices, this);\n    })\n  }, {\n    key: \"getCellVertex\",\n    value: function getCellVertex(x, y) {\n      var _a;\n\n      return (_a = this.mapping[y]) === null || _a === void 0 ? void 0 : _a[x];\n    }\n  }]);\n\n  return DenseStrategy;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/DependencyGraph/AddressMapping/DenseStrategy.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","simpleCellAddress","DenseStrategy","width","height","mapping","value","getCell","address","getCellVertex","col","row","setCell","newVertex","Math","max","rowMapping","has","getHeight","getWidth","removeCell","undefined","addRows","numberOfRows","_this$mapping","newRows","push","splice","apply","concat","addColumns","column","numberOfColumns","_this$mapping$i","removeRows","removedRows","rowStart","rightmostRowRemoved","min","rowEnd","numberOfRowsRemoved","removeColumns","removedColumns","columnStart","rightmostColumnRemoved","columnEnd","numberOfColumnsRemoved","mark","getEntries","sheet","y","x","vertex","wrap","getEntries$","_context","prev","next","stop","verticesFromColumn","verticesFromColumn$","_context2","verticesFromRow","verticesFromRow$","_context3","verticesFromColumnsSpan","columnsSpan","verticesFromColumnsSpan$","_context4","verticesFromRowsSpan","rowsSpan","verticesFromRowsSpan$","_context5","entriesFromRowsSpan","entriesFromRowsSpan$","_context6","entriesFromColumnsSpan","entriesFromColumnsSpan$","_context7","vertices","vertices$","_context8","_a"],"mappings":";AAAA,OAAO,gCAAP;;AAEA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,2BAA2B,CAACH,GAAD,CAA/E,IAAwFI,kBAAkB,EAAjH;AAAsH;;AAEzJ,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIC,SAAJ,CAAc,sIAAd,CAAN;AAA8J;;AAE9L,SAASF,2BAAT,CAAqCG,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,CAA/B,EAAkCQ,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIL,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAACS,WAAxB,EAAqCN,CAAC,GAAGH,CAAC,CAACS,WAAF,CAAcC,IAAlB;AAAwB,MAAIP,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOQ,KAAK,CAACC,IAAN,CAAWZ,CAAX,CAAP;AAAsB,MAAIG,CAAC,KAAK,WAAN,IAAqB,2CAA2CU,IAA3C,CAAgDV,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASL,gBAAT,CAA0BkB,IAA1B,EAAgC;AAAE,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCD,IAAI,CAACC,MAAM,CAACC,QAAR,CAAJ,IAAyB,IAA1D,IAAkEF,IAAI,CAAC,YAAD,CAAJ,IAAsB,IAA5F,EAAkG,OAAOH,KAAK,CAACC,IAAN,CAAWE,IAAX,CAAP;AAA0B;;AAE9J,SAASnB,kBAAT,CAA4BD,GAA5B,EAAiC;AAAE,MAAIiB,KAAK,CAACM,OAAN,CAAcvB,GAAd,CAAJ,EAAwB,OAAOQ,iBAAiB,CAACR,GAAD,CAAxB;AAAgC;;AAE3F,SAASQ,iBAAT,CAA2BR,GAA3B,EAAgCwB,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGxB,GAAG,CAACyB,MAA7B,EAAqCD,GAAG,GAAGxB,GAAG,CAACyB,MAAV;;AAAkB,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG,IAAIV,KAAJ,CAAUO,GAAV,CAAvB,EAAuCE,CAAC,GAAGF,GAA3C,EAAgDE,CAAC,EAAjD,EAAqD;AAAEC,IAAAA,IAAI,CAACD,CAAD,CAAJ,GAAU1B,GAAG,CAAC0B,CAAD,CAAb;AAAmB;;AAAC,SAAOC,IAAP;AAAc;;AAevL,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIzB,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAAS0B,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,KAAK,CAACR,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AAAE,QAAIQ,UAAU,GAAGD,KAAK,CAACP,CAAD,CAAtB;AAA2BQ,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4B3B,IAAAA,MAAM,CAAC4B,cAAP,CAAsBN,MAAtB,EAA8BE,UAAU,CAACK,GAAzC,EAA8CL,UAA9C;AAA4D;AAAE;;AAE7T,SAASM,YAAT,CAAsBV,WAAtB,EAAmCW,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBV,iBAAiB,CAACD,WAAW,CAACnB,SAAb,EAAwB8B,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBX,iBAAiB,CAACD,WAAD,EAAcY,WAAd,CAAjB;AAA6C,SAAOZ,WAAP;AAAqB;AAEvN;AACA;AACA;AACA;;;AACA,SAASa,iBAAT,QAAkC,YAAlC;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,aAAa,GAAG,aAAa,YAAY;AAClD;AACF;AACA;AACA;AACE,WAASA,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACpClB,IAAAA,eAAe,CAAC,IAAD,EAAOgB,aAAP,CAAf;;AAEA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAe,IAAI9B,KAAJ,CAAU6B,MAAV,CAAf;;AAEA,SAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,MAApB,EAA4BpB,CAAC,EAA7B,EAAiC;AAC/B,WAAKqB,OAAL,CAAarB,CAAb,IAAkB,IAAIT,KAAJ,CAAU4B,KAAV,CAAlB;AACD;AACF;AACD;;;AAGAL,EAAAA,YAAY,CAACI,aAAD,EAAgB,CAAC;AAC3BL,IAAAA,GAAG,EAAE,SADsB;AAE3BS,IAAAA,KAAK,EAAE,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AAC/B,aAAO,KAAKC,aAAL,CAAmBD,OAAO,CAACE,GAA3B,EAAgCF,OAAO,CAACG,GAAxC,CAAP;AACD;AACD;;AAL2B,GAAD,EAOzB;AACDd,IAAAA,GAAG,EAAE,SADJ;AAEDS,IAAAA,KAAK,EAAE,SAASM,OAAT,CAAiBJ,OAAjB,EAA0BK,SAA1B,EAAqC;AAC1C,WAAKV,KAAL,GAAaW,IAAI,CAACC,GAAL,CAAS,KAAKZ,KAAd,EAAqBK,OAAO,CAACE,GAAR,GAAc,CAAnC,CAAb;AACA,WAAKN,MAAL,GAAcU,IAAI,CAACC,GAAL,CAAS,KAAKX,MAAd,EAAsBI,OAAO,CAACG,GAAR,GAAc,CAApC,CAAd;AACA,UAAIK,UAAU,GAAG,KAAKX,OAAL,CAAaG,OAAO,CAACG,GAArB,CAAjB;;AAEA,UAAI,CAACK,UAAL,EAAiB;AACf,aAAKX,OAAL,CAAaG,OAAO,CAACG,GAArB,IAA4B,IAAIpC,KAAJ,CAAU,KAAK4B,KAAf,CAA5B;AACD;;AAED,WAAKE,OAAL,CAAaG,OAAO,CAACG,GAArB,EAA0BH,OAAO,CAACE,GAAlC,IAAyCG,SAAzC;AACD;AACD;;AAbC,GAPyB,EAsBzB;AACDhB,IAAAA,GAAG,EAAE,KADJ;AAEDS,IAAAA,KAAK,EAAE,SAASW,GAAT,CAAaT,OAAb,EAAsB;AAC3B,UAAIG,GAAG,GAAG,KAAKN,OAAL,CAAaG,OAAO,CAACG,GAArB,CAAV;;AAEA,UAAI,CAACA,GAAL,EAAU;AACR,eAAO,KAAP;AACD;;AAED,aAAO,CAAC,CAACA,GAAG,CAACH,OAAO,CAACE,GAAT,CAAZ;AACD;AACD;;AAXC,GAtByB,EAmCzB;AACDb,IAAAA,GAAG,EAAE,WADJ;AAEDS,IAAAA,KAAK,EAAE,SAASY,SAAT,GAAqB;AAC1B,aAAO,KAAKd,MAAZ;AACD;AACD;;AALC,GAnCyB,EA0CzB;AACDP,IAAAA,GAAG,EAAE,UADJ;AAEDS,IAAAA,KAAK,EAAE,SAASa,QAAT,GAAoB;AACzB,aAAO,KAAKhB,KAAZ;AACD;AAJA,GA1CyB,EA+CzB;AACDN,IAAAA,GAAG,EAAE,YADJ;AAEDS,IAAAA,KAAK,EAAE,SAASc,UAAT,CAAoBZ,OAApB,EAA6B;AAClC,UAAI,KAAKH,OAAL,CAAaG,OAAO,CAACG,GAArB,MAA8BU,SAAlC,EAA6C;AAC3C,eAAO,KAAKhB,OAAL,CAAaG,OAAO,CAACG,GAArB,EAA0BH,OAAO,CAACE,GAAlC,CAAP;AACD;AACF;AANA,GA/CyB,EAsDzB;AACDb,IAAAA,GAAG,EAAE,SADJ;AAEDS,IAAAA,KAAK,EAAE,SAASgB,OAAT,CAAiBX,GAAjB,EAAsBY,YAAtB,EAAoC;AACzC,UAAIC,aAAJ;;AAEA,UAAIC,OAAO,GAAG,EAAd;;AAEA,WAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,YAApB,EAAkCvC,CAAC,EAAnC,EAAuC;AACrCyC,QAAAA,OAAO,CAACC,IAAR,CAAa,IAAInD,KAAJ,CAAU,KAAK4B,KAAf,CAAb;AACD;;AAED,OAACqB,aAAa,GAAG,KAAKnB,OAAtB,EAA+BsB,MAA/B,CAAsCC,KAAtC,CAA4CJ,aAA5C,EAA2D,CAACb,GAAD,EAAM,CAAN,EAASkB,MAAT,CAAgBJ,OAAhB,CAA3D;;AAEA,WAAKrB,MAAL,IAAemB,YAAf;AACD;AAdA,GAtDyB,EAqEzB;AACD1B,IAAAA,GAAG,EAAE,YADJ;AAEDS,IAAAA,KAAK,EAAE,SAASwB,UAAT,CAAoBC,MAApB,EAA4BC,eAA5B,EAA6C;AAClD,WAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoB,MAAzB,EAAiCpB,CAAC,EAAlC,EAAsC;AACpC,YAAIiD,eAAJ;;AAEA,SAACA,eAAe,GAAG,KAAK5B,OAAL,CAAarB,CAAb,CAAnB,EAAoC2C,MAApC,CAA2CC,KAA3C,CAAiDK,eAAjD,EAAkE,CAACF,MAAD,EAAS,CAAT,EAAYF,MAAZ,CAAmBxE,kBAAkB,CAAC,IAAIkB,KAAJ,CAAUyD,eAAV,CAAD,CAArC,CAAlE;AACD;;AAED,WAAK7B,KAAL,IAAc6B,eAAd;AACD;AAVA,GArEyB,EAgFzB;AACDnC,IAAAA,GAAG,EAAE,YADJ;AAEDS,IAAAA,KAAK,EAAE,SAAS4B,UAAT,CAAoBC,WAApB,EAAiC;AACtC,WAAK9B,OAAL,CAAasB,MAAb,CAAoBQ,WAAW,CAACC,QAAhC,EAA0CD,WAAW,CAACZ,YAAtD;AACA,UAAIc,mBAAmB,GAAGvB,IAAI,CAACwB,GAAL,CAAS,KAAKlC,MAAL,GAAc,CAAvB,EAA0B+B,WAAW,CAACI,MAAtC,CAA1B;AACA,UAAIC,mBAAmB,GAAG1B,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYsB,mBAAmB,GAAGF,WAAW,CAACC,QAAlC,GAA6C,CAAzD,CAA1B;AACA,WAAKhC,MAAL,GAAcU,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKX,MAAL,GAAcoC,mBAA1B,CAAd;AACD;AAPA,GAhFyB,EAwFzB;AACD3C,IAAAA,GAAG,EAAE,eADJ;AAEDS,IAAAA,KAAK,EAAE,SAASmC,aAAT,CAAuBC,cAAvB,EAAuC;AAC5C,WAAK,IAAI1D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoB,MAAzB,EAAiCpB,CAAC,EAAlC,EAAsC;AACpC,aAAKqB,OAAL,CAAarB,CAAb,EAAgB2C,MAAhB,CAAuBe,cAAc,CAACC,WAAtC,EAAmDD,cAAc,CAACV,eAAlE;AACD;;AAED,UAAIY,sBAAsB,GAAG9B,IAAI,CAACwB,GAAL,CAAS,KAAKnC,KAAL,GAAa,CAAtB,EAAyBuC,cAAc,CAACG,SAAxC,CAA7B;AACA,UAAIC,sBAAsB,GAAGhC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY6B,sBAAsB,GAAGF,cAAc,CAACC,WAAxC,GAAsD,CAAlE,CAA7B;AACA,WAAKxC,KAAL,GAAaW,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKZ,KAAL,GAAa2C,sBAAzB,CAAb;AACD;AAVA,GAxFyB,EAmGzB;AACDjD,IAAAA,GAAG,EAAE,YADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACrE,UAAIC,CAAJ,EAAOC,CAAP,EAAUC,MAAV;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC5D,eAAO,CAAP,EAAU;AACR,kBAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACE,iBAAK,CAAL;AACEP,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAK9C,MAAX,CAAJ,EAAwB;AACtBmD,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDN,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAKhD,KAAX,CAAJ,EAAuB;AACrBoD,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBD,CAAtB,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACXG,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA;AACD;;AAEDF,cAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA,qBAAO,CAACxD,iBAAiB,CAACgD,KAAD,EAAQE,CAAR,EAAWD,CAAX,CAAlB,EAAiCE,MAAjC,CAAP;;AAEF,iBAAK,CAAL;AACE,gBAAED,CAAF;AACAI,cAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA;;AAEF,iBAAK,EAAL;AACE,gBAAEP,CAAF;AACAK,cAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA;;AAEF,iBAAK,EAAL;AACA,iBAAK,KAAL;AACE,qBAAOF,QAAQ,CAACG,IAAT,EAAP;AAxCJ;AA0CD;AACF,OA7CM,EA6CJV,UA7CI,EA6CQ,IA7CR,CAAP;AA8CD,KAhDmB;AAFnB,GAnGyB,EAsJzB;AACDnD,IAAAA,GAAG,EAAE,oBADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAASY,kBAAT,CAA4B5B,MAA5B,EAAoC;AAC9E,UAAImB,CAAJ,EAAOE,MAAP;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASO,mBAAT,CAA6BC,SAA7B,EAAwC;AACrE,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAACL,IAAV,GAAiBK,SAAS,CAACJ,IAAnC;AACE,iBAAK,CAAL;AACEP,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAK9C,MAAX,CAAJ,EAAwB;AACtByD,gBAAAA,SAAS,CAACJ,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmBsB,MAAnB,EAA2BmB,CAA3B,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACXS,gBAAAA,SAAS,CAACJ,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDI,cAAAA,SAAS,CAACJ,IAAV,GAAiB,CAAjB;AACA,qBAAOL,MAAP;;AAEF,iBAAK,CAAL;AACE,gBAAEF,CAAF;AACAW,cAAAA,SAAS,CAACJ,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,CAAL;AACA,iBAAK,KAAL;AACE,qBAAOI,SAAS,CAACH,IAAV,EAAP;AA3BJ;AA6BD;AACF,OAhCM,EAgCJC,kBAhCI,EAgCgB,IAhChB,CAAP;AAiCD,KAnCmB;AAFnB,GAtJyB,EA4LzB;AACD9D,IAAAA,GAAG,EAAE,iBADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAASe,eAAT,CAAyBnD,GAAzB,EAA8B;AACxE,UAAIwC,CAAJ,EAAOC,MAAP;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASU,gBAAT,CAA0BC,SAA1B,EAAqC;AAClE,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAACR,IAAV,GAAiBQ,SAAS,CAACP,IAAnC;AACE,iBAAK,CAAL;AACEN,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAKhD,KAAX,CAAJ,EAAuB;AACrB6D,gBAAAA,SAAS,CAACP,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBxC,GAAtB,CAAT;;AAEA,kBAAI,CAACyC,MAAL,EAAa;AACXY,gBAAAA,SAAS,CAACP,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDO,cAAAA,SAAS,CAACP,IAAV,GAAiB,CAAjB;AACA,qBAAOL,MAAP;;AAEF,iBAAK,CAAL;AACE,gBAAED,CAAF;AACAa,cAAAA,SAAS,CAACP,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,CAAL;AACA,iBAAK,KAAL;AACE,qBAAOO,SAAS,CAACN,IAAV,EAAP;AA3BJ;AA6BD;AACF,OAhCM,EAgCJI,eAhCI,EAgCa,IAhCb,CAAP;AAiCD,KAnCmB;AAFnB,GA5LyB,EAkOzB;AACDjE,IAAAA,GAAG,EAAE,yBADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAASkB,uBAAT,CAAiCC,WAAjC,EAA8C;AACxF,UAAIf,CAAJ,EAAOD,CAAP,EAAUE,MAAV;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASc,wBAAT,CAAkCC,SAAlC,EAA6C;AAC1E,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAACZ,IAAV,GAAiBY,SAAS,CAACX,IAAnC;AACE,iBAAK,CAAL;AACEN,cAAAA,CAAC,GAAGe,WAAW,CAACvB,WAAhB;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEQ,CAAC,IAAIe,WAAW,CAACrB,SAAnB,CAAJ,EAAmC;AACjCuB,gBAAAA,SAAS,CAACX,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDP,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAK9C,MAAX,CAAJ,EAAwB;AACtBgE,gBAAAA,SAAS,CAACX,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBD,CAAtB,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACXgB,gBAAAA,SAAS,CAACX,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDW,cAAAA,SAAS,CAACX,IAAV,GAAiB,CAAjB;AACA,qBAAOL,MAAP;;AAEF,iBAAK,CAAL;AACE,gBAAEF,CAAF;AACAkB,cAAAA,SAAS,CAACX,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACE,gBAAEN,CAAF;AACAiB,cAAAA,SAAS,CAACX,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACA,iBAAK,KAAL;AACE,qBAAOW,SAAS,CAACV,IAAV,EAAP;AAxCJ;AA0CD;AACF,OA7CM,EA6CJO,uBA7CI,EA6CqB,IA7CrB,CAAP;AA8CD,KAhDmB;AAFnB,GAlOyB,EAqRzB;AACDpE,IAAAA,GAAG,EAAE,sBADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAASsB,oBAAT,CAA8BC,QAA9B,EAAwC;AAClF,UAAInB,CAAJ,EAAOD,CAAP,EAAUE,MAAV;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASkB,qBAAT,CAA+BC,SAA/B,EAA0C;AACvE,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAAChB,IAAV,GAAiBgB,SAAS,CAACf,IAAnC;AACE,iBAAK,CAAL;AACEN,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAKhD,KAAX,CAAJ,EAAuB;AACrBqE,gBAAAA,SAAS,CAACf,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDP,cAAAA,CAAC,GAAGoB,QAAQ,CAAClC,QAAb;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEc,CAAC,IAAIoB,QAAQ,CAAC/B,MAAhB,CAAJ,EAA6B;AAC3BiC,gBAAAA,SAAS,CAACf,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBD,CAAtB,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACXoB,gBAAAA,SAAS,CAACf,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDe,cAAAA,SAAS,CAACf,IAAV,GAAiB,CAAjB;AACA,qBAAOL,MAAP;;AAEF,iBAAK,CAAL;AACE,gBAAEF,CAAF;AACAsB,cAAAA,SAAS,CAACf,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACE,gBAAEN,CAAF;AACAqB,cAAAA,SAAS,CAACf,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACA,iBAAK,KAAL;AACE,qBAAOe,SAAS,CAACd,IAAV,EAAP;AAxCJ;AA0CD;AACF,OA7CM,EA6CJW,oBA7CI,EA6CkB,IA7ClB,CAAP;AA8CD,KAhDmB;AAFnB,GArRyB,EAwUzB;AACDxE,IAAAA,GAAG,EAAE,qBADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAAS0B,mBAAT,CAA6BH,QAA7B,EAAuC;AACjF,UAAInB,CAAJ,EAAOD,CAAP,EAAUE,MAAV;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASqB,oBAAT,CAA8BC,SAA9B,EAAyC;AACtE,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAACnB,IAAV,GAAiBmB,SAAS,CAAClB,IAAnC;AACE,iBAAK,CAAL;AACEN,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAKhD,KAAX,CAAJ,EAAuB;AACrBwE,gBAAAA,SAAS,CAAClB,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDP,cAAAA,CAAC,GAAGoB,QAAQ,CAAClC,QAAb;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEc,CAAC,IAAIoB,QAAQ,CAAC/B,MAAhB,CAAJ,EAA6B;AAC3BoC,gBAAAA,SAAS,CAAClB,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBD,CAAtB,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACXuB,gBAAAA,SAAS,CAAClB,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDkB,cAAAA,SAAS,CAAClB,IAAV,GAAiB,CAAjB;AACA,qBAAO,CAACxD,iBAAiB,CAACqE,QAAQ,CAACrB,KAAV,EAAiBE,CAAjB,EAAoBD,CAApB,CAAlB,EAA0CE,MAA1C,CAAP;;AAEF,iBAAK,CAAL;AACE,gBAAEF,CAAF;AACAyB,cAAAA,SAAS,CAAClB,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACE,gBAAEN,CAAF;AACAwB,cAAAA,SAAS,CAAClB,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACA,iBAAK,KAAL;AACE,qBAAOkB,SAAS,CAACjB,IAAV,EAAP;AAxCJ;AA0CD;AACF,OA7CM,EA6CJe,mBA7CI,EA6CiB,IA7CjB,CAAP;AA8CD,KAhDmB;AAFnB,GAxUyB,EA2XzB;AACD5E,IAAAA,GAAG,EAAE,wBADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAAS6B,sBAAT,CAAgCV,WAAhC,EAA6C;AACvF,UAAIhB,CAAJ,EAAOC,CAAP,EAAUC,MAAV;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAASwB,uBAAT,CAAiCC,SAAjC,EAA4C;AACzE,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAACtB,IAAV,GAAiBsB,SAAS,CAACrB,IAAnC;AACE,iBAAK,CAAL;AACEP,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAK9C,MAAX,CAAJ,EAAwB;AACtB0E,gBAAAA,SAAS,CAACrB,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDN,cAAAA,CAAC,GAAGe,WAAW,CAACvB,WAAhB;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEQ,CAAC,IAAIe,WAAW,CAACrB,SAAnB,CAAJ,EAAmC;AACjCiC,gBAAAA,SAAS,CAACrB,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBD,CAAtB,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACX0B,gBAAAA,SAAS,CAACrB,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDqB,cAAAA,SAAS,CAACrB,IAAV,GAAiB,CAAjB;AACA,qBAAO,CAACxD,iBAAiB,CAACiE,WAAW,CAACjB,KAAb,EAAoBE,CAApB,EAAuBD,CAAvB,CAAlB,EAA6CE,MAA7C,CAAP;;AAEF,iBAAK,CAAL;AACE,gBAAED,CAAF;AACA2B,cAAAA,SAAS,CAACrB,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACE,gBAAEP,CAAF;AACA4B,cAAAA,SAAS,CAACrB,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACA,iBAAK,KAAL;AACE,qBAAOqB,SAAS,CAACpB,IAAV,EAAP;AAxCJ;AA0CD;AACF,OA7CM,EA6CJkB,sBA7CI,EA6CoB,IA7CpB,CAAP;AA8CD,KAhDmB;AAFnB,GA3XyB,EA8azB;AACD/E,IAAAA,GAAG,EAAE,UADJ;AAEDS,IAAAA,KAAK,EAAE,aAAa,oBAAmByC,IAAnB,CAAwB,SAASgC,QAAT,GAAoB;AAC9D,UAAI7B,CAAJ,EAAOC,CAAP,EAAUC,MAAV;AACA,aAAO,oBAAmBC,IAAnB,CAAwB,SAAS2B,SAAT,CAAmBC,SAAnB,EAA8B;AAC3D,eAAO,CAAP,EAAU;AACR,kBAAQA,SAAS,CAACzB,IAAV,GAAiByB,SAAS,CAACxB,IAAnC;AACE,iBAAK,CAAL;AACEP,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAK9C,MAAX,CAAJ,EAAwB;AACtB6E,gBAAAA,SAAS,CAACxB,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDN,cAAAA,CAAC,GAAG,CAAJ;;AAEF,iBAAK,CAAL;AACE,kBAAI,EAAEA,CAAC,GAAG,KAAKhD,KAAX,CAAJ,EAAuB;AACrB8E,gBAAAA,SAAS,CAACxB,IAAV,GAAiB,EAAjB;AACA;AACD;;AAEDL,cAAAA,MAAM,GAAG,KAAK3C,aAAL,CAAmB0C,CAAnB,EAAsBD,CAAtB,CAAT;;AAEA,kBAAI,CAACE,MAAL,EAAa;AACX6B,gBAAAA,SAAS,CAACxB,IAAV,GAAiB,CAAjB;AACA;AACD;;AAEDwB,cAAAA,SAAS,CAACxB,IAAV,GAAiB,CAAjB;AACA,qBAAOL,MAAP;;AAEF,iBAAK,CAAL;AACE,gBAAED,CAAF;AACA8B,cAAAA,SAAS,CAACxB,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACE,gBAAEP,CAAF;AACA+B,cAAAA,SAAS,CAACxB,IAAV,GAAiB,CAAjB;AACA;;AAEF,iBAAK,EAAL;AACA,iBAAK,KAAL;AACE,qBAAOwB,SAAS,CAACvB,IAAV,EAAP;AAxCJ;AA0CD;AACF,OA7CM,EA6CJqB,QA7CI,EA6CM,IA7CN,CAAP;AA8CD,KAhDmB;AAFnB,GA9ayB,EAiezB;AACDlF,IAAAA,GAAG,EAAE,eADJ;AAEDS,IAAAA,KAAK,EAAE,SAASG,aAAT,CAAuB0C,CAAvB,EAA0BD,CAA1B,EAA6B;AAClC,UAAIgC,EAAJ;;AAEA,aAAO,CAACA,EAAE,GAAG,KAAK7E,OAAL,CAAa6C,CAAb,CAAN,MAA2B,IAA3B,IAAmCgC,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAAC/B,CAAD,CAArE;AACD;AANA,GAjeyB,CAAhB,CAAZ;;AA0eA,SAAOjD,aAAP;AACD,CA9fuC,EAAjC","sourcesContent":["import \"regenerator-runtime/runtime.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../../Cell';\n/**\n * Mapping from cell addresses to vertices\n *\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\n */\n\nexport var DenseStrategy = /*#__PURE__*/function () {\n  /**\n   * @param width - width of the stored sheet\n   * @param height - height of the stored sheet\n   */\n  function DenseStrategy(width, height) {\n    _classCallCheck(this, DenseStrategy);\n\n    this.width = width;\n    this.height = height;\n    this.mapping = new Array(height);\n\n    for (var i = 0; i < height; i++) {\n      this.mapping[i] = new Array(width);\n    }\n  }\n  /** @inheritDoc */\n\n\n  _createClass(DenseStrategy, [{\n    key: \"getCell\",\n    value: function getCell(address) {\n      return this.getCellVertex(address.col, address.row);\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"setCell\",\n    value: function setCell(address, newVertex) {\n      this.width = Math.max(this.width, address.col + 1);\n      this.height = Math.max(this.height, address.row + 1);\n      var rowMapping = this.mapping[address.row];\n\n      if (!rowMapping) {\n        this.mapping[address.row] = new Array(this.width);\n      }\n\n      this.mapping[address.row][address.col] = newVertex;\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"has\",\n    value: function has(address) {\n      var row = this.mapping[address.row];\n\n      if (!row) {\n        return false;\n      }\n\n      return !!row[address.col];\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.height;\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.width;\n    }\n  }, {\n    key: \"removeCell\",\n    value: function removeCell(address) {\n      if (this.mapping[address.row] !== undefined) {\n        delete this.mapping[address.row][address.col];\n      }\n    }\n  }, {\n    key: \"addRows\",\n    value: function addRows(row, numberOfRows) {\n      var _this$mapping;\n\n      var newRows = [];\n\n      for (var i = 0; i < numberOfRows; i++) {\n        newRows.push(new Array(this.width));\n      }\n\n      (_this$mapping = this.mapping).splice.apply(_this$mapping, [row, 0].concat(newRows));\n\n      this.height += numberOfRows;\n    }\n  }, {\n    key: \"addColumns\",\n    value: function addColumns(column, numberOfColumns) {\n      for (var i = 0; i < this.height; i++) {\n        var _this$mapping$i;\n\n        (_this$mapping$i = this.mapping[i]).splice.apply(_this$mapping$i, [column, 0].concat(_toConsumableArray(new Array(numberOfColumns))));\n      }\n\n      this.width += numberOfColumns;\n    }\n  }, {\n    key: \"removeRows\",\n    value: function removeRows(removedRows) {\n      this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\n      var rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\n      var numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\n      this.height = Math.max(0, this.height - numberOfRowsRemoved);\n    }\n  }, {\n    key: \"removeColumns\",\n    value: function removeColumns(removedColumns) {\n      for (var i = 0; i < this.height; i++) {\n        this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\n      }\n\n      var rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\n      var numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\n      this.width = Math.max(0, this.width - numberOfColumnsRemoved);\n    }\n  }, {\n    key: \"getEntries\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function getEntries(sheet) {\n      var y, x, vertex;\n      return regeneratorRuntime.wrap(function getEntries$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context.next = 14;\n                break;\n              }\n\n              x = 0;\n\n            case 3:\n              if (!(x < this.width)) {\n                _context.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 8;\n              return [simpleCellAddress(sheet, x, y), vertex];\n\n            case 8:\n              ++x;\n              _context.next = 3;\n              break;\n\n            case 11:\n              ++y;\n              _context.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getEntries, this);\n    })\n  }, {\n    key: \"verticesFromColumn\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function verticesFromColumn(column) {\n      var y, vertex;\n      return regeneratorRuntime.wrap(function verticesFromColumn$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context2.next = 9;\n                break;\n              }\n\n              vertex = this.getCellVertex(column, y);\n\n              if (!vertex) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 6;\n              return vertex;\n\n            case 6:\n              ++y;\n              _context2.next = 1;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, verticesFromColumn, this);\n    })\n  }, {\n    key: \"verticesFromRow\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function verticesFromRow(row) {\n      var x, vertex;\n      return regeneratorRuntime.wrap(function verticesFromRow$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              x = 0;\n\n            case 1:\n              if (!(x < this.width)) {\n                _context3.next = 9;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, row);\n\n              if (!vertex) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 6;\n              return vertex;\n\n            case 6:\n              ++x;\n              _context3.next = 1;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, verticesFromRow, this);\n    })\n  }, {\n    key: \"verticesFromColumnsSpan\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function verticesFromColumnsSpan(columnsSpan) {\n      var x, y, vertex;\n      return regeneratorRuntime.wrap(function verticesFromColumnsSpan$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              x = columnsSpan.columnStart;\n\n            case 1:\n              if (!(x <= columnsSpan.columnEnd)) {\n                _context4.next = 14;\n                break;\n              }\n\n              y = 0;\n\n            case 3:\n              if (!(y < this.height)) {\n                _context4.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 8;\n              return vertex;\n\n            case 8:\n              ++y;\n              _context4.next = 3;\n              break;\n\n            case 11:\n              ++x;\n              _context4.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, verticesFromColumnsSpan, this);\n    })\n  }, {\n    key: \"verticesFromRowsSpan\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function verticesFromRowsSpan(rowsSpan) {\n      var x, y, vertex;\n      return regeneratorRuntime.wrap(function verticesFromRowsSpan$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              x = 0;\n\n            case 1:\n              if (!(x < this.width)) {\n                _context5.next = 14;\n                break;\n              }\n\n              y = rowsSpan.rowStart;\n\n            case 3:\n              if (!(y <= rowsSpan.rowEnd)) {\n                _context5.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context5.next = 8;\n                break;\n              }\n\n              _context5.next = 8;\n              return vertex;\n\n            case 8:\n              ++y;\n              _context5.next = 3;\n              break;\n\n            case 11:\n              ++x;\n              _context5.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, verticesFromRowsSpan, this);\n    })\n  }, {\n    key: \"entriesFromRowsSpan\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function entriesFromRowsSpan(rowsSpan) {\n      var x, y, vertex;\n      return regeneratorRuntime.wrap(function entriesFromRowsSpan$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              x = 0;\n\n            case 1:\n              if (!(x < this.width)) {\n                _context6.next = 14;\n                break;\n              }\n\n              y = rowsSpan.rowStart;\n\n            case 3:\n              if (!(y <= rowsSpan.rowEnd)) {\n                _context6.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.next = 8;\n              return [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\n\n            case 8:\n              ++y;\n              _context6.next = 3;\n              break;\n\n            case 11:\n              ++x;\n              _context6.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, entriesFromRowsSpan, this);\n    })\n  }, {\n    key: \"entriesFromColumnsSpan\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function entriesFromColumnsSpan(columnsSpan) {\n      var y, x, vertex;\n      return regeneratorRuntime.wrap(function entriesFromColumnsSpan$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context7.next = 14;\n                break;\n              }\n\n              x = columnsSpan.columnStart;\n\n            case 3:\n              if (!(x <= columnsSpan.columnEnd)) {\n                _context7.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 8;\n              return [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\n\n            case 8:\n              ++x;\n              _context7.next = 3;\n              break;\n\n            case 11:\n              ++y;\n              _context7.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, entriesFromColumnsSpan, this);\n    })\n  }, {\n    key: \"vertices\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function vertices() {\n      var y, x, vertex;\n      return regeneratorRuntime.wrap(function vertices$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              y = 0;\n\n            case 1:\n              if (!(y < this.height)) {\n                _context8.next = 14;\n                break;\n              }\n\n              x = 0;\n\n            case 3:\n              if (!(x < this.width)) {\n                _context8.next = 11;\n                break;\n              }\n\n              vertex = this.getCellVertex(x, y);\n\n              if (!vertex) {\n                _context8.next = 8;\n                break;\n              }\n\n              _context8.next = 8;\n              return vertex;\n\n            case 8:\n              ++x;\n              _context8.next = 3;\n              break;\n\n            case 11:\n              ++y;\n              _context8.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, vertices, this);\n    })\n  }, {\n    key: \"getCellVertex\",\n    value: function getCellVertex(x, y) {\n      var _a;\n\n      return (_a = this.mapping[y]) === null || _a === void 0 ? void 0 : _a[x];\n    }\n  }]);\n\n  return DenseStrategy;\n}();"]},"metadata":{},"sourceType":"module"}