{"ast":null,"code":"import { Alternation, Flat, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\n\nvar GAstVisitor = function () {\n  function GAstVisitor() {}\n\n  GAstVisitor.prototype.visit = function (node) {\n    var nodeAny = node;\n\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny);\n\n      case Flat:\n        return this.visitFlat(nodeAny);\n\n      case Option:\n        return this.visitOption(nodeAny);\n\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny);\n\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny);\n\n      case Repetition:\n        return this.visitRepetition(nodeAny);\n\n      case Alternation:\n        return this.visitAlternation(nodeAny);\n\n      case Terminal:\n        return this.visitTerminal(nodeAny);\n\n      case Rule:\n        return this.visitRule(nodeAny);\n\n      /* istanbul ignore next */\n\n      default:\n        throw Error(\"non exhaustive match\");\n    }\n  };\n\n  GAstVisitor.prototype.visitNonTerminal = function (node) {};\n\n  GAstVisitor.prototype.visitFlat = function (node) {};\n\n  GAstVisitor.prototype.visitOption = function (node) {};\n\n  GAstVisitor.prototype.visitRepetition = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionMandatory = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) {};\n\n  GAstVisitor.prototype.visitAlternation = function (node) {};\n\n  GAstVisitor.prototype.visitTerminal = function (node) {};\n\n  GAstVisitor.prototype.visitRule = function (node) {};\n\n  return GAstVisitor;\n}();\n\nexport { GAstVisitor };","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js"],"names":["Alternation","Flat","NonTerminal","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Rule","Terminal","GAstVisitor","prototype","visit","node","nodeAny","constructor","visitNonTerminal","visitFlat","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","Error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,IAAtB,EAA4BC,WAA5B,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA6DC,mBAA7D,EAAkFC,gCAAlF,EAAoHC,uBAApH,EAA6IC,IAA7I,EAAmJC,QAAnJ,QAAmK,eAAnK;;AACA,IAAIC,WAAW,GAAkB,YAAY;AACzC,WAASA,WAAT,GAAuB,CACtB;;AACDA,EAAAA,WAAW,CAACC,SAAZ,CAAsBC,KAAtB,GAA8B,UAAUC,IAAV,EAAgB;AAC1C,QAAIC,OAAO,GAAGD,IAAd;;AACA,YAAQC,OAAO,CAACC,WAAhB;AACI,WAAKb,WAAL;AACI,eAAO,KAAKc,gBAAL,CAAsBF,OAAtB,CAAP;;AACJ,WAAKb,IAAL;AACI,eAAO,KAAKgB,SAAL,CAAeH,OAAf,CAAP;;AACJ,WAAKX,MAAL;AACI,eAAO,KAAKe,WAAL,CAAiBJ,OAAjB,CAAP;;AACJ,WAAKT,mBAAL;AACI,eAAO,KAAKc,wBAAL,CAA8BL,OAA9B,CAAP;;AACJ,WAAKR,gCAAL;AACI,eAAO,KAAKc,qCAAL,CAA2CN,OAA3C,CAAP;;AACJ,WAAKP,uBAAL;AACI,eAAO,KAAKc,4BAAL,CAAkCP,OAAlC,CAAP;;AACJ,WAAKV,UAAL;AACI,eAAO,KAAKkB,eAAL,CAAqBR,OAArB,CAAP;;AACJ,WAAKd,WAAL;AACI,eAAO,KAAKuB,gBAAL,CAAsBT,OAAtB,CAAP;;AACJ,WAAKL,QAAL;AACI,eAAO,KAAKe,aAAL,CAAmBV,OAAnB,CAAP;;AACJ,WAAKN,IAAL;AACI,eAAO,KAAKiB,SAAL,CAAeX,OAAf,CAAP;;AACJ;;AACA;AACI,cAAMY,KAAK,CAAC,sBAAD,CAAX;AAvBR;AAyBH,GA3BD;;AA4BAhB,EAAAA,WAAW,CAACC,SAAZ,CAAsBK,gBAAtB,GAAyC,UAAUH,IAAV,EAAgB,CAAG,CAA5D;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBM,SAAtB,GAAkC,UAAUJ,IAAV,EAAgB,CAAG,CAArD;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBO,WAAtB,GAAoC,UAAUL,IAAV,EAAgB,CAAG,CAAvD;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBW,eAAtB,GAAwC,UAAUT,IAAV,EAAgB,CAAG,CAA3D;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBQ,wBAAtB,GAAiD,UAAUN,IAAV,EAAgB,CAAG,CAApE;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBS,qCAAtB,GAA8D,UAAUP,IAAV,EAAgB,CAAG,CAAjF;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBU,4BAAtB,GAAqD,UAAUR,IAAV,EAAgB,CAAG,CAAxE;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBY,gBAAtB,GAAyC,UAAUV,IAAV,EAAgB,CAAG,CAA5D;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBa,aAAtB,GAAsC,UAAUX,IAAV,EAAgB,CAAG,CAAzD;;AACAH,EAAAA,WAAW,CAACC,SAAZ,CAAsBc,SAAtB,GAAkC,UAAUZ,IAAV,EAAgB,CAAG,CAArD;;AACA,SAAOH,WAAP;AACH,CA1CgC,EAAjC;;AA2CA,SAASA,WAAT","sourcesContent":["import { Alternation, Flat, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nvar GAstVisitor = /** @class */ (function () {\n    function GAstVisitor() {\n    }\n    GAstVisitor.prototype.visit = function (node) {\n        var nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Flat:\n                return this.visitFlat(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* istanbul ignore next */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    };\n    GAstVisitor.prototype.visitNonTerminal = function (node) { };\n    GAstVisitor.prototype.visitFlat = function (node) { };\n    GAstVisitor.prototype.visitOption = function (node) { };\n    GAstVisitor.prototype.visitRepetition = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitAlternation = function (node) { };\n    GAstVisitor.prototype.visitTerminal = function (node) { };\n    GAstVisitor.prototype.visitRule = function (node) { };\n    return GAstVisitor;\n}());\nexport { GAstVisitor };\n//# sourceMappingURL=gast_visitor_public.js.map"]},"metadata":{},"sourceType":"module"}