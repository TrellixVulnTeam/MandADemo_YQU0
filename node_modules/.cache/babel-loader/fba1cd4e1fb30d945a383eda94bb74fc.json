{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport var AddColumnsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(AddColumnsTransformer, _Transformer);\n\n  var _super = _createSuper(AddColumnsTransformer);\n\n  function AddColumnsTransformer(columnsSpan) {\n    var _this;\n\n    _classCallCheck(this, AddColumnsTransformer);\n\n    _this = _super.call(this);\n    _this.columnsSpan = columnsSpan;\n    return _this;\n  }\n\n  _createClass(AddColumnsTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.columnsSpan.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return false;\n    }\n  }, {\n    key: \"transformRowRangeAst\",\n    value: function transformRowRangeAst(ast, _formulaAddress) {\n      return ast;\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(_start, _end, _formulaAddress) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      var absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress); // Case 4 and 5\n\n      if (absoluteDependencySheet !== this.columnsSpan.sheet && formulaAddress.sheet !== this.columnsSpan.sheet) {\n        return false;\n      }\n\n      var absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress); // Case 3\n\n      if (absoluteDependencySheet === this.columnsSpan.sheet && formulaAddress.sheet !== this.columnsSpan.sheet) {\n        if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\n          return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n        } else {\n          return false;\n        }\n      } // Case 2\n\n\n      if (formulaAddress.sheet === this.columnsSpan.sheet && absoluteDependencySheet !== this.columnsSpan.sheet) {\n        if (dependencyAddress.isColumnAbsolute()) {\n          return false;\n        }\n\n        if (formulaAddress.col < this.columnsSpan.columnStart) {\n          return false;\n        }\n\n        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n      } // Case 1\n\n\n      if (dependencyAddress.isColumnAbsolute()) {\n        if (dependencyAddress.col < this.columnsSpan.columnStart) {\n          // Case Aa\n          return false;\n        } else {\n          // Case Ab\n          return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n        }\n      } else {\n        var _absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n\n        if (_absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\n          if (formulaAddress.col < this.columnsSpan.columnStart) {\n            // Case Raa\n            return false;\n          } else {\n            // Case Rab\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n          }\n        } else {\n          if (formulaAddress.col < this.columnsSpan.columnStart) {\n            // Case Rba\n            return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n          } else {\n            // Case Rbb\n            return false;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\n        return Object.assign(Object.assign({}, address), {\n          col: address.col + this.columnsSpan.numberOfColumns\n        });\n      } else {\n        return address;\n      }\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var newStart = this.transformCellAddress(start, formulaAddress);\n      var newEnd = this.transformCellAddress(end, formulaAddress);\n\n      if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n        return ErrorType.REF;\n      } else if (newStart || newEnd) {\n        return [newStart || start, newEnd || end];\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return AddColumnsTransformer;\n}(Transformer);","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/dependencyTransformers/AddColumnsTransformer.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","absoluteSheetReference","ErrorType","Transformer","AddColumnsTransformer","_Transformer","_super","columnsSpan","_this","get","sheet","isIrreversible","transformRowRangeAst","ast","_formulaAddress","transformCellRange","start","end","formulaAddress","transformRange","transformRowRange","_start","_end","Error","transformColumnRange","transformCellAddress","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","toSimpleColumnAddress","columnStart","col","shiftedByColumns","numberOfColumns","isColumnAbsolute","_absolutizedDependencyAddress","fixNodeAddress","address","assign","newStart","newEnd","REF"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport var AddColumnsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(AddColumnsTransformer, _Transformer);\n\n  var _super = _createSuper(AddColumnsTransformer);\n\n  function AddColumnsTransformer(columnsSpan) {\n    var _this;\n\n    _classCallCheck(this, AddColumnsTransformer);\n\n    _this = _super.call(this);\n    _this.columnsSpan = columnsSpan;\n    return _this;\n  }\n\n  _createClass(AddColumnsTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.columnsSpan.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return false;\n    }\n  }, {\n    key: \"transformRowRangeAst\",\n    value: function transformRowRangeAst(ast, _formulaAddress) {\n      return ast;\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(_start, _end, _formulaAddress) {\n      throw Error('Not implemented');\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      var absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress); // Case 4 and 5\n\n      if (absoluteDependencySheet !== this.columnsSpan.sheet && formulaAddress.sheet !== this.columnsSpan.sheet) {\n        return false;\n      }\n\n      var absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress); // Case 3\n\n      if (absoluteDependencySheet === this.columnsSpan.sheet && formulaAddress.sheet !== this.columnsSpan.sheet) {\n        if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\n          return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n        } else {\n          return false;\n        }\n      } // Case 2\n\n\n      if (formulaAddress.sheet === this.columnsSpan.sheet && absoluteDependencySheet !== this.columnsSpan.sheet) {\n        if (dependencyAddress.isColumnAbsolute()) {\n          return false;\n        }\n\n        if (formulaAddress.col < this.columnsSpan.columnStart) {\n          return false;\n        }\n\n        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n      } // Case 1\n\n\n      if (dependencyAddress.isColumnAbsolute()) {\n        if (dependencyAddress.col < this.columnsSpan.columnStart) {\n          // Case Aa\n          return false;\n        } else {\n          // Case Ab\n          return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n        }\n      } else {\n        var _absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n\n        if (_absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\n          if (formulaAddress.col < this.columnsSpan.columnStart) {\n            // Case Raa\n            return false;\n          } else {\n            // Case Rab\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n          }\n        } else {\n          if (formulaAddress.col < this.columnsSpan.columnStart) {\n            // Case Rba\n            return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n          } else {\n            // Case Rbb\n            return false;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\n        return Object.assign(Object.assign({}, address), {\n          col: address.col + this.columnsSpan.numberOfColumns\n        });\n      } else {\n        return address;\n      }\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var newStart = this.transformCellAddress(start, formulaAddress);\n      var newEnd = this.transformCellAddress(end, formulaAddress);\n\n      if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n        return ErrorType.REF;\n      } else if (newStart || newEnd) {\n        return [newStart || start, newEnd || end];\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return AddColumnsTransformer;\n}(Transformer);"]},"metadata":{},"sourceType":"module"}