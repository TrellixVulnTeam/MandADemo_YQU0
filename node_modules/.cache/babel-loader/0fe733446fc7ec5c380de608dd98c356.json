{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing text-specific functions\n */\n\nexport var TextPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(TextPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(TextPlugin);\n\n  function TextPlugin() {\n    _classCallCheck(this, TextPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextPlugin, [{\n    key: \"concatenate\",\n    value:\n    /**\n     * Corresponds to CONCATENATE(value1, [value2, ...])\n     *\n     * Concatenates provided arguments to one string.\n     *\n     * @param ast\n     * @param state\n     */\n    function concatenate(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CONCATENATE'), function () {\n        var _ref;\n\n        return (_ref = '').concat.apply(_ref, arguments);\n      });\n    }\n    /**\n     * Corresponds to SPLIT(string, index)\n     *\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\n     *\n     * @param ast\n     * @param state\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('SPLIT'), function (stringToSplit, indexToUse) {\n        var splittedString = stringToSplit.split(' ');\n\n        if (indexToUse >= splittedString.length || indexToUse < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\n        }\n\n        return splittedString[indexToUse];\n      });\n    }\n  }, {\n    key: \"len\",\n    value: function len(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LEN'), function (arg) {\n        return arg.length;\n      });\n    }\n  }, {\n    key: \"lower\",\n    value: function lower(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LOWER'), function (arg) {\n        return arg.toLowerCase();\n      });\n    }\n  }, {\n    key: \"trim\",\n    value: function trim(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('TRIM'), function (arg) {\n        return arg.replace(/^ +| +$/g, '').replace(/ +/g, ' ');\n      });\n    }\n  }, {\n    key: \"proper\",\n    value: function proper(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('PROPER'), function (arg) {\n        return arg.replace(/\\w\\S*/g, function (word) {\n          return word.charAt(0).toUpperCase() + word.substring(1).toLowerCase();\n        });\n      });\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CLEAN'), function (arg) {\n        // eslint-disable-next-line no-control-regex\n        return arg.replace(/[\\u0000-\\u001F]/g, '');\n      });\n    }\n  }, {\n    key: \"exact\",\n    value: function exact(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('EXACT'), function (left, right) {\n        return left === right;\n      });\n    }\n  }, {\n    key: \"rept\",\n    value: function rept(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('REPT'), function (text, count) {\n        if (count < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeCount);\n        }\n\n        return text.repeat(count);\n      });\n    }\n  }, {\n    key: \"right\",\n    value: function right(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('RIGHT'), function (text, length) {\n        if (length < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        } else if (length === 0) {\n          return '';\n        }\n\n        return text.slice(-length);\n      });\n    }\n  }, {\n    key: \"left\",\n    value: function left(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LEFT'), function (text, length) {\n        if (length < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        }\n\n        return text.slice(0, length);\n      });\n    }\n  }, {\n    key: \"mid\",\n    value: function mid(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('MID'), function (text, startPosition, numberOfChars) {\n        if (startPosition < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n\n        if (numberOfChars < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        }\n\n        return text.substring(startPosition - 1, startPosition + numberOfChars - 1);\n      });\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('REPLACE'), function (text, startPosition, numberOfChars, newText) {\n        if (startPosition < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n\n        if (numberOfChars < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        }\n\n        return text.substring(0, startPosition - 1) + newText + text.substring(startPosition + numberOfChars - 1);\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(ast, state) {\n      var _this = this;\n\n      return this.runFunction(ast.args, state, this.metadata('SEARCH'), function (pattern, text, startIndex) {\n        if (startIndex < 1 || startIndex > text.length) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LengthBounds);\n        }\n\n        var normalizedText = text.substring(startIndex - 1).toLowerCase();\n        var index;\n\n        if (_this.arithmeticHelper.requiresRegex(pattern)) {\n          index = _this.arithmeticHelper.searchString(pattern, normalizedText);\n        } else {\n          index = normalizedText.indexOf(pattern.toLowerCase());\n        }\n\n        index = index + startIndex;\n        return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\n      });\n    }\n  }, {\n    key: \"substitute\",\n    value: function substitute(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('SUBSTITUTE'), function (text, oldText, newText, occurrence) {\n        var oldTextRegexp = new RegExp(oldText, 'g');\n\n        if (occurrence === undefined) {\n          return text.replace(oldTextRegexp, newText);\n        }\n\n        if (occurrence < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n\n        var match;\n        var i = 0;\n\n        while ((match = oldTextRegexp.exec(text)) !== null) {\n          if (occurrence === ++i) {\n            return text.substring(0, match.index) + newText + text.substring(oldTextRegexp.lastIndex);\n          }\n        }\n\n        return text;\n      });\n    }\n  }, {\n    key: \"find\",\n    value: function find(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('FIND'), function (pattern, text, startIndex) {\n        if (startIndex < 1 || startIndex > text.length) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\n        }\n\n        var shiftedText = text.substring(startIndex - 1);\n        var index = shiftedText.indexOf(pattern) + startIndex;\n        return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\n      });\n    }\n  }, {\n    key: \"t\",\n    value: function t(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T'), function (arg) {\n        if (arg instanceof CellError) {\n          return arg;\n        }\n\n        return typeof arg === 'string' ? arg : '';\n      });\n    }\n  }, {\n    key: \"upper\",\n    value: function upper(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('UPPER'), function (arg) {\n        return arg.toUpperCase();\n      });\n    }\n  }]);\n\n  return TextPlugin;\n}(FunctionPlugin);\nTextPlugin.implementedFunctions = {\n  'CONCATENATE': {\n    method: 'concatenate',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }],\n    repeatLastArgs: 1,\n    expandRanges: true\n  },\n  'EXACT': {\n    method: 'exact',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'SPLIT': {\n    method: 'split',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'LEN': {\n    method: 'len',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'LOWER': {\n    method: 'lower',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'MID': {\n    method: 'mid',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'TRIM': {\n    method: 'trim',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'T': {\n    method: 't',\n    parameters: [{\n      argumentType: ArgumentTypes.SCALAR\n    }]\n  },\n  'PROPER': {\n    method: 'proper',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'CLEAN': {\n    method: 'clean',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'REPT': {\n    method: 'rept',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'RIGHT': {\n    method: 'right',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'LEFT': {\n    method: 'left',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'REPLACE': {\n    method: 'replace',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'SEARCH': {\n    method: 'search',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'SUBSTITUTE': {\n    method: 'substitute',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  },\n  'FIND': {\n    method: 'find',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'UPPER': {\n    method: 'upper',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  }\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/plugin/TextPlugin.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","CellError","ErrorType","ErrorMessage","ArgumentTypes","FunctionPlugin","TextPlugin","_FunctionPlugin","_super","concatenate","ast","state","runFunction","args","metadata","_ref","concat","split","stringToSplit","indexToUse","splittedString","VALUE","IndexBounds","len","arg","lower","toLowerCase","trim","replace","proper","word","charAt","toUpperCase","substring","clean","exact","left","right","rept","text","count","NegativeCount","repeat","NegativeLength","slice","mid","startPosition","numberOfChars","LessThanOne","newText","search","_this","pattern","startIndex","LengthBounds","normalizedText","index","arithmeticHelper","requiresRegex","searchString","indexOf","PatternNotFound","substitute","oldText","occurrence","oldTextRegexp","RegExp","undefined","match","exec","lastIndex","find","shiftedText","t","upper","implementedFunctions","method","parameters","argumentType","STRING","repeatLastArgs","expandRanges","NUMBER","SCALAR","defaultValue","optionalArg"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.repeat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing text-specific functions\n */\n\nexport var TextPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(TextPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(TextPlugin);\n\n  function TextPlugin() {\n    _classCallCheck(this, TextPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextPlugin, [{\n    key: \"concatenate\",\n    value:\n    /**\n     * Corresponds to CONCATENATE(value1, [value2, ...])\n     *\n     * Concatenates provided arguments to one string.\n     *\n     * @param ast\n     * @param state\n     */\n    function concatenate(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CONCATENATE'), function () {\n        var _ref;\n\n        return (_ref = '').concat.apply(_ref, arguments);\n      });\n    }\n    /**\n     * Corresponds to SPLIT(string, index)\n     *\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\n     *\n     * @param ast\n     * @param state\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('SPLIT'), function (stringToSplit, indexToUse) {\n        var splittedString = stringToSplit.split(' ');\n\n        if (indexToUse >= splittedString.length || indexToUse < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\n        }\n\n        return splittedString[indexToUse];\n      });\n    }\n  }, {\n    key: \"len\",\n    value: function len(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LEN'), function (arg) {\n        return arg.length;\n      });\n    }\n  }, {\n    key: \"lower\",\n    value: function lower(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LOWER'), function (arg) {\n        return arg.toLowerCase();\n      });\n    }\n  }, {\n    key: \"trim\",\n    value: function trim(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('TRIM'), function (arg) {\n        return arg.replace(/^ +| +$/g, '').replace(/ +/g, ' ');\n      });\n    }\n  }, {\n    key: \"proper\",\n    value: function proper(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('PROPER'), function (arg) {\n        return arg.replace(/\\w\\S*/g, function (word) {\n          return word.charAt(0).toUpperCase() + word.substring(1).toLowerCase();\n        });\n      });\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('CLEAN'), function (arg) {\n        // eslint-disable-next-line no-control-regex\n        return arg.replace(/[\\u0000-\\u001F]/g, '');\n      });\n    }\n  }, {\n    key: \"exact\",\n    value: function exact(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('EXACT'), function (left, right) {\n        return left === right;\n      });\n    }\n  }, {\n    key: \"rept\",\n    value: function rept(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('REPT'), function (text, count) {\n        if (count < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeCount);\n        }\n\n        return text.repeat(count);\n      });\n    }\n  }, {\n    key: \"right\",\n    value: function right(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('RIGHT'), function (text, length) {\n        if (length < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        } else if (length === 0) {\n          return '';\n        }\n\n        return text.slice(-length);\n      });\n    }\n  }, {\n    key: \"left\",\n    value: function left(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('LEFT'), function (text, length) {\n        if (length < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        }\n\n        return text.slice(0, length);\n      });\n    }\n  }, {\n    key: \"mid\",\n    value: function mid(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('MID'), function (text, startPosition, numberOfChars) {\n        if (startPosition < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n\n        if (numberOfChars < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        }\n\n        return text.substring(startPosition - 1, startPosition + numberOfChars - 1);\n      });\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('REPLACE'), function (text, startPosition, numberOfChars, newText) {\n        if (startPosition < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n\n        if (numberOfChars < 0) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n        }\n\n        return text.substring(0, startPosition - 1) + newText + text.substring(startPosition + numberOfChars - 1);\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(ast, state) {\n      var _this = this;\n\n      return this.runFunction(ast.args, state, this.metadata('SEARCH'), function (pattern, text, startIndex) {\n        if (startIndex < 1 || startIndex > text.length) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LengthBounds);\n        }\n\n        var normalizedText = text.substring(startIndex - 1).toLowerCase();\n        var index;\n\n        if (_this.arithmeticHelper.requiresRegex(pattern)) {\n          index = _this.arithmeticHelper.searchString(pattern, normalizedText);\n        } else {\n          index = normalizedText.indexOf(pattern.toLowerCase());\n        }\n\n        index = index + startIndex;\n        return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\n      });\n    }\n  }, {\n    key: \"substitute\",\n    value: function substitute(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('SUBSTITUTE'), function (text, oldText, newText, occurrence) {\n        var oldTextRegexp = new RegExp(oldText, 'g');\n\n        if (occurrence === undefined) {\n          return text.replace(oldTextRegexp, newText);\n        }\n\n        if (occurrence < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n\n        var match;\n        var i = 0;\n\n        while ((match = oldTextRegexp.exec(text)) !== null) {\n          if (occurrence === ++i) {\n            return text.substring(0, match.index) + newText + text.substring(oldTextRegexp.lastIndex);\n          }\n        }\n\n        return text;\n      });\n    }\n  }, {\n    key: \"find\",\n    value: function find(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('FIND'), function (pattern, text, startIndex) {\n        if (startIndex < 1 || startIndex > text.length) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\n        }\n\n        var shiftedText = text.substring(startIndex - 1);\n        var index = shiftedText.indexOf(pattern) + startIndex;\n        return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\n      });\n    }\n  }, {\n    key: \"t\",\n    value: function t(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('T'), function (arg) {\n        if (arg instanceof CellError) {\n          return arg;\n        }\n\n        return typeof arg === 'string' ? arg : '';\n      });\n    }\n  }, {\n    key: \"upper\",\n    value: function upper(ast, state) {\n      return this.runFunction(ast.args, state, this.metadata('UPPER'), function (arg) {\n        return arg.toUpperCase();\n      });\n    }\n  }]);\n\n  return TextPlugin;\n}(FunctionPlugin);\nTextPlugin.implementedFunctions = {\n  'CONCATENATE': {\n    method: 'concatenate',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }],\n    repeatLastArgs: 1,\n    expandRanges: true\n  },\n  'EXACT': {\n    method: 'exact',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'SPLIT': {\n    method: 'split',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'LEN': {\n    method: 'len',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'LOWER': {\n    method: 'lower',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'MID': {\n    method: 'mid',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'TRIM': {\n    method: 'trim',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'T': {\n    method: 't',\n    parameters: [{\n      argumentType: ArgumentTypes.SCALAR\n    }]\n  },\n  'PROPER': {\n    method: 'proper',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'CLEAN': {\n    method: 'clean',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'REPT': {\n    method: 'rept',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }]\n  },\n  'RIGHT': {\n    method: 'right',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'LEFT': {\n    method: 'left',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'REPLACE': {\n    method: 'replace',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }]\n  },\n  'SEARCH': {\n    method: 'search',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'SUBSTITUTE': {\n    method: 'substitute',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  },\n  'FIND': {\n    method: 'find',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.STRING\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'UPPER': {\n    method: 'upper',\n    parameters: [{\n      argumentType: ArgumentTypes.STRING\n    }]\n  }\n};"]},"metadata":{},"sourceType":"module"}