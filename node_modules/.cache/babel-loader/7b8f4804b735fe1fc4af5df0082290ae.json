{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { matrixSizeForMultiplication, matrixSizeForPoolFunction, matrixSizeForTranspose } from '../../Matrix';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport var MatrixPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(MatrixPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(MatrixPlugin);\n\n  function MatrixPlugin(interpreter) {\n    var _this;\n\n    _classCallCheck(this, MatrixPlugin);\n\n    _this = _super.call(this, interpreter);\n\n    _this.createCpuKernel = function (kernel, outputSize) {\n      return function () {\n        var result = [];\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        for (var y = 0; y < outputSize.height; ++y) {\n          result.push([]);\n\n          for (var x = 0; x < outputSize.width; ++x) {\n            result[y][x] = kernel.apply({\n              thread: {\n                x: x,\n                y: y\n              }\n            }, args);\n          }\n        }\n\n        return result;\n      };\n    };\n\n    _this.createGpuJsKernel = function (kernel, outputSize) {\n      return _this.interpreter.getGpuInstance().createKernel(kernel).setPrecision('unsigned').setOutput([outputSize.width, outputSize.height]);\n    };\n\n    if (_this.config.gpujs === undefined) {\n      _this.createKernel = _this.createCpuKernel;\n    } else {\n      _this.createKernel = _this.createGpuJsKernel;\n    }\n\n    return _this;\n  }\n\n  _createClass(MatrixPlugin, [{\n    key: \"mmult\",\n    value: function mmult(ast, formulaAddress) {\n      var _this2 = this;\n\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MMULT'), function (leftMatrix, rightMatrix) {\n        if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = matrixSizeForMultiplication(leftMatrix.size, rightMatrix.size);\n\n        var result = _this2.createKernel(function (a, b, width) {\n          var sum = 0;\n\n          for (var i = 0; i < width; ++i) {\n            sum += a[this.thread.y][i] * b[i][this.thread.x];\n          }\n\n          return sum;\n        }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n      });\n    }\n  }, {\n    key: \"maxpool\",\n    value: function maxpool(ast, formulaAddress) {\n      var _this3 = this;\n\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MAXPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = matrixSizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this3.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          return currentMax;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n      });\n    }\n  }, {\n    key: \"medianpool\",\n    value: function medianpool(ast, formulaAddress) {\n      var _this4 = this;\n\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MEDIANPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = matrixSizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this4.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          var currentMin = a[leftCornerY][leftCornerX];\n\n          for (var i2 = 0; i2 < windowSize; i2++) {\n            for (var j2 = 0; j2 < windowSize; j2++) {\n              currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\n            }\n          }\n\n          var numberOfElements = windowSize * windowSize;\n          var leftEnd = currentMin;\n          var rightEnd = currentMax;\n          var result = 42;\n\n          for (var iter = 0; iter < 32; iter++) {\n            var medianGuess = (leftEnd + rightEnd) / 2;\n            var medianGuessCount = 0;\n\n            for (var i3 = 0; i3 < windowSize; i3++) {\n              for (var j3 = 0; j3 < windowSize; j3++) {\n                if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\n                  medianGuessCount++;\n                }\n              }\n            }\n\n            if (windowSize % 2 === 0) {\n              if (medianGuessCount === numberOfElements / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > numberOfElements / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            } else {\n              if (medianGuessCount === (numberOfElements - 1) / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > (numberOfElements - 1) / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            }\n          }\n\n          return result;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n      });\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(ast, formulaAddress) {\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('TRANSPOSE'), function (matrix) {\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var input = matrix.rawNumbers();\n        var inputSize = matrix.size;\n        var result = [];\n\n        for (var i = 0; i < inputSize.width; ++i) {\n          result[i] = [];\n\n          for (var j = 0; j < inputSize.height; ++j) {\n            result[i][j] = input[j][i];\n          }\n        }\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, matrixSizeForTranspose(inputSize));\n      });\n    }\n  }]);\n\n  return MatrixPlugin;\n}(FunctionPlugin);\nMatrixPlugin.implementedFunctions = {\n  'MMULT': {\n    method: 'mmult',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.RANGE\n    }]\n  },\n  'TRANSPOSE': {\n    method: 'transpose',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }]\n  },\n  'MAXPOOL': {\n    method: 'maxpool',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  },\n  'MEDIANPOOL': {\n    method: 'medianpool',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  }\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/plugin/MatrixPlugin.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","CellError","ErrorType","ErrorMessage","matrixSizeForMultiplication","matrixSizeForPoolFunction","matrixSizeForTranspose","SimpleRangeValue","ArgumentTypes","FunctionPlugin","MatrixPlugin","_FunctionPlugin","_super","interpreter","_this","createCpuKernel","kernel","outputSize","_len","args","Array","_key","y","height","push","x","width","thread","createGpuJsKernel","getGpuInstance","createKernel","setPrecision","setOutput","config","gpujs","undefined","mmult","ast","formulaAddress","_this2","runMatrixFunction","metadata","leftMatrix","rightMatrix","hasOnlyNumbers","VALUE","NumberRange","size","a","b","sum","rawNumbers","onlyNumbersDataWithoutRange","maxpool","_this3","matrix","windowSize","stride","leftCornerX","leftCornerY","currentMax","j","Math","max","medianpool","_this4","currentMin","i2","j2","min","numberOfElements","leftEnd","rightEnd","iter","medianGuess","medianGuessCount","i3","j3","transpose","input","inputSize","implementedFunctions","method","parameters","argumentType","RANGE","NUMBER","optionalArg"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { matrixSizeForMultiplication, matrixSizeForPoolFunction, matrixSizeForTranspose } from '../../Matrix';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport var MatrixPlugin = /*#__PURE__*/function (_FunctionPlugin) {\n  _inherits(MatrixPlugin, _FunctionPlugin);\n\n  var _super = _createSuper(MatrixPlugin);\n\n  function MatrixPlugin(interpreter) {\n    var _this;\n\n    _classCallCheck(this, MatrixPlugin);\n\n    _this = _super.call(this, interpreter);\n\n    _this.createCpuKernel = function (kernel, outputSize) {\n      return function () {\n        var result = [];\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        for (var y = 0; y < outputSize.height; ++y) {\n          result.push([]);\n\n          for (var x = 0; x < outputSize.width; ++x) {\n            result[y][x] = kernel.apply({\n              thread: {\n                x: x,\n                y: y\n              }\n            }, args);\n          }\n        }\n\n        return result;\n      };\n    };\n\n    _this.createGpuJsKernel = function (kernel, outputSize) {\n      return _this.interpreter.getGpuInstance().createKernel(kernel).setPrecision('unsigned').setOutput([outputSize.width, outputSize.height]);\n    };\n\n    if (_this.config.gpujs === undefined) {\n      _this.createKernel = _this.createCpuKernel;\n    } else {\n      _this.createKernel = _this.createGpuJsKernel;\n    }\n\n    return _this;\n  }\n\n  _createClass(MatrixPlugin, [{\n    key: \"mmult\",\n    value: function mmult(ast, formulaAddress) {\n      var _this2 = this;\n\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MMULT'), function (leftMatrix, rightMatrix) {\n        if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = matrixSizeForMultiplication(leftMatrix.size, rightMatrix.size);\n\n        var result = _this2.createKernel(function (a, b, width) {\n          var sum = 0;\n\n          for (var i = 0; i < width; ++i) {\n            sum += a[this.thread.y][i] * b[i][this.thread.x];\n          }\n\n          return sum;\n        }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n      });\n    }\n  }, {\n    key: \"maxpool\",\n    value: function maxpool(ast, formulaAddress) {\n      var _this3 = this;\n\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MAXPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = matrixSizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this3.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          return currentMax;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n      });\n    }\n  }, {\n    key: \"medianpool\",\n    value: function medianpool(ast, formulaAddress) {\n      var _this4 = this;\n\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MEDIANPOOL'), function (matrix, windowSize) {\n        var stride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : windowSize;\n\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var outputSize = matrixSizeForPoolFunction(matrix.size, windowSize, stride);\n\n        var result = _this4.createKernel(function (a, windowSize, stride) {\n          var leftCornerX = this.thread.x * stride;\n          var leftCornerY = this.thread.y * stride;\n          var currentMax = a[leftCornerY][leftCornerX];\n\n          for (var i = 0; i < windowSize; i++) {\n            for (var j = 0; j < windowSize; j++) {\n              currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n            }\n          }\n\n          var currentMin = a[leftCornerY][leftCornerX];\n\n          for (var i2 = 0; i2 < windowSize; i2++) {\n            for (var j2 = 0; j2 < windowSize; j2++) {\n              currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\n            }\n          }\n\n          var numberOfElements = windowSize * windowSize;\n          var leftEnd = currentMin;\n          var rightEnd = currentMax;\n          var result = 42;\n\n          for (var iter = 0; iter < 32; iter++) {\n            var medianGuess = (leftEnd + rightEnd) / 2;\n            var medianGuessCount = 0;\n\n            for (var i3 = 0; i3 < windowSize; i3++) {\n              for (var j3 = 0; j3 < windowSize; j3++) {\n                if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\n                  medianGuessCount++;\n                }\n              }\n            }\n\n            if (windowSize % 2 === 0) {\n              if (medianGuessCount === numberOfElements / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > numberOfElements / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            } else {\n              if (medianGuessCount === (numberOfElements - 1) / 2) {\n                result = medianGuess;\n                break;\n              } else if (medianGuessCount > (numberOfElements - 1) / 2) {\n                leftEnd = medianGuess;\n              } else {\n                rightEnd = medianGuess;\n              }\n            }\n          }\n\n          return result;\n        }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n      });\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(ast, formulaAddress) {\n      return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('TRANSPOSE'), function (matrix) {\n        if (!matrix.hasOnlyNumbers()) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n        }\n\n        var input = matrix.rawNumbers();\n        var inputSize = matrix.size;\n        var result = [];\n\n        for (var i = 0; i < inputSize.width; ++i) {\n          result[i] = [];\n\n          for (var j = 0; j < inputSize.height; ++j) {\n            result[i][j] = input[j][i];\n          }\n        }\n\n        return SimpleRangeValue.onlyNumbersDataWithoutRange(result, matrixSizeForTranspose(inputSize));\n      });\n    }\n  }]);\n\n  return MatrixPlugin;\n}(FunctionPlugin);\nMatrixPlugin.implementedFunctions = {\n  'MMULT': {\n    method: 'mmult',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.RANGE\n    }]\n  },\n  'TRANSPOSE': {\n    method: 'transpose',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }]\n  },\n  'MAXPOOL': {\n    method: 'maxpool',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  },\n  'MEDIANPOOL': {\n    method: 'medianpool',\n    parameters: [{\n      argumentType: ArgumentTypes.RANGE\n    }, {\n      argumentType: ArgumentTypes.NUMBER\n    }, {\n      argumentType: ArgumentTypes.NUMBER,\n      optionalArg: true\n    }]\n  }\n};"]},"metadata":{},"sourceType":"module"}