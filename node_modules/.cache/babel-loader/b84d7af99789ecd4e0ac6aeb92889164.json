{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { InterpreterState } from './interpreter/InterpreterState';\nimport { ArgumentTypes } from './interpreter/plugin/FunctionPlugin';\nimport { AstNodeType } from './parser';\nexport var ArraySize = /*#__PURE__*/function () {\n  function ArraySize(width, height) {\n    var isRef = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ArraySize);\n\n    this.width = width;\n    this.height = height;\n    this.isRef = isRef;\n\n    if (width <= 0 || height <= 0) {\n      throw Error('Incorrect array size');\n    }\n  }\n\n  _createClass(ArraySize, [{\n    key: \"isScalar\",\n    value: function isScalar() {\n      return this.width <= 1 && this.height <= 1 || this.isRef;\n    }\n  }], [{\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      return new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      return new ArraySize(1, 1, true);\n    }\n  }, {\n    key: \"scalar\",\n    value: function scalar() {\n      return new ArraySize(1, 1, false);\n    }\n  }]);\n\n  return ArraySize;\n}();\n\nfunction arraySizeForBinaryOp(leftArraySize, rightArraySize) {\n  return new ArraySize(Math.max(leftArraySize.width, rightArraySize.width), Math.max(leftArraySize.height, rightArraySize.height));\n}\n\nfunction arraySizeForUnaryOp(arraySize) {\n  return new ArraySize(arraySize.width, arraySize.height);\n}\n\nexport var ArraySizePredictor = /*#__PURE__*/function () {\n  function ArraySizePredictor(config, functionRegistry) {\n    _classCallCheck(this, ArraySizePredictor);\n\n    this.config = config;\n    this.functionRegistry = functionRegistry;\n  }\n\n  _createClass(ArraySizePredictor, [{\n    key: \"checkArraySize\",\n    value: function checkArraySize(ast, formulaAddress) {\n      return this.checkArraySizeForAst(ast, {\n        formulaAddress: formulaAddress,\n        arraysFlag: this.config.useArrayArithmetic\n      });\n    }\n  }, {\n    key: \"checkArraySizeForFunction\",\n    value: function checkArraySizeForFunction(ast, state) {\n      var _this = this;\n\n      var metadata = this.functionRegistry.getMetadata(ast.procedureName);\n      var pluginArraySizeFunction = this.functionRegistry.getArraySizeFunction(ast.procedureName);\n\n      if (pluginArraySizeFunction !== undefined) {\n        return pluginArraySizeFunction(ast, state);\n      }\n\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this.checkArraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n\n      if (metadata === undefined || metadata.expandRanges || !state.arraysFlag || metadata.vectorizationForbidden || metadata.parameters === undefined) {\n        return new ArraySize(1, 1);\n      }\n\n      var argumentDefinitions = _toConsumableArray(metadata.parameters);\n\n      if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < subChecks.length) {\n        return ArraySize.error();\n      }\n\n      if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < subChecks.length && (subChecks.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\n        return ArraySize.error();\n      }\n\n      while (argumentDefinitions.length < subChecks.length) {\n        argumentDefinitions.push.apply(argumentDefinitions, _toConsumableArray(argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs)));\n      }\n\n      var maxWidth = 1;\n      var maxHeight = 1;\n\n      for (var i = 0; i < subChecks.length; i++) {\n        if (argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\n          maxHeight = Math.max(maxHeight, subChecks[i].height);\n          maxWidth = Math.max(maxWidth, subChecks[i].width);\n        }\n      }\n\n      return new ArraySize(maxWidth, maxHeight);\n    }\n  }, {\n    key: \"checkArraySizeForAst\",\n    value: function checkArraySizeForAst(ast, state) {\n      var _this2 = this;\n\n      switch (ast.type) {\n        case AstNodeType.FUNCTION_CALL:\n          {\n            return this.checkArraySizeForFunction(ast, state);\n          }\n\n        case AstNodeType.CELL_RANGE:\n          {\n            var range = AbsoluteCellRange.fromCellRangeOrUndef(ast, state.formulaAddress);\n\n            if (range === undefined) {\n              return ArraySize.error();\n            } else {\n              return new ArraySize(range.width(), range.height(), true);\n            }\n          }\n\n        case AstNodeType.ARRAY:\n          {\n            var heights = [];\n            var widths = [];\n\n            var _iterator = _createForOfIteratorHelper(ast.args),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var row = _step.value;\n                var sizes = row.map(function (ast) {\n                  return _this2.checkArraySizeForAst(ast, state);\n                });\n                var h = Math.min.apply(Math, _toConsumableArray(sizes.map(function (size) {\n                  return size.height;\n                })));\n                var w = sizes.reduce(function (total, size) {\n                  return total + size.width;\n                }, 0);\n                heights.push(h);\n                widths.push(w);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            var height = heights.reduce(function (total, h) {\n              return total + h;\n            }, 0);\n            var width = Math.min.apply(Math, widths);\n            return new ArraySize(width, height);\n          }\n\n        case AstNodeType.STRING:\n        case AstNodeType.NUMBER:\n          return ArraySize.scalar();\n\n        case AstNodeType.CELL_REFERENCE:\n          return new ArraySize(1, 1, true);\n\n        case AstNodeType.DIV_OP:\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.POWER_OP:\n        case AstNodeType.TIMES_OP:\n          {\n            var left = this.checkArraySizeForAst(ast.left, state);\n            var right = this.checkArraySizeForAst(ast.right, state);\n\n            if (!state.arraysFlag && (left.height > 1 || left.width > 1 || right.height > 1 || right.width > 1)) {\n              return ArraySize.error();\n            }\n\n            return arraySizeForBinaryOp(left, right);\n          }\n\n        case AstNodeType.MINUS_UNARY_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.PERCENT_OP:\n          {\n            var val = this.checkArraySizeForAst(ast.value, state);\n\n            if (!state.arraysFlag && (val.height > 1 || val.width > 1)) {\n              return ArraySize.error();\n            }\n\n            return arraySizeForUnaryOp(val);\n          }\n\n        case AstNodeType.EMPTY:\n          return ArraySize.error();\n\n        default:\n          return ArraySize.error();\n      }\n    }\n  }]);\n\n  return ArraySizePredictor;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/ArraySize.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","InterpreterState","ArgumentTypes","AstNodeType","ArraySize","width","height","isRef","arguments","undefined","Error","isScalar","fromArray","array","error","scalar","arraySizeForBinaryOp","leftArraySize","rightArraySize","Math","max","arraySizeForUnaryOp","arraySize","ArraySizePredictor","config","functionRegistry","checkArraySize","ast","formulaAddress","checkArraySizeForAst","arraysFlag","useArrayArithmetic","checkArraySizeForFunction","state","_this","metadata","getMetadata","procedureName","pluginArraySizeFunction","getArraySizeFunction","subChecks","args","map","arg","_a","arrayFunction","expandRanges","vectorizationForbidden","parameters","argumentDefinitions","repeatLastArgs","push","apply","maxWidth","maxHeight","argumentType","RANGE","ANY","_this2","type","FUNCTION_CALL","CELL_RANGE","range","fromCellRangeOrUndef","ARRAY","heights","widths","_iterator","_step","row","sizes","h","min","size","w","reduce","total","STRING","NUMBER","CELL_REFERENCE","DIV_OP","CONCATENATE_OP","EQUALS_OP","GREATER_THAN_OP","GREATER_THAN_OR_EQUAL_OP","LESS_THAN_OP","LESS_THAN_OR_EQUAL_OP","MINUS_OP","NOT_EQUAL_OP","PLUS_OP","POWER_OP","TIMES_OP","left","right","MINUS_UNARY_OP","PLUS_UNARY_OP","PERCENT_OP","val","EMPTY"],"mappings":"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","sourcesContent":["function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { InterpreterState } from './interpreter/InterpreterState';\nimport { ArgumentTypes } from './interpreter/plugin/FunctionPlugin';\nimport { AstNodeType } from './parser';\nexport var ArraySize = /*#__PURE__*/function () {\n  function ArraySize(width, height) {\n    var isRef = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ArraySize);\n\n    this.width = width;\n    this.height = height;\n    this.isRef = isRef;\n\n    if (width <= 0 || height <= 0) {\n      throw Error('Incorrect array size');\n    }\n  }\n\n  _createClass(ArraySize, [{\n    key: \"isScalar\",\n    value: function isScalar() {\n      return this.width <= 1 && this.height <= 1 || this.isRef;\n    }\n  }], [{\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      return new ArraySize(array.length > 0 ? array[0].length : 0, array.length);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      return new ArraySize(1, 1, true);\n    }\n  }, {\n    key: \"scalar\",\n    value: function scalar() {\n      return new ArraySize(1, 1, false);\n    }\n  }]);\n\n  return ArraySize;\n}();\n\nfunction arraySizeForBinaryOp(leftArraySize, rightArraySize) {\n  return new ArraySize(Math.max(leftArraySize.width, rightArraySize.width), Math.max(leftArraySize.height, rightArraySize.height));\n}\n\nfunction arraySizeForUnaryOp(arraySize) {\n  return new ArraySize(arraySize.width, arraySize.height);\n}\n\nexport var ArraySizePredictor = /*#__PURE__*/function () {\n  function ArraySizePredictor(config, functionRegistry) {\n    _classCallCheck(this, ArraySizePredictor);\n\n    this.config = config;\n    this.functionRegistry = functionRegistry;\n  }\n\n  _createClass(ArraySizePredictor, [{\n    key: \"checkArraySize\",\n    value: function checkArraySize(ast, formulaAddress) {\n      return this.checkArraySizeForAst(ast, {\n        formulaAddress: formulaAddress,\n        arraysFlag: this.config.useArrayArithmetic\n      });\n    }\n  }, {\n    key: \"checkArraySizeForFunction\",\n    value: function checkArraySizeForFunction(ast, state) {\n      var _this = this;\n\n      var metadata = this.functionRegistry.getMetadata(ast.procedureName);\n      var pluginArraySizeFunction = this.functionRegistry.getArraySizeFunction(ast.procedureName);\n\n      if (pluginArraySizeFunction !== undefined) {\n        return pluginArraySizeFunction(ast, state);\n      }\n\n      var subChecks = ast.args.map(function (arg) {\n        var _a;\n\n        return _this.checkArraySizeForAst(arg, new InterpreterState(state.formulaAddress, state.arraysFlag || ((_a = metadata === null || metadata === void 0 ? void 0 : metadata.arrayFunction) !== null && _a !== void 0 ? _a : false)));\n      });\n\n      if (metadata === undefined || metadata.expandRanges || !state.arraysFlag || metadata.vectorizationForbidden || metadata.parameters === undefined) {\n        return new ArraySize(1, 1);\n      }\n\n      var argumentDefinitions = _toConsumableArray(metadata.parameters);\n\n      if (metadata.repeatLastArgs === undefined && argumentDefinitions.length < subChecks.length) {\n        return ArraySize.error();\n      }\n\n      if (metadata.repeatLastArgs !== undefined && argumentDefinitions.length < subChecks.length && (subChecks.length - argumentDefinitions.length) % metadata.repeatLastArgs !== 0) {\n        return ArraySize.error();\n      }\n\n      while (argumentDefinitions.length < subChecks.length) {\n        argumentDefinitions.push.apply(argumentDefinitions, _toConsumableArray(argumentDefinitions.slice(argumentDefinitions.length - metadata.repeatLastArgs)));\n      }\n\n      var maxWidth = 1;\n      var maxHeight = 1;\n\n      for (var i = 0; i < subChecks.length; i++) {\n        if (argumentDefinitions[i].argumentType !== ArgumentTypes.RANGE && argumentDefinitions[i].argumentType !== ArgumentTypes.ANY) {\n          maxHeight = Math.max(maxHeight, subChecks[i].height);\n          maxWidth = Math.max(maxWidth, subChecks[i].width);\n        }\n      }\n\n      return new ArraySize(maxWidth, maxHeight);\n    }\n  }, {\n    key: \"checkArraySizeForAst\",\n    value: function checkArraySizeForAst(ast, state) {\n      var _this2 = this;\n\n      switch (ast.type) {\n        case AstNodeType.FUNCTION_CALL:\n          {\n            return this.checkArraySizeForFunction(ast, state);\n          }\n\n        case AstNodeType.CELL_RANGE:\n          {\n            var range = AbsoluteCellRange.fromCellRangeOrUndef(ast, state.formulaAddress);\n\n            if (range === undefined) {\n              return ArraySize.error();\n            } else {\n              return new ArraySize(range.width(), range.height(), true);\n            }\n          }\n\n        case AstNodeType.ARRAY:\n          {\n            var heights = [];\n            var widths = [];\n\n            var _iterator = _createForOfIteratorHelper(ast.args),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var row = _step.value;\n                var sizes = row.map(function (ast) {\n                  return _this2.checkArraySizeForAst(ast, state);\n                });\n                var h = Math.min.apply(Math, _toConsumableArray(sizes.map(function (size) {\n                  return size.height;\n                })));\n                var w = sizes.reduce(function (total, size) {\n                  return total + size.width;\n                }, 0);\n                heights.push(h);\n                widths.push(w);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            var height = heights.reduce(function (total, h) {\n              return total + h;\n            }, 0);\n            var width = Math.min.apply(Math, widths);\n            return new ArraySize(width, height);\n          }\n\n        case AstNodeType.STRING:\n        case AstNodeType.NUMBER:\n          return ArraySize.scalar();\n\n        case AstNodeType.CELL_REFERENCE:\n          return new ArraySize(1, 1, true);\n\n        case AstNodeType.DIV_OP:\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.POWER_OP:\n        case AstNodeType.TIMES_OP:\n          {\n            var left = this.checkArraySizeForAst(ast.left, state);\n            var right = this.checkArraySizeForAst(ast.right, state);\n\n            if (!state.arraysFlag && (left.height > 1 || left.width > 1 || right.height > 1 || right.width > 1)) {\n              return ArraySize.error();\n            }\n\n            return arraySizeForBinaryOp(left, right);\n          }\n\n        case AstNodeType.MINUS_UNARY_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.PERCENT_OP:\n          {\n            var val = this.checkArraySizeForAst(ast.value, state);\n\n            if (!state.arraysFlag && (val.height > 1 || val.width > 1)) {\n              return ArraySize.error();\n            }\n\n            return arraySizeForUnaryOp(val);\n          }\n\n        case AstNodeType.EMPTY:\n          return ArraySize.error();\n\n        default:\n          return ArraySize.error();\n      }\n    }\n  }]);\n\n  return ArraySizePredictor;\n}();"]},"metadata":{},"sourceType":"module"}