{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { Transformer } from './Transformer';\nimport { CellAddress } from '../parser';\nimport { simpleCellAddress } from '../Cell';\nimport { RowAddress } from '../parser/RowAddress';\nexport var MoveCellsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(MoveCellsTransformer, _Transformer);\n\n  var _super = _createSuper(MoveCellsTransformer);\n\n  function MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet) {\n    var _this;\n\n    _classCallCheck(this, MoveCellsTransformer);\n\n    _this = _super.call(this);\n    _this.sourceRange = sourceRange;\n    _this.toRight = toRight;\n    _this.toBottom = toBottom;\n    _this.toSheet = toSheet;\n    _this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\n    return _this;\n  }\n\n  _createClass(MoveCellsTransformer, [{\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return true;\n    }\n  }, {\n    key: \"sheet\",\n    get: function get() {\n      return this.sourceRange.sheet;\n    }\n  }, {\n    key: \"transformSingleAst\",\n    value: function transformSingleAst(ast, address) {\n      if (this.sourceRange.addressInRange(address)) {\n        var newAst = this.transformAst(ast, address);\n        return [newAst, this.fixNodeAddress(address)];\n      } else {\n        return this.dependentFormulaTransformer.transformSingleAst(ast, address);\n      }\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      return this.transformAddress(dependencyAddress, formulaAddress);\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformAddress\",\n    value: function transformAddress(dependencyAddress, formulaAddress) {\n      var sourceRange = this.sourceRange;\n\n      if (dependencyAddress instanceof CellAddress) {\n        var absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\n\n        if (sourceRange.addressInRange(absoluteDependencyAddress)) {\n          // If dependency is internal, move only absolute dimensions\n          return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\n        }\n      }\n\n      return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var sourceRange = this.sourceRange;\n\n      if (start instanceof CellAddress && end instanceof CellAddress) {\n        var absoluteStart = start.toSimpleCellAddress(formulaAddress);\n        var absoluteEnd = end.toSimpleCellAddress(formulaAddress);\n\n        if (sourceRange.addressInRange(absoluteStart) && sourceRange.addressInRange(absoluteEnd)) {\n          return [start.shiftAbsoluteDimensions(this.toRight, this.toBottom), end.shiftAbsoluteDimensions(this.toRight, this.toBottom)];\n        }\n      }\n\n      return [start.shiftRelativeDimensions(-this.toRight, -this.toBottom), end.shiftRelativeDimensions(-this.toRight, -this.toBottom)];\n    }\n  }]);\n\n  return MoveCellsTransformer;\n}(Transformer);\n\nvar DependentFormulaTransformer = /*#__PURE__*/function (_Transformer2) {\n  _inherits(DependentFormulaTransformer, _Transformer2);\n\n  var _super2 = _createSuper(DependentFormulaTransformer);\n\n  function DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet) {\n    var _this2;\n\n    _classCallCheck(this, DependentFormulaTransformer);\n\n    _this2 = _super2.call(this);\n    _this2.sourceRange = sourceRange;\n    _this2.toRight = toRight;\n    _this2.toBottom = toBottom;\n    _this2.toSheet = toSheet;\n    return _this2;\n  }\n\n  _createClass(DependentFormulaTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.sourceRange.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return true;\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      return address;\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      if (this.shouldMove(dependencyAddress, formulaAddress)) {\n        return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"shouldMove\",\n    value: function shouldMove(dependencyAddress, formulaAddress) {\n      if (dependencyAddress instanceof CellAddress) {\n        return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\n      } else if (dependencyAddress instanceof RowAddress) {\n        return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\n      } else {\n        return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\n      }\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var newStart = this.transformCellAddress(start, formulaAddress);\n      var newEnd = this.transformCellAddress(end, formulaAddress);\n\n      if (newStart && newEnd) {\n        return [newStart, newEnd];\n      }\n\n      return false;\n    }\n  }]);\n\n  return DependentFormulaTransformer;\n}(Transformer);","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/dependencyTransformers/MoveCellsTransformer.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Transformer","CellAddress","simpleCellAddress","RowAddress","MoveCellsTransformer","_Transformer","_super","sourceRange","toRight","toBottom","toSheet","_this","dependentFormulaTransformer","DependentFormulaTransformer","isIrreversible","get","sheet","transformSingleAst","ast","address","addressInRange","newAst","transformAst","fixNodeAddress","col","row","transformCellAddress","dependencyAddress","formulaAddress","transformAddress","transformCellRange","start","end","transformRange","transformColumnRange","transformRowRange","absoluteDependencyAddress","toSimpleCellAddress","shiftAbsoluteDimensions","shiftRelativeDimensions","absoluteStart","absoluteEnd","_Transformer2","_super2","_this2","shouldMove","moved","rowInRange","toSimpleRowAddress","isFinite","columnInRange","toSimpleColumnAddress","newStart","newEnd"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { Transformer } from './Transformer';\nimport { CellAddress } from '../parser';\nimport { simpleCellAddress } from '../Cell';\nimport { RowAddress } from '../parser/RowAddress';\nexport var MoveCellsTransformer = /*#__PURE__*/function (_Transformer) {\n  _inherits(MoveCellsTransformer, _Transformer);\n\n  var _super = _createSuper(MoveCellsTransformer);\n\n  function MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet) {\n    var _this;\n\n    _classCallCheck(this, MoveCellsTransformer);\n\n    _this = _super.call(this);\n    _this.sourceRange = sourceRange;\n    _this.toRight = toRight;\n    _this.toBottom = toBottom;\n    _this.toSheet = toSheet;\n    _this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\n    return _this;\n  }\n\n  _createClass(MoveCellsTransformer, [{\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return true;\n    }\n  }, {\n    key: \"sheet\",\n    get: function get() {\n      return this.sourceRange.sheet;\n    }\n  }, {\n    key: \"transformSingleAst\",\n    value: function transformSingleAst(ast, address) {\n      if (this.sourceRange.addressInRange(address)) {\n        var newAst = this.transformAst(ast, address);\n        return [newAst, this.fixNodeAddress(address)];\n      } else {\n        return this.dependentFormulaTransformer.transformSingleAst(ast, address);\n      }\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      return this.transformAddress(dependencyAddress, formulaAddress);\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformAddress\",\n    value: function transformAddress(dependencyAddress, formulaAddress) {\n      var sourceRange = this.sourceRange;\n\n      if (dependencyAddress instanceof CellAddress) {\n        var absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\n\n        if (sourceRange.addressInRange(absoluteDependencyAddress)) {\n          // If dependency is internal, move only absolute dimensions\n          return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\n        }\n      }\n\n      return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var sourceRange = this.sourceRange;\n\n      if (start instanceof CellAddress && end instanceof CellAddress) {\n        var absoluteStart = start.toSimpleCellAddress(formulaAddress);\n        var absoluteEnd = end.toSimpleCellAddress(formulaAddress);\n\n        if (sourceRange.addressInRange(absoluteStart) && sourceRange.addressInRange(absoluteEnd)) {\n          return [start.shiftAbsoluteDimensions(this.toRight, this.toBottom), end.shiftAbsoluteDimensions(this.toRight, this.toBottom)];\n        }\n      }\n\n      return [start.shiftRelativeDimensions(-this.toRight, -this.toBottom), end.shiftRelativeDimensions(-this.toRight, -this.toBottom)];\n    }\n  }]);\n\n  return MoveCellsTransformer;\n}(Transformer);\n\nvar DependentFormulaTransformer = /*#__PURE__*/function (_Transformer2) {\n  _inherits(DependentFormulaTransformer, _Transformer2);\n\n  var _super2 = _createSuper(DependentFormulaTransformer);\n\n  function DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet) {\n    var _this2;\n\n    _classCallCheck(this, DependentFormulaTransformer);\n\n    _this2 = _super2.call(this);\n    _this2.sourceRange = sourceRange;\n    _this2.toRight = toRight;\n    _this2.toBottom = toBottom;\n    _this2.toSheet = toSheet;\n    return _this2;\n  }\n\n  _createClass(DependentFormulaTransformer, [{\n    key: \"sheet\",\n    get: function get() {\n      return this.sourceRange.sheet;\n    }\n  }, {\n    key: \"isIrreversible\",\n    value: function isIrreversible() {\n      return true;\n    }\n  }, {\n    key: \"fixNodeAddress\",\n    value: function fixNodeAddress(address) {\n      return address;\n    }\n  }, {\n    key: \"transformCellAddress\",\n    value: function transformCellAddress(dependencyAddress, formulaAddress) {\n      if (this.shouldMove(dependencyAddress, formulaAddress)) {\n        return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"shouldMove\",\n    value: function shouldMove(dependencyAddress, formulaAddress) {\n      if (dependencyAddress instanceof CellAddress) {\n        return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\n      } else if (dependencyAddress instanceof RowAddress) {\n        return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\n      } else {\n        return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\n      }\n    }\n  }, {\n    key: \"transformCellRange\",\n    value: function transformCellRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformColumnRange\",\n    value: function transformColumnRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRowRange\",\n    value: function transformRowRange(start, end, formulaAddress) {\n      return this.transformRange(start, end, formulaAddress);\n    }\n  }, {\n    key: \"transformRange\",\n    value: function transformRange(start, end, formulaAddress) {\n      var newStart = this.transformCellAddress(start, formulaAddress);\n      var newEnd = this.transformCellAddress(end, formulaAddress);\n\n      if (newStart && newEnd) {\n        return [newStart, newEnd];\n      }\n\n      return false;\n    }\n  }]);\n\n  return DependentFormulaTransformer;\n}(Transformer);"]},"metadata":{},"sourceType":"module"}