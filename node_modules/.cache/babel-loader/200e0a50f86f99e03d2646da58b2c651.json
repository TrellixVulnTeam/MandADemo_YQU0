{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { equalSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\nexport var BaseUndoEntry = function BaseUndoEntry() {\n  _classCallCheck(this, BaseUndoEntry);\n};\nexport var RemoveRowsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry) {\n  _inherits(RemoveRowsUndoEntry, _BaseUndoEntry);\n\n  var _super = _createSuper(RemoveRowsUndoEntry);\n\n  function RemoveRowsUndoEntry(command, rowsRemovals) {\n    var _this;\n\n    _classCallCheck(this, RemoveRowsUndoEntry);\n\n    _this = _super.call(this);\n    _this.command = command;\n    _this.rowsRemovals = rowsRemovals;\n    return _this;\n  }\n\n  _createClass(RemoveRowsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveRows(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveRows(this);\n    }\n  }]);\n\n  return RemoveRowsUndoEntry;\n}(BaseUndoEntry);\nexport var MoveCellsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry2) {\n  _inherits(MoveCellsUndoEntry, _BaseUndoEntry2);\n\n  var _super2 = _createSuper(MoveCellsUndoEntry);\n\n  function MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\n    var _this2;\n\n    _classCallCheck(this, MoveCellsUndoEntry);\n\n    _this2 = _super2.call(this);\n    _this2.sourceLeftCorner = sourceLeftCorner;\n    _this2.width = width;\n    _this2.height = height;\n    _this2.destinationLeftCorner = destinationLeftCorner;\n    _this2.overwrittenCellsData = overwrittenCellsData;\n    _this2.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n    _this2.version = version;\n    return _this2;\n  }\n\n  _createClass(MoveCellsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoMoveCells(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoMoveCells(this);\n    }\n  }]);\n\n  return MoveCellsUndoEntry;\n}(BaseUndoEntry);\nexport var AddRowsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry3) {\n  _inherits(AddRowsUndoEntry, _BaseUndoEntry3);\n\n  var _super3 = _createSuper(AddRowsUndoEntry);\n\n  function AddRowsUndoEntry(command) {\n    var _this3;\n\n    _classCallCheck(this, AddRowsUndoEntry);\n\n    _this3 = _super3.call(this);\n    _this3.command = command;\n    return _this3;\n  }\n\n  _createClass(AddRowsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddRows(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddRows(this);\n    }\n  }]);\n\n  return AddRowsUndoEntry;\n}(BaseUndoEntry);\nexport var SetRowOrderUndoEntry = /*#__PURE__*/function (_BaseUndoEntry4) {\n  _inherits(SetRowOrderUndoEntry, _BaseUndoEntry4);\n\n  var _super4 = _createSuper(SetRowOrderUndoEntry);\n\n  function SetRowOrderUndoEntry(sheetId, rowMapping, oldContent) {\n    var _this4;\n\n    _classCallCheck(this, SetRowOrderUndoEntry);\n\n    _this4 = _super4.call(this);\n    _this4.sheetId = sheetId;\n    _this4.rowMapping = rowMapping;\n    _this4.oldContent = oldContent;\n    return _this4;\n  }\n\n  _createClass(SetRowOrderUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetRowOrder(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetRowOrder(this);\n    }\n  }]);\n\n  return SetRowOrderUndoEntry;\n}(BaseUndoEntry);\nexport var SetColumnOrderUndoEntry = /*#__PURE__*/function (_BaseUndoEntry5) {\n  _inherits(SetColumnOrderUndoEntry, _BaseUndoEntry5);\n\n  var _super5 = _createSuper(SetColumnOrderUndoEntry);\n\n  function SetColumnOrderUndoEntry(sheetId, columnMapping, oldContent) {\n    var _this5;\n\n    _classCallCheck(this, SetColumnOrderUndoEntry);\n\n    _this5 = _super5.call(this);\n    _this5.sheetId = sheetId;\n    _this5.columnMapping = columnMapping;\n    _this5.oldContent = oldContent;\n    return _this5;\n  }\n\n  _createClass(SetColumnOrderUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetColumnOrder(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetColumnOrder(this);\n    }\n  }]);\n\n  return SetColumnOrderUndoEntry;\n}(BaseUndoEntry);\nexport var SetSheetContentUndoEntry = /*#__PURE__*/function (_BaseUndoEntry6) {\n  _inherits(SetSheetContentUndoEntry, _BaseUndoEntry6);\n\n  var _super6 = _createSuper(SetSheetContentUndoEntry);\n\n  function SetSheetContentUndoEntry(sheetId, oldSheetContent, newSheetContent) {\n    var _this6;\n\n    _classCallCheck(this, SetSheetContentUndoEntry);\n\n    _this6 = _super6.call(this);\n    _this6.sheetId = sheetId;\n    _this6.oldSheetContent = oldSheetContent;\n    _this6.newSheetContent = newSheetContent;\n    return _this6;\n  }\n\n  _createClass(SetSheetContentUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetSheetContent(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetSheetContent(this);\n    }\n  }]);\n\n  return SetSheetContentUndoEntry;\n}(BaseUndoEntry);\nexport var MoveRowsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry7) {\n  _inherits(MoveRowsUndoEntry, _BaseUndoEntry7);\n\n  var _super7 = _createSuper(MoveRowsUndoEntry);\n\n  function MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow, version) {\n    var _this7;\n\n    _classCallCheck(this, MoveRowsUndoEntry);\n\n    _this7 = _super7.call(this);\n    _this7.sheet = sheet;\n    _this7.startRow = startRow;\n    _this7.numberOfRows = numberOfRows;\n    _this7.targetRow = targetRow;\n    _this7.version = version;\n    _this7.undoStart = _this7.startRow < _this7.targetRow ? _this7.targetRow - _this7.numberOfRows : _this7.targetRow;\n    _this7.undoEnd = _this7.startRow > _this7.targetRow ? _this7.startRow + _this7.numberOfRows : _this7.startRow;\n    return _this7;\n  }\n\n  _createClass(MoveRowsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoMoveRows(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoMoveRows(this);\n    }\n  }]);\n\n  return MoveRowsUndoEntry;\n}(BaseUndoEntry);\nexport var MoveColumnsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry8) {\n  _inherits(MoveColumnsUndoEntry, _BaseUndoEntry8);\n\n  var _super8 = _createSuper(MoveColumnsUndoEntry);\n\n  function MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn, version) {\n    var _this8;\n\n    _classCallCheck(this, MoveColumnsUndoEntry);\n\n    _this8 = _super8.call(this);\n    _this8.sheet = sheet;\n    _this8.startColumn = startColumn;\n    _this8.numberOfColumns = numberOfColumns;\n    _this8.targetColumn = targetColumn;\n    _this8.version = version;\n    _this8.undoStart = _this8.startColumn < _this8.targetColumn ? _this8.targetColumn - _this8.numberOfColumns : _this8.targetColumn;\n    _this8.undoEnd = _this8.startColumn > _this8.targetColumn ? _this8.startColumn + _this8.numberOfColumns : _this8.startColumn;\n    return _this8;\n  }\n\n  _createClass(MoveColumnsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoMoveColumns(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoMoveColumns(this);\n    }\n  }]);\n\n  return MoveColumnsUndoEntry;\n}(BaseUndoEntry);\nexport var AddColumnsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry9) {\n  _inherits(AddColumnsUndoEntry, _BaseUndoEntry9);\n\n  var _super9 = _createSuper(AddColumnsUndoEntry);\n\n  function AddColumnsUndoEntry(command) {\n    var _this9;\n\n    _classCallCheck(this, AddColumnsUndoEntry);\n\n    _this9 = _super9.call(this);\n    _this9.command = command;\n    return _this9;\n  }\n\n  _createClass(AddColumnsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddColumns(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddColumns(this);\n    }\n  }]);\n\n  return AddColumnsUndoEntry;\n}(BaseUndoEntry);\nexport var RemoveColumnsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry10) {\n  _inherits(RemoveColumnsUndoEntry, _BaseUndoEntry10);\n\n  var _super10 = _createSuper(RemoveColumnsUndoEntry);\n\n  function RemoveColumnsUndoEntry(command, columnsRemovals) {\n    var _this10;\n\n    _classCallCheck(this, RemoveColumnsUndoEntry);\n\n    _this10 = _super10.call(this);\n    _this10.command = command;\n    _this10.columnsRemovals = columnsRemovals;\n    return _this10;\n  }\n\n  _createClass(RemoveColumnsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveColumns(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveColumns(this);\n    }\n  }]);\n\n  return RemoveColumnsUndoEntry;\n}(BaseUndoEntry);\nexport var AddSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry11) {\n  _inherits(AddSheetUndoEntry, _BaseUndoEntry11);\n\n  var _super11 = _createSuper(AddSheetUndoEntry);\n\n  function AddSheetUndoEntry(sheetName) {\n    var _this11;\n\n    _classCallCheck(this, AddSheetUndoEntry);\n\n    _this11 = _super11.call(this);\n    _this11.sheetName = sheetName;\n    return _this11;\n  }\n\n  _createClass(AddSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddSheet(this);\n    }\n  }]);\n\n  return AddSheetUndoEntry;\n}(BaseUndoEntry);\nexport var RemoveSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry12) {\n  _inherits(RemoveSheetUndoEntry, _BaseUndoEntry12);\n\n  var _super12 = _createSuper(RemoveSheetUndoEntry);\n\n  function RemoveSheetUndoEntry(sheetName, sheetId, oldSheetContent, scopedNamedExpressions, version) {\n    var _this12;\n\n    _classCallCheck(this, RemoveSheetUndoEntry);\n\n    _this12 = _super12.call(this);\n    _this12.sheetName = sheetName;\n    _this12.sheetId = sheetId;\n    _this12.oldSheetContent = oldSheetContent;\n    _this12.scopedNamedExpressions = scopedNamedExpressions;\n    _this12.version = version;\n    return _this12;\n  }\n\n  _createClass(RemoveSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveSheet(this);\n    }\n  }]);\n\n  return RemoveSheetUndoEntry;\n}(BaseUndoEntry);\nexport var RenameSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry13) {\n  _inherits(RenameSheetUndoEntry, _BaseUndoEntry13);\n\n  var _super13 = _createSuper(RenameSheetUndoEntry);\n\n  function RenameSheetUndoEntry(sheetId, oldName, newName) {\n    var _this13;\n\n    _classCallCheck(this, RenameSheetUndoEntry);\n\n    _this13 = _super13.call(this);\n    _this13.sheetId = sheetId;\n    _this13.oldName = oldName;\n    _this13.newName = newName;\n    return _this13;\n  }\n\n  _createClass(RenameSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRenameSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRenameSheet(this);\n    }\n  }]);\n\n  return RenameSheetUndoEntry;\n}(BaseUndoEntry);\nexport var ClearSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry14) {\n  _inherits(ClearSheetUndoEntry, _BaseUndoEntry14);\n\n  var _super14 = _createSuper(ClearSheetUndoEntry);\n\n  function ClearSheetUndoEntry(sheetId, oldSheetContent) {\n    var _this14;\n\n    _classCallCheck(this, ClearSheetUndoEntry);\n\n    _this14 = _super14.call(this);\n    _this14.sheetId = sheetId;\n    _this14.oldSheetContent = oldSheetContent;\n    return _this14;\n  }\n\n  _createClass(ClearSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoClearSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoClearSheet(this);\n    }\n  }]);\n\n  return ClearSheetUndoEntry;\n}(BaseUndoEntry);\nexport var SetCellContentsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry15) {\n  _inherits(SetCellContentsUndoEntry, _BaseUndoEntry15);\n\n  var _super15 = _createSuper(SetCellContentsUndoEntry);\n\n  function SetCellContentsUndoEntry(cellContents) {\n    var _this15;\n\n    _classCallCheck(this, SetCellContentsUndoEntry);\n\n    _this15 = _super15.call(this);\n    _this15.cellContents = cellContents;\n    return _this15;\n  }\n\n  _createClass(SetCellContentsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetCellContents(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetCellContents(this);\n    }\n  }]);\n\n  return SetCellContentsUndoEntry;\n}(BaseUndoEntry);\nexport var PasteUndoEntry = /*#__PURE__*/function (_BaseUndoEntry16) {\n  _inherits(PasteUndoEntry, _BaseUndoEntry16);\n\n  var _super16 = _createSuper(PasteUndoEntry);\n\n  function PasteUndoEntry(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\n    var _this16;\n\n    _classCallCheck(this, PasteUndoEntry);\n\n    _this16 = _super16.call(this);\n    _this16.targetLeftCorner = targetLeftCorner;\n    _this16.oldContent = oldContent;\n    _this16.newContent = newContent;\n    _this16.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n    return _this16;\n  }\n\n  _createClass(PasteUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoPaste(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoPaste(this);\n    }\n  }]);\n\n  return PasteUndoEntry;\n}(BaseUndoEntry);\nexport var AddNamedExpressionUndoEntry = /*#__PURE__*/function (_BaseUndoEntry17) {\n  _inherits(AddNamedExpressionUndoEntry, _BaseUndoEntry17);\n\n  var _super17 = _createSuper(AddNamedExpressionUndoEntry);\n\n  function AddNamedExpressionUndoEntry(name, newContent, scope, options) {\n    var _this17;\n\n    _classCallCheck(this, AddNamedExpressionUndoEntry);\n\n    _this17 = _super17.call(this);\n    _this17.name = name;\n    _this17.newContent = newContent;\n    _this17.scope = scope;\n    _this17.options = options;\n    return _this17;\n  }\n\n  _createClass(AddNamedExpressionUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddNamedExpression(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddNamedExpression(this);\n    }\n  }]);\n\n  return AddNamedExpressionUndoEntry;\n}(BaseUndoEntry);\nexport var RemoveNamedExpressionUndoEntry = /*#__PURE__*/function (_BaseUndoEntry18) {\n  _inherits(RemoveNamedExpressionUndoEntry, _BaseUndoEntry18);\n\n  var _super18 = _createSuper(RemoveNamedExpressionUndoEntry);\n\n  function RemoveNamedExpressionUndoEntry(namedExpression, content, scope) {\n    var _this18;\n\n    _classCallCheck(this, RemoveNamedExpressionUndoEntry);\n\n    _this18 = _super18.call(this);\n    _this18.namedExpression = namedExpression;\n    _this18.content = content;\n    _this18.scope = scope;\n    return _this18;\n  }\n\n  _createClass(RemoveNamedExpressionUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveNamedExpression(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveNamedExpression(this);\n    }\n  }]);\n\n  return RemoveNamedExpressionUndoEntry;\n}(BaseUndoEntry);\nexport var ChangeNamedExpressionUndoEntry = /*#__PURE__*/function (_BaseUndoEntry19) {\n  _inherits(ChangeNamedExpressionUndoEntry, _BaseUndoEntry19);\n\n  var _super19 = _createSuper(ChangeNamedExpressionUndoEntry);\n\n  function ChangeNamedExpressionUndoEntry(namedExpression, newContent, oldContent, scope, options) {\n    var _this19;\n\n    _classCallCheck(this, ChangeNamedExpressionUndoEntry);\n\n    _this19 = _super19.call(this);\n    _this19.namedExpression = namedExpression;\n    _this19.newContent = newContent;\n    _this19.oldContent = oldContent;\n    _this19.scope = scope;\n    _this19.options = options;\n    return _this19;\n  }\n\n  _createClass(ChangeNamedExpressionUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoChangeNamedExpression(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoChangeNamedExpression(this);\n    }\n  }]);\n\n  return ChangeNamedExpressionUndoEntry;\n}(BaseUndoEntry);\nexport var BatchUndoEntry = /*#__PURE__*/function (_BaseUndoEntry20) {\n  _inherits(BatchUndoEntry, _BaseUndoEntry20);\n\n  var _super20 = _createSuper(BatchUndoEntry);\n\n  function BatchUndoEntry() {\n    var _this20;\n\n    _classCallCheck(this, BatchUndoEntry);\n\n    _this20 = _super20.apply(this, arguments);\n    _this20.operations = [];\n    return _this20;\n  }\n\n  _createClass(BatchUndoEntry, [{\n    key: \"add\",\n    value: function add(operation) {\n      this.operations.push(operation);\n    }\n  }, {\n    key: \"reversedOperations\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function reversedOperations() {\n      var i;\n      return _regeneratorRuntime.wrap(function reversedOperations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              i = this.operations.length - 1;\n\n            case 1:\n              if (!(i >= 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return this.operations[i];\n\n            case 4:\n              i--;\n              _context.next = 1;\n              break;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, reversedOperations, this);\n    })\n  }, {\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoBatch(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoBatch(this);\n    }\n  }]);\n\n  return BatchUndoEntry;\n}(BaseUndoEntry);\nexport var UndoRedo = /*#__PURE__*/function () {\n  function UndoRedo(config, operations) {\n    _classCallCheck(this, UndoRedo);\n\n    this.operations = operations;\n    this.undoStack = [];\n    this.redoStack = [];\n    this.oldData = new Map();\n    this.undoLimit = config.undoLimit;\n  }\n\n  _createClass(UndoRedo, [{\n    key: \"saveOperation\",\n    value: function saveOperation(operation) {\n      if (this.batchUndoEntry !== undefined) {\n        this.batchUndoEntry.add(operation);\n      } else {\n        this.addUndoEntry(operation);\n      }\n    }\n  }, {\n    key: \"beginBatchMode\",\n    value: function beginBatchMode() {\n      this.batchUndoEntry = new BatchUndoEntry();\n    }\n  }, {\n    key: \"addUndoEntry\",\n    value: function addUndoEntry(operation) {\n      this.undoStack.push(operation);\n      this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\n    }\n  }, {\n    key: \"commitBatchMode\",\n    value: function commitBatchMode() {\n      if (this.batchUndoEntry === undefined) {\n        throw 'Batch mode wasn\\'t started';\n      }\n\n      this.addUndoEntry(this.batchUndoEntry);\n      this.batchUndoEntry = undefined;\n    }\n  }, {\n    key: \"storeDataForVersion\",\n    value: function storeDataForVersion(version, address, astHash) {\n      if (!this.oldData.has(version)) {\n        this.oldData.set(version, []);\n      }\n\n      var currentOldData = this.oldData.get(version);\n      currentOldData.push([address, astHash]);\n    }\n  }, {\n    key: \"clearRedoStack\",\n    value: function clearRedoStack() {\n      this.redoStack = [];\n    }\n  }, {\n    key: \"clearUndoStack\",\n    value: function clearUndoStack() {\n      this.undoStack = [];\n    }\n  }, {\n    key: \"isUndoStackEmpty\",\n    value: function isUndoStackEmpty() {\n      return this.undoStack.length === 0;\n    }\n  }, {\n    key: \"isRedoStackEmpty\",\n    value: function isRedoStackEmpty() {\n      return this.redoStack.length === 0;\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      var operation = this.undoStack.pop();\n\n      if (!operation) {\n        throw 'Attempted to undo without operation on stack';\n      }\n\n      this.undoEntry(operation);\n      this.redoStack.push(operation);\n    }\n  }, {\n    key: \"undoEntry\",\n    value: function undoEntry(operation) {\n      operation.doUndo(this);\n    }\n  }, {\n    key: \"undoBatch\",\n    value: function undoBatch(batchOperation) {\n      var _iterator = _createForOfIteratorHelper(batchOperation.reversedOperations()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var operation = _step.value;\n          this.undoEntry(operation);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"undoRemoveRows\",\n    value: function undoRemoveRows(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      var sheet = operation.command.sheet,\n          rowsRemovals = operation.rowsRemovals;\n\n      for (var i = rowsRemovals.length - 1; i >= 0; --i) {\n        var rowsRemoval = rowsRemovals[i];\n        this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\n\n        var _iterator2 = _createForOfIteratorHelper(rowsRemoval.removedCells),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _step2.value,\n                address = _step2$value.address,\n                cellType = _step2$value.cellType;\n            this.operations.restoreCell(address, cellType);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.restoreOldDataFromVersion(rowsRemoval.version - 1);\n      }\n    }\n  }, {\n    key: \"undoRemoveColumns\",\n    value: function undoRemoveColumns(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      var sheet = operation.command.sheet,\n          columnsRemovals = operation.columnsRemovals;\n\n      for (var i = columnsRemovals.length - 1; i >= 0; --i) {\n        var columnsRemoval = columnsRemovals[i];\n        this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\n\n        var _iterator3 = _createForOfIteratorHelper(columnsRemoval.removedCells),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _step3$value = _step3.value,\n                address = _step3$value.address,\n                cellType = _step3$value.cellType;\n            this.operations.restoreCell(address, cellType);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        this.restoreOldDataFromVersion(columnsRemoval.version - 1);\n      }\n    }\n  }, {\n    key: \"undoAddRows\",\n    value: function undoAddRows(operation) {\n      var addedRowsSpans = operation.command.rowsSpans();\n\n      for (var i = addedRowsSpans.length - 1; i >= 0; --i) {\n        var addedRows = addedRowsSpans[i];\n        this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\n      }\n    }\n  }, {\n    key: \"undoAddColumns\",\n    value: function undoAddColumns(operation) {\n      var addedColumnsSpans = operation.command.columnsSpans();\n\n      for (var i = addedColumnsSpans.length - 1; i >= 0; --i) {\n        var addedColumns = addedColumnsSpans[i];\n        this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\n      }\n    }\n  }, {\n    key: \"undoSetCellContents\",\n    value: function undoSetCellContents(operation) {\n      var _iterator4 = _createForOfIteratorHelper(operation.cellContents),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var cellContentData = _step4.value;\n          var address = cellContentData.address;\n\n          var _cellContentData$oldC = _slicedToArray(cellContentData.oldContent, 2),\n              oldContentAddress = _cellContentData$oldC[0],\n              oldContent = _cellContentData$oldC[1];\n\n          if (!equalSimpleCellAddress(address, oldContentAddress)) {\n            this.operations.setCellEmpty(address);\n          }\n\n          this.operations.restoreCell(oldContentAddress, oldContent);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"undoPaste\",\n    value: function undoPaste(operation) {\n      this.restoreOperationOldContent(operation.oldContent);\n\n      var _iterator5 = _createForOfIteratorHelper(operation.addedGlobalNamedExpressions),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var namedExpression = _step5.value;\n          this.operations.removeNamedExpression(namedExpression);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"undoMoveRows\",\n    value: function undoMoveRows(operation) {\n      var sheet = operation.sheet;\n      this.operations.moveRows(sheet, operation.undoStart, operation.numberOfRows, operation.undoEnd);\n      this.restoreOldDataFromVersion(operation.version - 1);\n    }\n  }, {\n    key: \"undoMoveColumns\",\n    value: function undoMoveColumns(operation) {\n      var sheet = operation.sheet;\n      this.operations.moveColumns(sheet, operation.undoStart, operation.numberOfColumns, operation.undoEnd);\n      this.restoreOldDataFromVersion(operation.version - 1);\n    }\n  }, {\n    key: \"undoMoveCells\",\n    value: function undoMoveCells(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\n      this.restoreOperationOldContent(operation.overwrittenCellsData);\n      this.restoreOldDataFromVersion(operation.version - 1);\n\n      var _iterator6 = _createForOfIteratorHelper(operation.addedGlobalNamedExpressions),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var namedExpression = _step6.value;\n          this.operations.removeNamedExpression(namedExpression);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"undoAddSheet\",\n    value: function undoAddSheet(operation) {\n      var sheetName = operation.sheetName;\n      this.operations.removeSheetByName(sheetName);\n    }\n  }, {\n    key: \"undoRemoveSheet\",\n    value: function undoRemoveSheet(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      var oldSheetContent = operation.oldSheetContent,\n          sheetId = operation.sheetId;\n      this.operations.addSheet(operation.sheetName);\n\n      for (var rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n        var row = oldSheetContent[rowIndex];\n\n        for (var col = 0; col < row.length; col++) {\n          var cellType = row[col];\n          var address = simpleCellAddress(sheetId, col, rowIndex);\n          this.operations.restoreCell(address, cellType);\n        }\n      }\n\n      var _iterator7 = _createForOfIteratorHelper(operation.scopedNamedExpressions),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n              namedexpression = _step7$value[0],\n              content = _step7$value[1];\n\n          this.operations.restoreNamedExpression(namedexpression, content, sheetId);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      this.restoreOldDataFromVersion(operation.version - 1);\n    }\n  }, {\n    key: \"undoRenameSheet\",\n    value: function undoRenameSheet(operation) {\n      this.operations.renameSheet(operation.sheetId, operation.oldName);\n    }\n  }, {\n    key: \"undoClearSheet\",\n    value: function undoClearSheet(operation) {\n      var oldSheetContent = operation.oldSheetContent,\n          sheetId = operation.sheetId;\n\n      for (var rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n        var row = oldSheetContent[rowIndex];\n\n        for (var col = 0; col < row.length; col++) {\n          var cellType = row[col];\n          var address = simpleCellAddress(sheetId, col, rowIndex);\n          this.operations.restoreCell(address, cellType);\n        }\n      }\n    }\n  }, {\n    key: \"undoSetSheetContent\",\n    value: function undoSetSheetContent(operation) {\n      var oldSheetContent = operation.oldSheetContent,\n          sheetId = operation.sheetId;\n      this.operations.clearSheet(sheetId);\n\n      for (var rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n        var row = oldSheetContent[rowIndex];\n\n        for (var col = 0; col < row.length; col++) {\n          var cellType = row[col];\n          var address = simpleCellAddress(sheetId, col, rowIndex);\n          this.operations.restoreCell(address, cellType);\n        }\n      }\n    }\n  }, {\n    key: \"undoAddNamedExpression\",\n    value: function undoAddNamedExpression(operation) {\n      this.operations.removeNamedExpression(operation.name, operation.scope);\n    }\n  }, {\n    key: \"undoRemoveNamedExpression\",\n    value: function undoRemoveNamedExpression(operation) {\n      this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\n    }\n  }, {\n    key: \"undoChangeNamedExpression\",\n    value: function undoChangeNamedExpression(operation) {\n      this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\n    }\n  }, {\n    key: \"undoSetRowOrder\",\n    value: function undoSetRowOrder(operation) {\n      this.restoreOperationOldContent(operation.oldContent);\n    }\n  }, {\n    key: \"undoSetColumnOrder\",\n    value: function undoSetColumnOrder(operation) {\n      this.restoreOperationOldContent(operation.oldContent);\n    }\n  }, {\n    key: \"restoreOperationOldContent\",\n    value: function restoreOperationOldContent(oldContent) {\n      var _iterator8 = _createForOfIteratorHelper(oldContent),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _step8$value = _slicedToArray(_step8.value, 2),\n              address = _step8$value[0],\n              clipboardCell = _step8$value[1];\n\n          this.operations.restoreCell(address, clipboardCell);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      var operation = this.redoStack.pop();\n\n      if (!operation) {\n        throw 'Attempted to redo without operation on stack';\n      }\n\n      this.redoEntry(operation);\n      this.undoStack.push(operation);\n    }\n  }, {\n    key: \"redoEntry\",\n    value: function redoEntry(operation) {\n      operation.doRedo(this);\n    }\n  }, {\n    key: \"redoBatch\",\n    value: function redoBatch(batchOperation) {\n      var _iterator9 = _createForOfIteratorHelper(batchOperation.operations),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var operation = _step9.value;\n          this.redoEntry(operation);\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }, {\n    key: \"redoRemoveRows\",\n    value: function redoRemoveRows(operation) {\n      this.operations.removeRows(operation.command);\n    }\n  }, {\n    key: \"redoMoveCells\",\n    value: function redoMoveCells(operation) {\n      this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\n    }\n  }, {\n    key: \"redoRemoveColumns\",\n    value: function redoRemoveColumns(operation) {\n      this.operations.removeColumns(operation.command);\n    }\n  }, {\n    key: \"redoPaste\",\n    value: function redoPaste(operation) {\n      var targetLeftCorner = operation.targetLeftCorner,\n          newContent = operation.newContent;\n      var height = newContent.length;\n      var width = newContent[0].length;\n\n      for (var y = 0; y < height; ++y) {\n        for (var x = 0; x < width; ++x) {\n          var address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\n          this.operations.restoreCell(address, newContent[y][x]);\n        }\n      }\n    }\n  }, {\n    key: \"redoSetCellContents\",\n    value: function redoSetCellContents(operation) {\n      var _iterator10 = _createForOfIteratorHelper(operation.cellContents),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var cellContentData = _step10.value;\n          this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"redoAddRows\",\n    value: function redoAddRows(operation) {\n      this.operations.addRows(operation.command);\n    }\n  }, {\n    key: \"redoAddColumns\",\n    value: function redoAddColumns(operation) {\n      this.operations.addColumns(operation.command);\n    }\n  }, {\n    key: \"redoRemoveSheet\",\n    value: function redoRemoveSheet(operation) {\n      this.operations.removeSheetByName(operation.sheetName);\n    }\n  }, {\n    key: \"redoAddSheet\",\n    value: function redoAddSheet(operation) {\n      this.operations.addSheet(operation.sheetName);\n    }\n  }, {\n    key: \"redoRenameSheet\",\n    value: function redoRenameSheet(operation) {\n      this.operations.renameSheet(operation.sheetId, operation.newName);\n    }\n  }, {\n    key: \"redoMoveRows\",\n    value: function redoMoveRows(operation) {\n      this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\n    }\n  }, {\n    key: \"redoMoveColumns\",\n    value: function redoMoveColumns(operation) {\n      this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\n    }\n  }, {\n    key: \"redoClearSheet\",\n    value: function redoClearSheet(operation) {\n      this.operations.clearSheet(operation.sheetId);\n    }\n  }, {\n    key: \"redoSetSheetContent\",\n    value: function redoSetSheetContent(operation) {\n      var sheetId = operation.sheetId,\n          newSheetContent = operation.newSheetContent;\n      this.operations.setSheetContent(sheetId, newSheetContent);\n    }\n  }, {\n    key: \"redoAddNamedExpression\",\n    value: function redoAddNamedExpression(operation) {\n      this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\n    }\n  }, {\n    key: \"redoRemoveNamedExpression\",\n    value: function redoRemoveNamedExpression(operation) {\n      this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\n    }\n  }, {\n    key: \"redoChangeNamedExpression\",\n    value: function redoChangeNamedExpression(operation) {\n      this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\n    }\n  }, {\n    key: \"redoSetRowOrder\",\n    value: function redoSetRowOrder(operation) {\n      this.operations.setRowOrder(operation.sheetId, operation.rowMapping);\n    }\n  }, {\n    key: \"redoSetColumnOrder\",\n    value: function redoSetColumnOrder(operation) {\n      this.operations.setColumnOrder(operation.sheetId, operation.columnMapping);\n    }\n  }, {\n    key: \"restoreOldDataFromVersion\",\n    value: function restoreOldDataFromVersion(version) {\n      var oldDataToRestore = this.oldData.get(version) || [];\n\n      var _iterator11 = _createForOfIteratorHelper(oldDataToRestore),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var entryToRestore = _step11.value;\n\n          var _entryToRestore = _slicedToArray(entryToRestore, 2),\n              address = _entryToRestore[0],\n              hash = _entryToRestore[1];\n\n          this.operations.setFormulaToCellFromCache(hash, address);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }]);\n\n  return UndoRedo;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/UndoRedo.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","_arrayLikeToArray","Object","toString","slice","name","from","test","len","arr2","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","_classCallCheck","instance","equalSimpleCellAddress","simpleCellAddress","AddColumnsCommand","AddRowsCommand","RemoveColumnsCommand","RemoveRowsCommand","BaseUndoEntry","RemoveRowsUndoEntry","_BaseUndoEntry","_super","command","rowsRemovals","_this","doUndo","undoRedo","undoRemoveRows","doRedo","redoRemoveRows","MoveCellsUndoEntry","_BaseUndoEntry2","_super2","sourceLeftCorner","width","height","destinationLeftCorner","overwrittenCellsData","addedGlobalNamedExpressions","version","_this2","undoMoveCells","redoMoveCells","AddRowsUndoEntry","_BaseUndoEntry3","_super3","_this3","undoAddRows","redoAddRows","SetRowOrderUndoEntry","_BaseUndoEntry4","_super4","sheetId","rowMapping","oldContent","_this4","undoSetRowOrder","redoSetRowOrder","SetColumnOrderUndoEntry","_BaseUndoEntry5","_super5","columnMapping","_this5","undoSetColumnOrder","redoSetColumnOrder","SetSheetContentUndoEntry","_BaseUndoEntry6","_super6","oldSheetContent","newSheetContent","_this6","undoSetSheetContent","redoSetSheetContent","MoveRowsUndoEntry","_BaseUndoEntry7","_super7","sheet","startRow","numberOfRows","targetRow","_this7","undoStart","undoEnd","undoMoveRows","redoMoveRows","MoveColumnsUndoEntry","_BaseUndoEntry8","_super8","startColumn","numberOfColumns","targetColumn","_this8","undoMoveColumns","redoMoveColumns","AddColumnsUndoEntry","_BaseUndoEntry9","_super9","_this9","undoAddColumns","redoAddColumns","RemoveColumnsUndoEntry","_BaseUndoEntry10","_super10","columnsRemovals","_this10","undoRemoveColumns","redoRemoveColumns","AddSheetUndoEntry","_BaseUndoEntry11","_super11","sheetName","_this11","undoAddSheet","redoAddSheet","RemoveSheetUndoEntry","_BaseUndoEntry12","_super12","scopedNamedExpressions","_this12","undoRemoveSheet","redoRemoveSheet","RenameSheetUndoEntry","_BaseUndoEntry13","_super13","oldName","newName","_this13","undoRenameSheet","redoRenameSheet","ClearSheetUndoEntry","_BaseUndoEntry14","_super14","_this14","undoClearSheet","redoClearSheet","SetCellContentsUndoEntry","_BaseUndoEntry15","_super15","cellContents","_this15","undoSetCellContents","redoSetCellContents","PasteUndoEntry","_BaseUndoEntry16","_super16","targetLeftCorner","newContent","_this16","undoPaste","redoPaste","AddNamedExpressionUndoEntry","_BaseUndoEntry17","_super17","scope","options","_this17","undoAddNamedExpression","redoAddNamedExpression","RemoveNamedExpressionUndoEntry","_BaseUndoEntry18","_super18","namedExpression","content","_this18","undoRemoveNamedExpression","redoRemoveNamedExpression","ChangeNamedExpressionUndoEntry","_BaseUndoEntry19","_super19","_this19","undoChangeNamedExpression","redoChangeNamedExpression","BatchUndoEntry","_BaseUndoEntry20","_super20","_this20","operations","add","operation","mark","reversedOperations","wrap","reversedOperations$","_context","prev","stop","undoBatch","redoBatch","UndoRedo","config","undoStack","redoStack","oldData","Map","undoLimit","saveOperation","batchUndoEntry","undefined","addUndoEntry","beginBatchMode","splice","Math","max","commitBatchMode","storeDataForVersion","address","astHash","has","set","currentOldData","get","clearRedoStack","clearUndoStack","isUndoStackEmpty","isRedoStackEmpty","undo","pop","undoEntry","batchOperation","_iterator","_step","forceApplyPostponedTransformations","rowsRemoval","addRows","rowFrom","rowCount","_iterator2","removedCells","_step2","_step2$value","cellType","restoreCell","restoreOldDataFromVersion","columnsRemoval","addColumns","columnFrom","columnCount","_iterator3","_step3","_step3$value","addedRowsSpans","rowsSpans","addedRows","removeRows","rowStart","addedColumnsSpans","columnsSpans","addedColumns","removeColumns","columnStart","_iterator4","_step4","cellContentData","_cellContentData$oldC","oldContentAddress","setCellEmpty","restoreOperationOldContent","_iterator5","_step5","removeNamedExpression","moveRows","moveColumns","moveCells","_iterator6","_step6","removeSheetByName","addSheet","rowIndex","row","col","_iterator7","_step7","_step7$value","namedexpression","restoreNamedExpression","renameSheet","clearSheet","_iterator8","_step8","_step8$value","clipboardCell","redo","redoEntry","_iterator9","_step9","y","x","_iterator10","_step10","setCellContent","setSheetContent","addNamedExpression","displayName","changeNamedExpressionExpression","setRowOrder","setColumnOrder","oldDataToRestore","_iterator11","_step11","entryToRestore","_entryToRestore","hash","setFormulaToCellFromCache"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { equalSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\nexport var BaseUndoEntry = function BaseUndoEntry() {\n  _classCallCheck(this, BaseUndoEntry);\n};\nexport var RemoveRowsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry) {\n  _inherits(RemoveRowsUndoEntry, _BaseUndoEntry);\n\n  var _super = _createSuper(RemoveRowsUndoEntry);\n\n  function RemoveRowsUndoEntry(command, rowsRemovals) {\n    var _this;\n\n    _classCallCheck(this, RemoveRowsUndoEntry);\n\n    _this = _super.call(this);\n    _this.command = command;\n    _this.rowsRemovals = rowsRemovals;\n    return _this;\n  }\n\n  _createClass(RemoveRowsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveRows(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveRows(this);\n    }\n  }]);\n\n  return RemoveRowsUndoEntry;\n}(BaseUndoEntry);\nexport var MoveCellsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry2) {\n  _inherits(MoveCellsUndoEntry, _BaseUndoEntry2);\n\n  var _super2 = _createSuper(MoveCellsUndoEntry);\n\n  function MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\n    var _this2;\n\n    _classCallCheck(this, MoveCellsUndoEntry);\n\n    _this2 = _super2.call(this);\n    _this2.sourceLeftCorner = sourceLeftCorner;\n    _this2.width = width;\n    _this2.height = height;\n    _this2.destinationLeftCorner = destinationLeftCorner;\n    _this2.overwrittenCellsData = overwrittenCellsData;\n    _this2.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n    _this2.version = version;\n    return _this2;\n  }\n\n  _createClass(MoveCellsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoMoveCells(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoMoveCells(this);\n    }\n  }]);\n\n  return MoveCellsUndoEntry;\n}(BaseUndoEntry);\nexport var AddRowsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry3) {\n  _inherits(AddRowsUndoEntry, _BaseUndoEntry3);\n\n  var _super3 = _createSuper(AddRowsUndoEntry);\n\n  function AddRowsUndoEntry(command) {\n    var _this3;\n\n    _classCallCheck(this, AddRowsUndoEntry);\n\n    _this3 = _super3.call(this);\n    _this3.command = command;\n    return _this3;\n  }\n\n  _createClass(AddRowsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddRows(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddRows(this);\n    }\n  }]);\n\n  return AddRowsUndoEntry;\n}(BaseUndoEntry);\nexport var SetRowOrderUndoEntry = /*#__PURE__*/function (_BaseUndoEntry4) {\n  _inherits(SetRowOrderUndoEntry, _BaseUndoEntry4);\n\n  var _super4 = _createSuper(SetRowOrderUndoEntry);\n\n  function SetRowOrderUndoEntry(sheetId, rowMapping, oldContent) {\n    var _this4;\n\n    _classCallCheck(this, SetRowOrderUndoEntry);\n\n    _this4 = _super4.call(this);\n    _this4.sheetId = sheetId;\n    _this4.rowMapping = rowMapping;\n    _this4.oldContent = oldContent;\n    return _this4;\n  }\n\n  _createClass(SetRowOrderUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetRowOrder(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetRowOrder(this);\n    }\n  }]);\n\n  return SetRowOrderUndoEntry;\n}(BaseUndoEntry);\nexport var SetColumnOrderUndoEntry = /*#__PURE__*/function (_BaseUndoEntry5) {\n  _inherits(SetColumnOrderUndoEntry, _BaseUndoEntry5);\n\n  var _super5 = _createSuper(SetColumnOrderUndoEntry);\n\n  function SetColumnOrderUndoEntry(sheetId, columnMapping, oldContent) {\n    var _this5;\n\n    _classCallCheck(this, SetColumnOrderUndoEntry);\n\n    _this5 = _super5.call(this);\n    _this5.sheetId = sheetId;\n    _this5.columnMapping = columnMapping;\n    _this5.oldContent = oldContent;\n    return _this5;\n  }\n\n  _createClass(SetColumnOrderUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetColumnOrder(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetColumnOrder(this);\n    }\n  }]);\n\n  return SetColumnOrderUndoEntry;\n}(BaseUndoEntry);\nexport var SetSheetContentUndoEntry = /*#__PURE__*/function (_BaseUndoEntry6) {\n  _inherits(SetSheetContentUndoEntry, _BaseUndoEntry6);\n\n  var _super6 = _createSuper(SetSheetContentUndoEntry);\n\n  function SetSheetContentUndoEntry(sheetId, oldSheetContent, newSheetContent) {\n    var _this6;\n\n    _classCallCheck(this, SetSheetContentUndoEntry);\n\n    _this6 = _super6.call(this);\n    _this6.sheetId = sheetId;\n    _this6.oldSheetContent = oldSheetContent;\n    _this6.newSheetContent = newSheetContent;\n    return _this6;\n  }\n\n  _createClass(SetSheetContentUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetSheetContent(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetSheetContent(this);\n    }\n  }]);\n\n  return SetSheetContentUndoEntry;\n}(BaseUndoEntry);\nexport var MoveRowsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry7) {\n  _inherits(MoveRowsUndoEntry, _BaseUndoEntry7);\n\n  var _super7 = _createSuper(MoveRowsUndoEntry);\n\n  function MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow, version) {\n    var _this7;\n\n    _classCallCheck(this, MoveRowsUndoEntry);\n\n    _this7 = _super7.call(this);\n    _this7.sheet = sheet;\n    _this7.startRow = startRow;\n    _this7.numberOfRows = numberOfRows;\n    _this7.targetRow = targetRow;\n    _this7.version = version;\n    _this7.undoStart = _this7.startRow < _this7.targetRow ? _this7.targetRow - _this7.numberOfRows : _this7.targetRow;\n    _this7.undoEnd = _this7.startRow > _this7.targetRow ? _this7.startRow + _this7.numberOfRows : _this7.startRow;\n    return _this7;\n  }\n\n  _createClass(MoveRowsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoMoveRows(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoMoveRows(this);\n    }\n  }]);\n\n  return MoveRowsUndoEntry;\n}(BaseUndoEntry);\nexport var MoveColumnsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry8) {\n  _inherits(MoveColumnsUndoEntry, _BaseUndoEntry8);\n\n  var _super8 = _createSuper(MoveColumnsUndoEntry);\n\n  function MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn, version) {\n    var _this8;\n\n    _classCallCheck(this, MoveColumnsUndoEntry);\n\n    _this8 = _super8.call(this);\n    _this8.sheet = sheet;\n    _this8.startColumn = startColumn;\n    _this8.numberOfColumns = numberOfColumns;\n    _this8.targetColumn = targetColumn;\n    _this8.version = version;\n    _this8.undoStart = _this8.startColumn < _this8.targetColumn ? _this8.targetColumn - _this8.numberOfColumns : _this8.targetColumn;\n    _this8.undoEnd = _this8.startColumn > _this8.targetColumn ? _this8.startColumn + _this8.numberOfColumns : _this8.startColumn;\n    return _this8;\n  }\n\n  _createClass(MoveColumnsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoMoveColumns(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoMoveColumns(this);\n    }\n  }]);\n\n  return MoveColumnsUndoEntry;\n}(BaseUndoEntry);\nexport var AddColumnsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry9) {\n  _inherits(AddColumnsUndoEntry, _BaseUndoEntry9);\n\n  var _super9 = _createSuper(AddColumnsUndoEntry);\n\n  function AddColumnsUndoEntry(command) {\n    var _this9;\n\n    _classCallCheck(this, AddColumnsUndoEntry);\n\n    _this9 = _super9.call(this);\n    _this9.command = command;\n    return _this9;\n  }\n\n  _createClass(AddColumnsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddColumns(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddColumns(this);\n    }\n  }]);\n\n  return AddColumnsUndoEntry;\n}(BaseUndoEntry);\nexport var RemoveColumnsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry10) {\n  _inherits(RemoveColumnsUndoEntry, _BaseUndoEntry10);\n\n  var _super10 = _createSuper(RemoveColumnsUndoEntry);\n\n  function RemoveColumnsUndoEntry(command, columnsRemovals) {\n    var _this10;\n\n    _classCallCheck(this, RemoveColumnsUndoEntry);\n\n    _this10 = _super10.call(this);\n    _this10.command = command;\n    _this10.columnsRemovals = columnsRemovals;\n    return _this10;\n  }\n\n  _createClass(RemoveColumnsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveColumns(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveColumns(this);\n    }\n  }]);\n\n  return RemoveColumnsUndoEntry;\n}(BaseUndoEntry);\nexport var AddSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry11) {\n  _inherits(AddSheetUndoEntry, _BaseUndoEntry11);\n\n  var _super11 = _createSuper(AddSheetUndoEntry);\n\n  function AddSheetUndoEntry(sheetName) {\n    var _this11;\n\n    _classCallCheck(this, AddSheetUndoEntry);\n\n    _this11 = _super11.call(this);\n    _this11.sheetName = sheetName;\n    return _this11;\n  }\n\n  _createClass(AddSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddSheet(this);\n    }\n  }]);\n\n  return AddSheetUndoEntry;\n}(BaseUndoEntry);\nexport var RemoveSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry12) {\n  _inherits(RemoveSheetUndoEntry, _BaseUndoEntry12);\n\n  var _super12 = _createSuper(RemoveSheetUndoEntry);\n\n  function RemoveSheetUndoEntry(sheetName, sheetId, oldSheetContent, scopedNamedExpressions, version) {\n    var _this12;\n\n    _classCallCheck(this, RemoveSheetUndoEntry);\n\n    _this12 = _super12.call(this);\n    _this12.sheetName = sheetName;\n    _this12.sheetId = sheetId;\n    _this12.oldSheetContent = oldSheetContent;\n    _this12.scopedNamedExpressions = scopedNamedExpressions;\n    _this12.version = version;\n    return _this12;\n  }\n\n  _createClass(RemoveSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveSheet(this);\n    }\n  }]);\n\n  return RemoveSheetUndoEntry;\n}(BaseUndoEntry);\nexport var RenameSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry13) {\n  _inherits(RenameSheetUndoEntry, _BaseUndoEntry13);\n\n  var _super13 = _createSuper(RenameSheetUndoEntry);\n\n  function RenameSheetUndoEntry(sheetId, oldName, newName) {\n    var _this13;\n\n    _classCallCheck(this, RenameSheetUndoEntry);\n\n    _this13 = _super13.call(this);\n    _this13.sheetId = sheetId;\n    _this13.oldName = oldName;\n    _this13.newName = newName;\n    return _this13;\n  }\n\n  _createClass(RenameSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRenameSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRenameSheet(this);\n    }\n  }]);\n\n  return RenameSheetUndoEntry;\n}(BaseUndoEntry);\nexport var ClearSheetUndoEntry = /*#__PURE__*/function (_BaseUndoEntry14) {\n  _inherits(ClearSheetUndoEntry, _BaseUndoEntry14);\n\n  var _super14 = _createSuper(ClearSheetUndoEntry);\n\n  function ClearSheetUndoEntry(sheetId, oldSheetContent) {\n    var _this14;\n\n    _classCallCheck(this, ClearSheetUndoEntry);\n\n    _this14 = _super14.call(this);\n    _this14.sheetId = sheetId;\n    _this14.oldSheetContent = oldSheetContent;\n    return _this14;\n  }\n\n  _createClass(ClearSheetUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoClearSheet(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoClearSheet(this);\n    }\n  }]);\n\n  return ClearSheetUndoEntry;\n}(BaseUndoEntry);\nexport var SetCellContentsUndoEntry = /*#__PURE__*/function (_BaseUndoEntry15) {\n  _inherits(SetCellContentsUndoEntry, _BaseUndoEntry15);\n\n  var _super15 = _createSuper(SetCellContentsUndoEntry);\n\n  function SetCellContentsUndoEntry(cellContents) {\n    var _this15;\n\n    _classCallCheck(this, SetCellContentsUndoEntry);\n\n    _this15 = _super15.call(this);\n    _this15.cellContents = cellContents;\n    return _this15;\n  }\n\n  _createClass(SetCellContentsUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoSetCellContents(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoSetCellContents(this);\n    }\n  }]);\n\n  return SetCellContentsUndoEntry;\n}(BaseUndoEntry);\nexport var PasteUndoEntry = /*#__PURE__*/function (_BaseUndoEntry16) {\n  _inherits(PasteUndoEntry, _BaseUndoEntry16);\n\n  var _super16 = _createSuper(PasteUndoEntry);\n\n  function PasteUndoEntry(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\n    var _this16;\n\n    _classCallCheck(this, PasteUndoEntry);\n\n    _this16 = _super16.call(this);\n    _this16.targetLeftCorner = targetLeftCorner;\n    _this16.oldContent = oldContent;\n    _this16.newContent = newContent;\n    _this16.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n    return _this16;\n  }\n\n  _createClass(PasteUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoPaste(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoPaste(this);\n    }\n  }]);\n\n  return PasteUndoEntry;\n}(BaseUndoEntry);\nexport var AddNamedExpressionUndoEntry = /*#__PURE__*/function (_BaseUndoEntry17) {\n  _inherits(AddNamedExpressionUndoEntry, _BaseUndoEntry17);\n\n  var _super17 = _createSuper(AddNamedExpressionUndoEntry);\n\n  function AddNamedExpressionUndoEntry(name, newContent, scope, options) {\n    var _this17;\n\n    _classCallCheck(this, AddNamedExpressionUndoEntry);\n\n    _this17 = _super17.call(this);\n    _this17.name = name;\n    _this17.newContent = newContent;\n    _this17.scope = scope;\n    _this17.options = options;\n    return _this17;\n  }\n\n  _createClass(AddNamedExpressionUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoAddNamedExpression(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoAddNamedExpression(this);\n    }\n  }]);\n\n  return AddNamedExpressionUndoEntry;\n}(BaseUndoEntry);\nexport var RemoveNamedExpressionUndoEntry = /*#__PURE__*/function (_BaseUndoEntry18) {\n  _inherits(RemoveNamedExpressionUndoEntry, _BaseUndoEntry18);\n\n  var _super18 = _createSuper(RemoveNamedExpressionUndoEntry);\n\n  function RemoveNamedExpressionUndoEntry(namedExpression, content, scope) {\n    var _this18;\n\n    _classCallCheck(this, RemoveNamedExpressionUndoEntry);\n\n    _this18 = _super18.call(this);\n    _this18.namedExpression = namedExpression;\n    _this18.content = content;\n    _this18.scope = scope;\n    return _this18;\n  }\n\n  _createClass(RemoveNamedExpressionUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoRemoveNamedExpression(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoRemoveNamedExpression(this);\n    }\n  }]);\n\n  return RemoveNamedExpressionUndoEntry;\n}(BaseUndoEntry);\nexport var ChangeNamedExpressionUndoEntry = /*#__PURE__*/function (_BaseUndoEntry19) {\n  _inherits(ChangeNamedExpressionUndoEntry, _BaseUndoEntry19);\n\n  var _super19 = _createSuper(ChangeNamedExpressionUndoEntry);\n\n  function ChangeNamedExpressionUndoEntry(namedExpression, newContent, oldContent, scope, options) {\n    var _this19;\n\n    _classCallCheck(this, ChangeNamedExpressionUndoEntry);\n\n    _this19 = _super19.call(this);\n    _this19.namedExpression = namedExpression;\n    _this19.newContent = newContent;\n    _this19.oldContent = oldContent;\n    _this19.scope = scope;\n    _this19.options = options;\n    return _this19;\n  }\n\n  _createClass(ChangeNamedExpressionUndoEntry, [{\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoChangeNamedExpression(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoChangeNamedExpression(this);\n    }\n  }]);\n\n  return ChangeNamedExpressionUndoEntry;\n}(BaseUndoEntry);\nexport var BatchUndoEntry = /*#__PURE__*/function (_BaseUndoEntry20) {\n  _inherits(BatchUndoEntry, _BaseUndoEntry20);\n\n  var _super20 = _createSuper(BatchUndoEntry);\n\n  function BatchUndoEntry() {\n    var _this20;\n\n    _classCallCheck(this, BatchUndoEntry);\n\n    _this20 = _super20.apply(this, arguments);\n    _this20.operations = [];\n    return _this20;\n  }\n\n  _createClass(BatchUndoEntry, [{\n    key: \"add\",\n    value: function add(operation) {\n      this.operations.push(operation);\n    }\n  }, {\n    key: \"reversedOperations\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function reversedOperations() {\n      var i;\n      return regeneratorRuntime.wrap(function reversedOperations$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              i = this.operations.length - 1;\n\n            case 1:\n              if (!(i >= 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return this.operations[i];\n\n            case 4:\n              i--;\n              _context.next = 1;\n              break;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, reversedOperations, this);\n    })\n  }, {\n    key: \"doUndo\",\n    value: function doUndo(undoRedo) {\n      undoRedo.undoBatch(this);\n    }\n  }, {\n    key: \"doRedo\",\n    value: function doRedo(undoRedo) {\n      undoRedo.redoBatch(this);\n    }\n  }]);\n\n  return BatchUndoEntry;\n}(BaseUndoEntry);\nexport var UndoRedo = /*#__PURE__*/function () {\n  function UndoRedo(config, operations) {\n    _classCallCheck(this, UndoRedo);\n\n    this.operations = operations;\n    this.undoStack = [];\n    this.redoStack = [];\n    this.oldData = new Map();\n    this.undoLimit = config.undoLimit;\n  }\n\n  _createClass(UndoRedo, [{\n    key: \"saveOperation\",\n    value: function saveOperation(operation) {\n      if (this.batchUndoEntry !== undefined) {\n        this.batchUndoEntry.add(operation);\n      } else {\n        this.addUndoEntry(operation);\n      }\n    }\n  }, {\n    key: \"beginBatchMode\",\n    value: function beginBatchMode() {\n      this.batchUndoEntry = new BatchUndoEntry();\n    }\n  }, {\n    key: \"addUndoEntry\",\n    value: function addUndoEntry(operation) {\n      this.undoStack.push(operation);\n      this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\n    }\n  }, {\n    key: \"commitBatchMode\",\n    value: function commitBatchMode() {\n      if (this.batchUndoEntry === undefined) {\n        throw 'Batch mode wasn\\'t started';\n      }\n\n      this.addUndoEntry(this.batchUndoEntry);\n      this.batchUndoEntry = undefined;\n    }\n  }, {\n    key: \"storeDataForVersion\",\n    value: function storeDataForVersion(version, address, astHash) {\n      if (!this.oldData.has(version)) {\n        this.oldData.set(version, []);\n      }\n\n      var currentOldData = this.oldData.get(version);\n      currentOldData.push([address, astHash]);\n    }\n  }, {\n    key: \"clearRedoStack\",\n    value: function clearRedoStack() {\n      this.redoStack = [];\n    }\n  }, {\n    key: \"clearUndoStack\",\n    value: function clearUndoStack() {\n      this.undoStack = [];\n    }\n  }, {\n    key: \"isUndoStackEmpty\",\n    value: function isUndoStackEmpty() {\n      return this.undoStack.length === 0;\n    }\n  }, {\n    key: \"isRedoStackEmpty\",\n    value: function isRedoStackEmpty() {\n      return this.redoStack.length === 0;\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      var operation = this.undoStack.pop();\n\n      if (!operation) {\n        throw 'Attempted to undo without operation on stack';\n      }\n\n      this.undoEntry(operation);\n      this.redoStack.push(operation);\n    }\n  }, {\n    key: \"undoEntry\",\n    value: function undoEntry(operation) {\n      operation.doUndo(this);\n    }\n  }, {\n    key: \"undoBatch\",\n    value: function undoBatch(batchOperation) {\n      var _iterator = _createForOfIteratorHelper(batchOperation.reversedOperations()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var operation = _step.value;\n          this.undoEntry(operation);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"undoRemoveRows\",\n    value: function undoRemoveRows(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      var sheet = operation.command.sheet,\n          rowsRemovals = operation.rowsRemovals;\n\n      for (var i = rowsRemovals.length - 1; i >= 0; --i) {\n        var rowsRemoval = rowsRemovals[i];\n        this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\n\n        var _iterator2 = _createForOfIteratorHelper(rowsRemoval.removedCells),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _step2.value,\n                address = _step2$value.address,\n                cellType = _step2$value.cellType;\n            this.operations.restoreCell(address, cellType);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.restoreOldDataFromVersion(rowsRemoval.version - 1);\n      }\n    }\n  }, {\n    key: \"undoRemoveColumns\",\n    value: function undoRemoveColumns(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      var sheet = operation.command.sheet,\n          columnsRemovals = operation.columnsRemovals;\n\n      for (var i = columnsRemovals.length - 1; i >= 0; --i) {\n        var columnsRemoval = columnsRemovals[i];\n        this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\n\n        var _iterator3 = _createForOfIteratorHelper(columnsRemoval.removedCells),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _step3$value = _step3.value,\n                address = _step3$value.address,\n                cellType = _step3$value.cellType;\n            this.operations.restoreCell(address, cellType);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        this.restoreOldDataFromVersion(columnsRemoval.version - 1);\n      }\n    }\n  }, {\n    key: \"undoAddRows\",\n    value: function undoAddRows(operation) {\n      var addedRowsSpans = operation.command.rowsSpans();\n\n      for (var i = addedRowsSpans.length - 1; i >= 0; --i) {\n        var addedRows = addedRowsSpans[i];\n        this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\n      }\n    }\n  }, {\n    key: \"undoAddColumns\",\n    value: function undoAddColumns(operation) {\n      var addedColumnsSpans = operation.command.columnsSpans();\n\n      for (var i = addedColumnsSpans.length - 1; i >= 0; --i) {\n        var addedColumns = addedColumnsSpans[i];\n        this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\n      }\n    }\n  }, {\n    key: \"undoSetCellContents\",\n    value: function undoSetCellContents(operation) {\n      var _iterator4 = _createForOfIteratorHelper(operation.cellContents),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var cellContentData = _step4.value;\n          var address = cellContentData.address;\n\n          var _cellContentData$oldC = _slicedToArray(cellContentData.oldContent, 2),\n              oldContentAddress = _cellContentData$oldC[0],\n              oldContent = _cellContentData$oldC[1];\n\n          if (!equalSimpleCellAddress(address, oldContentAddress)) {\n            this.operations.setCellEmpty(address);\n          }\n\n          this.operations.restoreCell(oldContentAddress, oldContent);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"undoPaste\",\n    value: function undoPaste(operation) {\n      this.restoreOperationOldContent(operation.oldContent);\n\n      var _iterator5 = _createForOfIteratorHelper(operation.addedGlobalNamedExpressions),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var namedExpression = _step5.value;\n          this.operations.removeNamedExpression(namedExpression);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"undoMoveRows\",\n    value: function undoMoveRows(operation) {\n      var sheet = operation.sheet;\n      this.operations.moveRows(sheet, operation.undoStart, operation.numberOfRows, operation.undoEnd);\n      this.restoreOldDataFromVersion(operation.version - 1);\n    }\n  }, {\n    key: \"undoMoveColumns\",\n    value: function undoMoveColumns(operation) {\n      var sheet = operation.sheet;\n      this.operations.moveColumns(sheet, operation.undoStart, operation.numberOfColumns, operation.undoEnd);\n      this.restoreOldDataFromVersion(operation.version - 1);\n    }\n  }, {\n    key: \"undoMoveCells\",\n    value: function undoMoveCells(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\n      this.restoreOperationOldContent(operation.overwrittenCellsData);\n      this.restoreOldDataFromVersion(operation.version - 1);\n\n      var _iterator6 = _createForOfIteratorHelper(operation.addedGlobalNamedExpressions),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var namedExpression = _step6.value;\n          this.operations.removeNamedExpression(namedExpression);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"undoAddSheet\",\n    value: function undoAddSheet(operation) {\n      var sheetName = operation.sheetName;\n      this.operations.removeSheetByName(sheetName);\n    }\n  }, {\n    key: \"undoRemoveSheet\",\n    value: function undoRemoveSheet(operation) {\n      this.operations.forceApplyPostponedTransformations();\n      var oldSheetContent = operation.oldSheetContent,\n          sheetId = operation.sheetId;\n      this.operations.addSheet(operation.sheetName);\n\n      for (var rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n        var row = oldSheetContent[rowIndex];\n\n        for (var col = 0; col < row.length; col++) {\n          var cellType = row[col];\n          var address = simpleCellAddress(sheetId, col, rowIndex);\n          this.operations.restoreCell(address, cellType);\n        }\n      }\n\n      var _iterator7 = _createForOfIteratorHelper(operation.scopedNamedExpressions),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n              namedexpression = _step7$value[0],\n              content = _step7$value[1];\n\n          this.operations.restoreNamedExpression(namedexpression, content, sheetId);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      this.restoreOldDataFromVersion(operation.version - 1);\n    }\n  }, {\n    key: \"undoRenameSheet\",\n    value: function undoRenameSheet(operation) {\n      this.operations.renameSheet(operation.sheetId, operation.oldName);\n    }\n  }, {\n    key: \"undoClearSheet\",\n    value: function undoClearSheet(operation) {\n      var oldSheetContent = operation.oldSheetContent,\n          sheetId = operation.sheetId;\n\n      for (var rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n        var row = oldSheetContent[rowIndex];\n\n        for (var col = 0; col < row.length; col++) {\n          var cellType = row[col];\n          var address = simpleCellAddress(sheetId, col, rowIndex);\n          this.operations.restoreCell(address, cellType);\n        }\n      }\n    }\n  }, {\n    key: \"undoSetSheetContent\",\n    value: function undoSetSheetContent(operation) {\n      var oldSheetContent = operation.oldSheetContent,\n          sheetId = operation.sheetId;\n      this.operations.clearSheet(sheetId);\n\n      for (var rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n        var row = oldSheetContent[rowIndex];\n\n        for (var col = 0; col < row.length; col++) {\n          var cellType = row[col];\n          var address = simpleCellAddress(sheetId, col, rowIndex);\n          this.operations.restoreCell(address, cellType);\n        }\n      }\n    }\n  }, {\n    key: \"undoAddNamedExpression\",\n    value: function undoAddNamedExpression(operation) {\n      this.operations.removeNamedExpression(operation.name, operation.scope);\n    }\n  }, {\n    key: \"undoRemoveNamedExpression\",\n    value: function undoRemoveNamedExpression(operation) {\n      this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\n    }\n  }, {\n    key: \"undoChangeNamedExpression\",\n    value: function undoChangeNamedExpression(operation) {\n      this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\n    }\n  }, {\n    key: \"undoSetRowOrder\",\n    value: function undoSetRowOrder(operation) {\n      this.restoreOperationOldContent(operation.oldContent);\n    }\n  }, {\n    key: \"undoSetColumnOrder\",\n    value: function undoSetColumnOrder(operation) {\n      this.restoreOperationOldContent(operation.oldContent);\n    }\n  }, {\n    key: \"restoreOperationOldContent\",\n    value: function restoreOperationOldContent(oldContent) {\n      var _iterator8 = _createForOfIteratorHelper(oldContent),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _step8$value = _slicedToArray(_step8.value, 2),\n              address = _step8$value[0],\n              clipboardCell = _step8$value[1];\n\n          this.operations.restoreCell(address, clipboardCell);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      var operation = this.redoStack.pop();\n\n      if (!operation) {\n        throw 'Attempted to redo without operation on stack';\n      }\n\n      this.redoEntry(operation);\n      this.undoStack.push(operation);\n    }\n  }, {\n    key: \"redoEntry\",\n    value: function redoEntry(operation) {\n      operation.doRedo(this);\n    }\n  }, {\n    key: \"redoBatch\",\n    value: function redoBatch(batchOperation) {\n      var _iterator9 = _createForOfIteratorHelper(batchOperation.operations),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var operation = _step9.value;\n          this.redoEntry(operation);\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }, {\n    key: \"redoRemoveRows\",\n    value: function redoRemoveRows(operation) {\n      this.operations.removeRows(operation.command);\n    }\n  }, {\n    key: \"redoMoveCells\",\n    value: function redoMoveCells(operation) {\n      this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\n    }\n  }, {\n    key: \"redoRemoveColumns\",\n    value: function redoRemoveColumns(operation) {\n      this.operations.removeColumns(operation.command);\n    }\n  }, {\n    key: \"redoPaste\",\n    value: function redoPaste(operation) {\n      var targetLeftCorner = operation.targetLeftCorner,\n          newContent = operation.newContent;\n      var height = newContent.length;\n      var width = newContent[0].length;\n\n      for (var y = 0; y < height; ++y) {\n        for (var x = 0; x < width; ++x) {\n          var address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\n          this.operations.restoreCell(address, newContent[y][x]);\n        }\n      }\n    }\n  }, {\n    key: \"redoSetCellContents\",\n    value: function redoSetCellContents(operation) {\n      var _iterator10 = _createForOfIteratorHelper(operation.cellContents),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var cellContentData = _step10.value;\n          this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"redoAddRows\",\n    value: function redoAddRows(operation) {\n      this.operations.addRows(operation.command);\n    }\n  }, {\n    key: \"redoAddColumns\",\n    value: function redoAddColumns(operation) {\n      this.operations.addColumns(operation.command);\n    }\n  }, {\n    key: \"redoRemoveSheet\",\n    value: function redoRemoveSheet(operation) {\n      this.operations.removeSheetByName(operation.sheetName);\n    }\n  }, {\n    key: \"redoAddSheet\",\n    value: function redoAddSheet(operation) {\n      this.operations.addSheet(operation.sheetName);\n    }\n  }, {\n    key: \"redoRenameSheet\",\n    value: function redoRenameSheet(operation) {\n      this.operations.renameSheet(operation.sheetId, operation.newName);\n    }\n  }, {\n    key: \"redoMoveRows\",\n    value: function redoMoveRows(operation) {\n      this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\n    }\n  }, {\n    key: \"redoMoveColumns\",\n    value: function redoMoveColumns(operation) {\n      this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\n    }\n  }, {\n    key: \"redoClearSheet\",\n    value: function redoClearSheet(operation) {\n      this.operations.clearSheet(operation.sheetId);\n    }\n  }, {\n    key: \"redoSetSheetContent\",\n    value: function redoSetSheetContent(operation) {\n      var sheetId = operation.sheetId,\n          newSheetContent = operation.newSheetContent;\n      this.operations.setSheetContent(sheetId, newSheetContent);\n    }\n  }, {\n    key: \"redoAddNamedExpression\",\n    value: function redoAddNamedExpression(operation) {\n      this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\n    }\n  }, {\n    key: \"redoRemoveNamedExpression\",\n    value: function redoRemoveNamedExpression(operation) {\n      this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\n    }\n  }, {\n    key: \"redoChangeNamedExpression\",\n    value: function redoChangeNamedExpression(operation) {\n      this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\n    }\n  }, {\n    key: \"redoSetRowOrder\",\n    value: function redoSetRowOrder(operation) {\n      this.operations.setRowOrder(operation.sheetId, operation.rowMapping);\n    }\n  }, {\n    key: \"redoSetColumnOrder\",\n    value: function redoSetColumnOrder(operation) {\n      this.operations.setColumnOrder(operation.sheetId, operation.columnMapping);\n    }\n  }, {\n    key: \"restoreOldDataFromVersion\",\n    value: function restoreOldDataFromVersion(version) {\n      var oldDataToRestore = this.oldData.get(version) || [];\n\n      var _iterator11 = _createForOfIteratorHelper(oldDataToRestore),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var entryToRestore = _step11.value;\n\n          var _entryToRestore = _slicedToArray(entryToRestore, 2),\n              address = _entryToRestore[0],\n              hash = _entryToRestore[1];\n\n          this.operations.setFormulaToCellFromCache(hash, address);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }]);\n\n  return UndoRedo;\n}();"]},"metadata":{},"sourceType":"module"}