{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\nimport { numberToSimpleTime } from '../DateTimeHelper';\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\nexport function format(value, formatArg, config, dateHelper) {\n  var tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\n\n  if (tryDateTime !== undefined) {\n    return tryDateTime;\n  }\n\n  var tryDuration = config.stringifyDuration(numberToSimpleTime(value), formatArg);\n\n  if (tryDuration !== undefined) {\n    return tryDuration;\n  }\n\n  var expression = parseForNumberFormat(formatArg);\n\n  if (expression !== undefined) {\n    return numberFormat(expression.tokens, value);\n  }\n\n  return formatArg;\n}\nexport function padLeft(number, size) {\n  var result = number + '';\n\n  while (result.length < size) {\n    result = '0' + result;\n  }\n\n  return result;\n}\nexport function padRight(number, size) {\n  var result = number + '';\n\n  while (result.length < size) {\n    result = result + '0';\n  }\n\n  return result;\n}\n\nfunction countChars(text, char) {\n  return text.split(char).length - 1;\n}\n\nfunction numberFormat(tokens, value) {\n  var result = '';\n\n  for (var i = 0; i < tokens.length; ++i) {\n    var token = tokens[i];\n\n    if (token.type === TokenType.FREE_TEXT) {\n      result += token.value;\n      continue;\n    }\n\n    var tokenParts = token.value.split('.');\n    var integerFormat = tokenParts[0];\n    var decimalFormat = tokenParts[1] || '';\n    var separator = tokenParts[1] ? '.' : '';\n    /* get fixed-point number without trailing zeros */\n\n    var valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\n    var integerPart = valueParts[0] || '';\n    var decimalPart = valueParts[1] || '';\n\n    if (integerFormat.length > integerPart.length) {\n      var padSizeInteger = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\n      integerPart = padLeft(integerPart, padSizeInteger + integerPart.length);\n    }\n\n    var padSizeDecimal = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\n    decimalPart = padRight(decimalPart, padSizeDecimal + decimalPart.length);\n    result += integerPart + separator + decimalPart;\n  }\n\n  return result;\n}\n\nexport function defaultStringifyDuration(time, formatArg) {\n  var expression = parseForDateTimeFormat(formatArg);\n\n  if (expression === undefined) {\n    return undefined;\n  }\n\n  var tokens = expression.tokens;\n  var result = '';\n\n  var _iterator = _createForOfIteratorHelper(tokens),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var token = _step.value;\n\n      if (token.type === TokenType.FREE_TEXT) {\n        result += token.value;\n        continue;\n      }\n\n      if (secondsExtendedRegexp.test(token.value)) {\n        var fractionOfSecondPrecision = token.value.length - 3;\n        result += (time.seconds < 10 ? '0' : '') + Math.round(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n        continue;\n      }\n\n      switch (token.value.toLowerCase()) {\n        case 'h':\n        case 'hh':\n          {\n            result += padLeft(time.hours, token.value.length);\n            time.hours = 0;\n            break;\n          }\n\n        case '[hh]':\n          {\n            result += padLeft(time.hours, token.value.length - 2);\n            time.hours = 0;\n            break;\n          }\n\n        case 'm':\n        case 'mm':\n          {\n            result += padLeft(time.minutes, token.value.length);\n            time.minutes = 0;\n            break;\n          }\n\n        case '[mm]':\n          {\n            result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\n            time.minutes = 0;\n            time.hours = 0;\n            break;\n          }\n\n        /* seconds */\n\n        case 's':\n        case 'ss':\n          {\n            result += padLeft(time.seconds, token.value.length);\n            break;\n          }\n\n        default:\n          {\n            return undefined;\n          }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return result;\n}\nexport function defaultStringifyDateTime(dateTime, formatArg) {\n  var expression = parseForDateTimeFormat(formatArg);\n\n  if (expression === undefined) {\n    return undefined;\n  }\n\n  var tokens = expression.tokens;\n  var result = '';\n  var minutes = false;\n  var ampm = tokens.some(function (token) {\n    return token.type === TokenType.FORMAT && (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM');\n  });\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.type === TokenType.FREE_TEXT) {\n      result += token.value;\n      continue;\n    }\n\n    if (secondsExtendedRegexp.test(token.value)) {\n      var fractionOfSecondPrecision = token.value.length - 3;\n      result += (dateTime.seconds < 10 ? '0' : '') + Math.round(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n      continue;\n    }\n\n    switch (token.value.toLowerCase()) {\n      /* hours*/\n      case 'h':\n      case 'hh':\n        {\n          minutes = true;\n          result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\n          break;\n        }\n\n      /* days */\n\n      case 'd':\n      case 'dd':\n        {\n          result += padLeft(dateTime.day, token.value.length);\n          break;\n        }\n\n      /* seconds */\n\n      case 's':\n      case 'ss':\n        {\n          result += padLeft(Math.round(dateTime.seconds), token.value.length);\n          break;\n        }\n\n      /* minutes / months */\n\n      case 'm':\n      case 'mm':\n        {\n          if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\n            minutes = true;\n          }\n\n          if (minutes) {\n            result += padLeft(dateTime.minutes, token.value.length);\n          } else {\n            result += padLeft(dateTime.month, token.value.length);\n          }\n\n          minutes = true;\n          break;\n        }\n\n      /* years */\n\n      case 'yy':\n        {\n          result += padLeft(dateTime.year % 100, token.value.length);\n          break;\n        }\n\n      case 'yyyy':\n        {\n          result += dateTime.year;\n          break;\n        }\n\n      /* AM / PM */\n\n      case 'am/pm':\n      case 'a/p':\n        {\n          var _token$value$split = token.value.split('/'),\n              _token$value$split2 = _slicedToArray(_token$value$split, 2),\n              am = _token$value$split2[0],\n              pm = _token$value$split2[1];\n\n          result += dateTime.hours < 12 ? am : pm;\n          break;\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/format/format.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","len","arr2","secondsExtendedRegexp","numberToSimpleTime","parseForDateTimeFormat","parseForNumberFormat","TokenType","format","formatArg","config","dateHelper","tryDateTime","stringifyDateTime","numberToSimpleDateTime","undefined","tryDuration","stringifyDuration","expression","numberFormat","tokens","padLeft","number","size","result","padRight","countChars","text","char","split","token","type","FREE_TEXT","tokenParts","integerFormat","decimalFormat","separator","valueParts","Number","toFixed","integerPart","decimalPart","padSizeInteger","substr","padSizeDecimal","defaultStringifyDuration","time","_iterator","_step","fractionOfSecondPrecision","seconds","Math","round","pow","toLowerCase","hours","minutes","defaultStringifyDateTime","dateTime","ampm","some","FORMAT","day","startsWith","month","year","_token$value$split","_token$value$split2","am","pm"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\nimport { numberToSimpleTime } from '../DateTimeHelper';\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\nexport function format(value, formatArg, config, dateHelper) {\n  var tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\n\n  if (tryDateTime !== undefined) {\n    return tryDateTime;\n  }\n\n  var tryDuration = config.stringifyDuration(numberToSimpleTime(value), formatArg);\n\n  if (tryDuration !== undefined) {\n    return tryDuration;\n  }\n\n  var expression = parseForNumberFormat(formatArg);\n\n  if (expression !== undefined) {\n    return numberFormat(expression.tokens, value);\n  }\n\n  return formatArg;\n}\nexport function padLeft(number, size) {\n  var result = number + '';\n\n  while (result.length < size) {\n    result = '0' + result;\n  }\n\n  return result;\n}\nexport function padRight(number, size) {\n  var result = number + '';\n\n  while (result.length < size) {\n    result = result + '0';\n  }\n\n  return result;\n}\n\nfunction countChars(text, char) {\n  return text.split(char).length - 1;\n}\n\nfunction numberFormat(tokens, value) {\n  var result = '';\n\n  for (var i = 0; i < tokens.length; ++i) {\n    var token = tokens[i];\n\n    if (token.type === TokenType.FREE_TEXT) {\n      result += token.value;\n      continue;\n    }\n\n    var tokenParts = token.value.split('.');\n    var integerFormat = tokenParts[0];\n    var decimalFormat = tokenParts[1] || '';\n    var separator = tokenParts[1] ? '.' : '';\n    /* get fixed-point number without trailing zeros */\n\n    var valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\n    var integerPart = valueParts[0] || '';\n    var decimalPart = valueParts[1] || '';\n\n    if (integerFormat.length > integerPart.length) {\n      var padSizeInteger = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\n      integerPart = padLeft(integerPart, padSizeInteger + integerPart.length);\n    }\n\n    var padSizeDecimal = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\n    decimalPart = padRight(decimalPart, padSizeDecimal + decimalPart.length);\n    result += integerPart + separator + decimalPart;\n  }\n\n  return result;\n}\n\nexport function defaultStringifyDuration(time, formatArg) {\n  var expression = parseForDateTimeFormat(formatArg);\n\n  if (expression === undefined) {\n    return undefined;\n  }\n\n  var tokens = expression.tokens;\n  var result = '';\n\n  var _iterator = _createForOfIteratorHelper(tokens),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var token = _step.value;\n\n      if (token.type === TokenType.FREE_TEXT) {\n        result += token.value;\n        continue;\n      }\n\n      if (secondsExtendedRegexp.test(token.value)) {\n        var fractionOfSecondPrecision = token.value.length - 3;\n        result += (time.seconds < 10 ? '0' : '') + Math.round(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n        continue;\n      }\n\n      switch (token.value.toLowerCase()) {\n        case 'h':\n        case 'hh':\n          {\n            result += padLeft(time.hours, token.value.length);\n            time.hours = 0;\n            break;\n          }\n\n        case '[hh]':\n          {\n            result += padLeft(time.hours, token.value.length - 2);\n            time.hours = 0;\n            break;\n          }\n\n        case 'm':\n        case 'mm':\n          {\n            result += padLeft(time.minutes, token.value.length);\n            time.minutes = 0;\n            break;\n          }\n\n        case '[mm]':\n          {\n            result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\n            time.minutes = 0;\n            time.hours = 0;\n            break;\n          }\n\n        /* seconds */\n\n        case 's':\n        case 'ss':\n          {\n            result += padLeft(time.seconds, token.value.length);\n            break;\n          }\n\n        default:\n          {\n            return undefined;\n          }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return result;\n}\nexport function defaultStringifyDateTime(dateTime, formatArg) {\n  var expression = parseForDateTimeFormat(formatArg);\n\n  if (expression === undefined) {\n    return undefined;\n  }\n\n  var tokens = expression.tokens;\n  var result = '';\n  var minutes = false;\n  var ampm = tokens.some(function (token) {\n    return token.type === TokenType.FORMAT && (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM');\n  });\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.type === TokenType.FREE_TEXT) {\n      result += token.value;\n      continue;\n    }\n\n    if (secondsExtendedRegexp.test(token.value)) {\n      var fractionOfSecondPrecision = token.value.length - 3;\n      result += (dateTime.seconds < 10 ? '0' : '') + Math.round(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n      continue;\n    }\n\n    switch (token.value.toLowerCase()) {\n      /* hours*/\n      case 'h':\n      case 'hh':\n        {\n          minutes = true;\n          result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\n          break;\n        }\n\n      /* days */\n\n      case 'd':\n      case 'dd':\n        {\n          result += padLeft(dateTime.day, token.value.length);\n          break;\n        }\n\n      /* seconds */\n\n      case 's':\n      case 'ss':\n        {\n          result += padLeft(Math.round(dateTime.seconds), token.value.length);\n          break;\n        }\n\n      /* minutes / months */\n\n      case 'm':\n      case 'mm':\n        {\n          if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\n            minutes = true;\n          }\n\n          if (minutes) {\n            result += padLeft(dateTime.minutes, token.value.length);\n          } else {\n            result += padLeft(dateTime.month, token.value.length);\n          }\n\n          minutes = true;\n          break;\n        }\n\n      /* years */\n\n      case 'yy':\n        {\n          result += padLeft(dateTime.year % 100, token.value.length);\n          break;\n        }\n\n      case 'yyyy':\n        {\n          result += dateTime.year;\n          break;\n        }\n\n      /* AM / PM */\n\n      case 'am/pm':\n      case 'a/p':\n        {\n          var _token$value$split = token.value.split('/'),\n              _token$value$split2 = _slicedToArray(_token$value$split, 2),\n              am = _token$value$split2[0],\n              pm = _token$value$split2[1];\n\n          result += dateTime.hours < 12 ? am : pm;\n          break;\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"module"}