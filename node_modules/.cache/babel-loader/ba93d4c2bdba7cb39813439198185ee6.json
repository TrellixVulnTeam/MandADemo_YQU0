{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport unorm from 'unorm';\nimport { CellError, CellValueTypeOrd, ErrorType, getCellValueType } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { collatorFromConfig } from '../StringHelper';\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, EmptyValue, getRawValue, getTypeFormatOfExtendedNumber, isExtendedNumber, NumberType, PercentNumber, TimeNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nvar COMPLEX_NUMBER_SYMBOL = 'i';\nvar complexParsingRegexp = /^\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij]))\\s*(([+-])\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij])))?$/;\nexport var ArithmeticHelper = /*#__PURE__*/function () {\n  function ArithmeticHelper(config, dateTimeHelper, numberLiteralsHelper) {\n    var _this = this;\n\n    _classCallCheck(this, ArithmeticHelper);\n\n    this.config = config;\n    this.dateTimeHelper = dateTimeHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n\n    this.lt = function (left, right) {\n      return _this.compare(left, right) < 0;\n    };\n\n    this.leq = function (left, right) {\n      return _this.compare(left, right) <= 0;\n    };\n\n    this.gt = function (left, right) {\n      return _this.compare(left, right) > 0;\n    };\n\n    this.geq = function (left, right) {\n      return _this.compare(left, right) >= 0;\n    };\n\n    this.eq = function (left, right) {\n      return _this.compare(left, right) === 0;\n    };\n\n    this.neq = function (left, right) {\n      return _this.compare(left, right) !== 0;\n    };\n\n    this.pow = function (left, right) {\n      return Math.pow(getRawValue(left), getRawValue(right));\n    };\n\n    this.addWithEpsilonRaw = function (left, right) {\n      var ret = left + right;\n\n      if (Math.abs(ret) < _this.actualEps * Math.abs(left)) {\n        return 0;\n      } else {\n        return ret;\n      }\n    };\n\n    this.addWithEpsilon = function (left, right) {\n      var typeOfResult = inferExtendedNumberTypeAdditive(left, right);\n      return _this.ExtendedNumberFactory(_this.addWithEpsilonRaw(getRawValue(left), getRawValue(right)), typeOfResult);\n    };\n\n    this.unaryMinus = function (arg) {\n      return cloneNumber(arg, -getRawValue(arg));\n    };\n\n    this.unaryPlus = function (arg) {\n      return arg;\n    };\n\n    this.unaryPercent = function (arg) {\n      return new PercentNumber(getRawValue(arg) / 100);\n    };\n\n    this.concat = function (left, right) {\n      return left.concat(right);\n    };\n\n    this.nonstrictadd = function (left, right) {\n      if (left instanceof CellError) {\n        return left;\n      } else if (right instanceof CellError) {\n        return right;\n      } else if (typeof left === 'number') {\n        if (typeof right === 'number') {\n          return _this.addWithEpsilonRaw(left, right);\n        } else {\n          return left;\n        }\n      } else if (typeof right === 'number') {\n        return right;\n      } else {\n        return 0;\n      }\n    };\n    /**\n     * Subtracts two numbers\n     *\n     * Implementation of subtracting which is used in interpreter.\n     *\n     * @param left - left operand of subtraction\n     * @param right - right operand of subtraction\n     * @param eps - precision of comparison\n     */\n\n\n    this.subtract = function (leftArg, rightArg) {\n      var typeOfResult = inferExtendedNumberTypeAdditive(leftArg, rightArg);\n      var left = getRawValue(leftArg);\n      var right = getRawValue(rightArg);\n      var ret = left - right;\n\n      if (Math.abs(ret) < _this.actualEps * Math.abs(left)) {\n        ret = 0;\n      }\n\n      return _this.ExtendedNumberFactory(ret, typeOfResult);\n    };\n\n    this.divide = function (leftArg, rightArg) {\n      var left = getRawValue(leftArg);\n      var right = getRawValue(rightArg);\n\n      if (right === 0) {\n        return new CellError(ErrorType.DIV_BY_ZERO);\n      } else {\n        var typeOfResult = inferExtendedNumberTypeMultiplicative(leftArg, rightArg);\n        return _this.ExtendedNumberFactory(left / right, typeOfResult);\n      }\n    };\n\n    this.multiply = function (left, right) {\n      var typeOfResult = inferExtendedNumberTypeMultiplicative(left, right);\n      return _this.ExtendedNumberFactory(getRawValue(left) * getRawValue(right), typeOfResult);\n    };\n\n    this.manyToExactComplex = function (args) {\n      var ret = [];\n\n      var _iterator = _createForOfIteratorHelper(args),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var arg = _step.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          } else if (isExtendedNumber(arg) || typeof arg === 'string') {\n            var coerced = _this.coerceScalarToComplex(arg);\n\n            if (!(coerced instanceof CellError)) {\n              ret.push(coerced);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return ret;\n    };\n\n    this.coerceNumbersExactRanges = function (args) {\n      return _this.manyToNumbers(args, _this.manyToExactNumbers);\n    };\n\n    this.coerceNumbersCoerceRangesDropNulls = function (args) {\n      return _this.manyToNumbers(args, _this.manyToCoercedNumbersDropNulls);\n    };\n\n    this.manyToExactNumbers = function (args) {\n      var ret = [];\n\n      var _iterator2 = _createForOfIteratorHelper(args),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var arg = _step2.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          } else if (isExtendedNumber(arg)) {\n            ret.push(getRawValue(arg));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return ret;\n    };\n\n    this.manyToOnlyNumbersDropNulls = function (args) {\n      var ret = [];\n\n      var _iterator3 = _createForOfIteratorHelper(args),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var arg = _step3.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          } else if (arg === EmptyValue) {\n            continue;\n          } else if (isExtendedNumber(arg)) {\n            ret.push(getRawValue(arg));\n          } else {\n            return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return ret;\n    };\n\n    this.manyToCoercedNumbersDropNulls = function (args) {\n      var ret = [];\n\n      var _iterator4 = _createForOfIteratorHelper(args),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var arg = _step4.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          }\n\n          if (arg === EmptyValue) {\n            continue;\n          }\n\n          var coerced = _this.coerceScalarToNumberOrError(arg);\n\n          if (isExtendedNumber(coerced)) {\n            ret.push(getRawValue(coerced));\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return ret;\n    };\n\n    this.collator = collatorFromConfig(config);\n    this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\n  }\n\n  _createClass(ArithmeticHelper, [{\n    key: \"eqMatcherFunction\",\n    value: function eqMatcherFunction(pattern) {\n      var _this2 = this;\n\n      var regexp = this.buildRegex(pattern);\n      return function (cellValue) {\n        return typeof cellValue === 'string' && regexp.test(_this2.normalizeString(cellValue));\n      };\n    }\n  }, {\n    key: \"neqMatcherFunction\",\n    value: function neqMatcherFunction(pattern) {\n      var _this3 = this;\n\n      var regexp = this.buildRegex(pattern);\n      return function (cellValue) {\n        return !(typeof cellValue === 'string') || !regexp.test(_this3.normalizeString(cellValue));\n      };\n    }\n  }, {\n    key: \"searchString\",\n    value: function searchString(pattern, text) {\n      var _a;\n\n      var regexp = this.buildRegex(pattern, false);\n      var result = regexp.exec(text);\n      return (_a = result === null || result === void 0 ? void 0 : result.index) !== null && _a !== void 0 ? _a : -1;\n    }\n  }, {\n    key: \"requiresRegex\",\n    value: function requiresRegex(pattern) {\n      if (!this.config.useRegularExpressions && !this.config.useWildcards) {\n        return !this.config.matchWholeCell;\n      }\n\n      for (var i = 0; i < pattern.length; i++) {\n        var c = pattern.charAt(i);\n\n        if (isWildcard(c) || this.config.useRegularExpressions && needsEscape(c)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"buildRegex\",\n    value: function buildRegex(pattern) {\n      var matchWholeCell = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      pattern = this.normalizeString(pattern);\n      var regexpStr;\n      var useWildcards = this.config.useWildcards;\n      var useRegularExpressions = this.config.useRegularExpressions;\n\n      if (useRegularExpressions) {\n        try {\n          RegExp(pattern);\n        } catch (e) {\n          useRegularExpressions = false;\n          useWildcards = false;\n        }\n      }\n\n      if (useRegularExpressions) {\n        regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\n      } else if (useWildcards) {\n        regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\n      } else {\n        regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\n      }\n\n      if (this.config.matchWholeCell && matchWholeCell) {\n        return RegExp('^(' + regexpStr + ')$');\n      } else {\n        return RegExp(regexpStr);\n      }\n    }\n  }, {\n    key: \"normalizeString\",\n    value: function normalizeString(str) {\n      if (!this.config.caseSensitive) {\n        str = str.toLowerCase();\n      }\n\n      if (!this.config.accentSensitive) {\n        str = _normalizeString(str, 'nfd').replace(/[\\u0300-\\u036f]/g, '');\n      }\n\n      return str;\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(left, right) {\n      if (typeof left === 'string' || typeof right === 'string') {\n        var leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\n        var rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\n\n        if (isExtendedNumber(leftTmp) && isExtendedNumber(rightTmp)) {\n          return this.floatCmp(leftTmp, rightTmp);\n        }\n      }\n\n      if (left === EmptyValue) {\n        left = coerceEmptyToValue(right);\n      } else if (right === EmptyValue) {\n        right = coerceEmptyToValue(left);\n      }\n\n      if (typeof left === 'string' && typeof right === 'string') {\n        return this.stringCmp(left, right);\n      } else if (typeof left === 'boolean' && typeof right === 'boolean') {\n        return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\n      } else if (isExtendedNumber(left) && isExtendedNumber(right)) {\n        return this.floatCmp(left, right);\n      } else if (left === EmptyValue && right === EmptyValue) {\n        return 0;\n      } else {\n        return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\n      }\n    }\n  }, {\n    key: \"floatCmp\",\n    value: function floatCmp(leftArg, rightArg) {\n      var left = getRawValue(leftArg);\n      var right = getRawValue(rightArg);\n      var mod = 1 + this.actualEps;\n\n      if (right >= 0 && left * mod >= right && left <= right * mod) {\n        return 0;\n      } else if (right <= 0 && left * mod <= right && left >= right * mod) {\n        return 0;\n      } else if (left > right) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: \"stringCmp\",\n    value: function stringCmp(left, right) {\n      return this.collator.compare(left, right);\n    }\n  }, {\n    key: \"coerceScalarToNumberOrError\",\n    value: function coerceScalarToNumberOrError(arg) {\n      var _a;\n\n      if (arg instanceof CellError) {\n        return arg;\n      }\n\n      return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.NumberCoercion);\n    }\n  }, {\n    key: \"coerceToMaybeNumber\",\n    value: function coerceToMaybeNumber(arg) {\n      var _a;\n\n      return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined;\n    }\n  }, {\n    key: \"coerceNonDateScalarToMaybeNumber\",\n    value: function coerceNonDateScalarToMaybeNumber(arg) {\n      if (arg === EmptyValue) {\n        return 0;\n      } else if (typeof arg === 'string') {\n        if (arg === '') {\n          return 0;\n        }\n\n        return this.numberLiteralsHelper.numericStringToMaybeNumber(arg.trim());\n      } else if (isExtendedNumber(arg)) {\n        return arg;\n      } else if (typeof arg === 'boolean') {\n        return Number(arg);\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"coerceComplexExactRanges\",\n    value: function coerceComplexExactRanges(args) {\n      var vals = [];\n\n      var _iterator5 = _createForOfIteratorHelper(args),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var arg = _step5.value;\n\n          if (arg instanceof SimpleRangeValue) {\n            vals.push(arg);\n          } else if (arg !== EmptyValue) {\n            var coerced = this.coerceScalarToComplex(arg);\n\n            if (coerced instanceof CellError) {\n              return coerced;\n            } else {\n              vals.push(coerced);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var expandedVals = [];\n\n      for (var _i = 0, _vals = vals; _i < _vals.length; _i++) {\n        var val = _vals[_i];\n\n        if (val instanceof SimpleRangeValue) {\n          var arr = this.manyToExactComplex(val.valuesFromTopLeftCorner());\n\n          if (arr instanceof CellError) {\n            return arr;\n          } else {\n            expandedVals.push.apply(expandedVals, _toConsumableArray(arr));\n          }\n        } else {\n          expandedVals.push(val);\n        }\n      }\n\n      return expandedVals;\n    }\n  }, {\n    key: \"manyToNumbers\",\n    value: function manyToNumbers(args, rangeFn) {\n      var vals = [];\n\n      var _iterator6 = _createForOfIteratorHelper(args),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var arg = _step6.value;\n\n          if (arg instanceof SimpleRangeValue) {\n            vals.push(arg);\n          } else {\n            var coerced = getRawValue(this.coerceScalarToNumberOrError(arg));\n\n            if (coerced instanceof CellError) {\n              return coerced;\n            } else {\n              vals.push(coerced);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var expandedVals = [];\n\n      for (var _i2 = 0, _vals2 = vals; _i2 < _vals2.length; _i2++) {\n        var val = _vals2[_i2];\n\n        if (val instanceof SimpleRangeValue) {\n          var arr = rangeFn(val.valuesFromTopLeftCorner());\n\n          if (arr instanceof CellError) {\n            return arr;\n          } else {\n            expandedVals.push.apply(expandedVals, _toConsumableArray(arr));\n          }\n        } else {\n          expandedVals.push(val);\n        }\n      }\n\n      return expandedVals;\n    }\n  }, {\n    key: \"coerceScalarToComplex\",\n    value: function coerceScalarToComplex(arg) {\n      if (arg instanceof CellError) {\n        return arg;\n      } else if (arg === EmptyValue) {\n        return [0, 0];\n      } else if (isExtendedNumber(arg)) {\n        return [getRawValue(arg), 0];\n      } else if (typeof arg === 'string') {\n        return this.coerceStringToComplex(arg);\n      } else {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n    }\n  }, {\n    key: \"coerceStringToComplex\",\n    value: function coerceStringToComplex(arg) {\n      var match = complexParsingRegexp.exec(arg);\n\n      if (match === null) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n\n      var val1;\n\n      if (match[6] !== undefined) {\n        val1 = match[1] === '-' ? [0, -1] : [0, 1];\n      } else {\n        val1 = this.parseComplexToken(match[1] + match[3], match[5]);\n      }\n\n      if (val1 instanceof CellError) {\n        return val1;\n      }\n\n      if (match[8] === undefined) {\n        return val1;\n      }\n\n      var val2;\n\n      if (match[14] !== undefined) {\n        val2 = match[9] === '-' ? [0, -1] : [0, 1];\n      } else {\n        val2 = this.parseComplexToken(match[9] + match[11], match[13]);\n      }\n\n      if (val2 instanceof CellError) {\n        return val2;\n      }\n\n      if (match[5] !== '' || match[13] === '') {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n\n      if (match[8] === '+') {\n        return [val1[0] + val2[0], val1[1] + val2[1]];\n      } else {\n        return [val1[0] - val2[0], val1[1] - val2[1]];\n      }\n    }\n  }, {\n    key: \"parseComplexToken\",\n    value: function parseComplexToken(arg, mod) {\n      var val = getRawValue(this.coerceNonDateScalarToMaybeNumber(arg));\n\n      if (val === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n\n      if (mod === '') {\n        return [val, 0];\n      } else {\n        return [0, val];\n      }\n    }\n  }, {\n    key: \"ExtendedNumberFactory\",\n    value: function ExtendedNumberFactory(value, typeFormat) {\n      var type = typeFormat.type,\n          format = typeFormat.format;\n\n      switch (type) {\n        case NumberType.NUMBER_RAW:\n          return value;\n\n        case NumberType.NUMBER_CURRENCY:\n          {\n            return new CurrencyNumber(value, format !== null && format !== void 0 ? format : this.config.currencySymbol[0]);\n          }\n\n        case NumberType.NUMBER_DATE:\n          return new DateNumber(value, format);\n\n        case NumberType.NUMBER_DATETIME:\n          return new DateTimeNumber(value, format);\n\n        case NumberType.NUMBER_TIME:\n          return new TimeNumber(value, format);\n\n        case NumberType.NUMBER_PERCENT:\n          return new PercentNumber(value, format);\n      }\n    }\n  }]);\n\n  return ArithmeticHelper;\n}();\nexport function coerceComplexToString(_ref, symb) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      re = _ref2[0],\n      im = _ref2[1];\n\n  if (!isFinite(re) || !isFinite(im)) {\n    return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n  }\n\n  symb = symb !== null && symb !== void 0 ? symb : COMPLEX_NUMBER_SYMBOL;\n\n  if (im === 0) {\n    return \"\".concat(re);\n  }\n\n  var imStr = \"\".concat(im === -1 || im === 1 ? '' : Math.abs(im)).concat(symb);\n\n  if (re === 0) {\n    return \"\".concat(im < 0 ? '-' : '').concat(imStr);\n  }\n\n  return \"\".concat(re).concat(im < 0 ? '-' : '+').concat(imStr);\n}\nexport function coerceToRange(arg) {\n  if (arg instanceof SimpleRangeValue) {\n    return arg;\n  } else {\n    return SimpleRangeValue.fromScalar(arg);\n  }\n}\nexport function coerceToRangeNumbersOrError(arg) {\n  if (arg instanceof SimpleRangeValue && arg.hasOnlyNumbers() || arg instanceof CellError) {\n    return arg;\n  } else if (isExtendedNumber(arg)) {\n    return SimpleRangeValue.fromScalar(arg);\n  } else {\n    return null;\n  }\n}\nexport function coerceBooleanToNumber(arg) {\n  return Number(arg);\n}\nexport function coerceEmptyToValue(arg) {\n  if (typeof arg === 'string') {\n    return '';\n  } else if (isExtendedNumber(arg)) {\n    return 0;\n  } else if (typeof arg === 'boolean') {\n    return false;\n  } else {\n    return EmptyValue;\n  }\n}\n/**\n * Coerce scalar value to boolean if possible, or error if value is an error\n *\n * @param arg\n */\n\nexport function coerceScalarToBoolean(arg) {\n  if (arg instanceof CellError || typeof arg === 'boolean') {\n    return arg;\n  } else if (arg === EmptyValue) {\n    return false;\n  } else if (isExtendedNumber(arg)) {\n    return getRawValue(arg) !== 0;\n  } else {\n    var argUppered = arg.toUpperCase();\n\n    if (argUppered === 'TRUE') {\n      return true;\n    } else if (argUppered === 'FALSE') {\n      return false;\n    } else if (argUppered === '') {\n      return false;\n    } else {\n      return undefined;\n    }\n  }\n}\nexport function coerceScalarToString(arg) {\n  if (arg instanceof CellError || typeof arg === 'string') {\n    return arg;\n  } else if (arg === EmptyValue) {\n    return '';\n  } else if (isExtendedNumber(arg)) {\n    return getRawValue(arg).toString();\n  } else {\n    return arg ? 'TRUE' : 'FALSE';\n  }\n}\nexport function zeroIfEmpty(arg) {\n  return arg === EmptyValue ? 0 : arg;\n}\nexport function numberCmp(leftArg, rightArg) {\n  var left = getRawValue(leftArg);\n  var right = getRawValue(rightArg);\n\n  if (left > right) {\n    return 1;\n  } else if (left < right) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\nexport function isNumberOverflow(arg) {\n  return isNaN(arg) || arg === Infinity || arg === -Infinity;\n}\nexport function fixNegativeZero(arg) {\n  if (arg === 0) {\n    return 0;\n  } else {\n    return arg;\n  }\n}\n\nfunction isWildcard(c) {\n  return ['*', '?'].includes(c);\n}\n\nvar escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\n\nfunction needsEscape(c) {\n  return escapedCharacters.includes(c);\n}\n\nfunction escapeNonWildcards(pattern, caseSensitive) {\n  var str = '';\n\n  for (var i = 0; i < pattern.length; i++) {\n    var c = pattern.charAt(i);\n\n    if (c === '~') {\n      if (i == pattern.length - 1) {\n        str += '~';\n        continue;\n      }\n\n      var d = pattern.charAt(i + 1);\n\n      if (isWildcard(d) || needsEscape(d)) {\n        str += '\\\\' + d;\n        i++;\n      } else {\n        str += d;\n        i++;\n      }\n    } else if (isWildcard(c)) {\n      str += '.' + c;\n    } else if (needsEscape(c)) {\n      str += '\\\\' + c;\n    } else if (caseSensitive) {\n      str += c;\n    } else {\n      str += c.toLowerCase();\n    }\n  }\n\n  return str;\n}\n\nfunction escapeAllCharacters(pattern, caseSensitive) {\n  var str = '';\n\n  for (var i = 0; i < pattern.length; i++) {\n    var c = pattern.charAt(i);\n\n    if (isWildcard(c) || needsEscape(c)) {\n      str += '\\\\' + c;\n    } else if (caseSensitive) {\n      str += c;\n    } else {\n      str += c.toLowerCase();\n    }\n  }\n\n  return str;\n}\n\nfunction escapeNoCharacters(pattern, caseSensitive) {\n  var str = '';\n\n  for (var i = 0; i < pattern.length; i++) {\n    var c = pattern.charAt(i);\n\n    if (isWildcard(c) || needsEscape(c)) {\n      str += c;\n    } else if (caseSensitive) {\n      str += c;\n    } else {\n      str += c.toLowerCase();\n    }\n  }\n\n  return str;\n}\n\nfunction inferExtendedNumberTypeAdditive(leftArg, rightArg) {\n  var _getTypeFormatOfExten = getTypeFormatOfExtendedNumber(leftArg),\n      leftType = _getTypeFormatOfExten.type,\n      leftFormat = _getTypeFormatOfExten.format;\n\n  var _getTypeFormatOfExten2 = getTypeFormatOfExtendedNumber(rightArg),\n      rightType = _getTypeFormatOfExten2.type,\n      rightFormat = _getTypeFormatOfExten2.format;\n\n  if (leftType === NumberType.NUMBER_RAW) {\n    return {\n      type: rightType,\n      format: rightFormat\n    };\n  }\n\n  if (rightType === NumberType.NUMBER_RAW) {\n    return {\n      type: leftType,\n      format: leftFormat\n    };\n  }\n\n  if ((leftType === NumberType.NUMBER_DATETIME || leftType === NumberType.NUMBER_DATE) && (rightType === NumberType.NUMBER_DATETIME || rightType === NumberType.NUMBER_DATE)) {\n    return {\n      type: NumberType.NUMBER_RAW\n    };\n  }\n\n  if (leftType === NumberType.NUMBER_TIME) {\n    if (rightType === NumberType.NUMBER_DATE) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: rightFormat + ' ' + leftFormat\n      };\n    }\n\n    if (rightType === NumberType.NUMBER_DATETIME) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: rightFormat\n      };\n    }\n  }\n\n  if (rightType === NumberType.NUMBER_TIME) {\n    if (leftType === NumberType.NUMBER_DATE) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: leftFormat + ' ' + rightFormat\n      };\n    }\n\n    if (leftType === NumberType.NUMBER_DATETIME) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: leftFormat\n      };\n    }\n  }\n\n  return {\n    type: leftType,\n    format: leftFormat\n  };\n}\n\nfunction inferExtendedNumberTypeMultiplicative(leftArg, rightArg) {\n  var _getTypeFormatOfExten3 = getTypeFormatOfExtendedNumber(leftArg),\n      leftType = _getTypeFormatOfExten3.type,\n      leftFormat = _getTypeFormatOfExten3.format;\n\n  var _getTypeFormatOfExten4 = getTypeFormatOfExtendedNumber(rightArg),\n      rightType = _getTypeFormatOfExten4.type,\n      rightFormat = _getTypeFormatOfExten4.format;\n\n  if (leftType === NumberType.NUMBER_PERCENT) {\n    leftType = NumberType.NUMBER_RAW;\n    leftFormat = undefined;\n  }\n\n  if (rightType === NumberType.NUMBER_PERCENT) {\n    rightType = NumberType.NUMBER_RAW;\n    rightFormat = undefined;\n  }\n\n  if (leftType === NumberType.NUMBER_RAW) {\n    return {\n      type: rightType,\n      format: rightFormat\n    };\n  }\n\n  if (rightType === NumberType.NUMBER_RAW) {\n    return {\n      type: leftType,\n      format: leftFormat\n    };\n  }\n\n  return {\n    type: NumberType.NUMBER_RAW\n  };\n}\n\nexport function forceNormalizeString(str) {\n  return _normalizeString(str.toLowerCase(), 'nfd').replace(/[\\u0300-\\u036f]/g, '');\n}\nexport function coerceRangeToScalar(arg, state) {\n  var _a;\n\n  if (arg.isAdHoc()) {\n    return (_a = arg.data[0]) === null || _a === void 0 ? void 0 : _a[0];\n  }\n\n  var range = arg.range;\n\n  if (state.formulaAddress.sheet === range.sheet) {\n    if (range.width() === 1) {\n      var offset = state.formulaAddress.row - range.start.row;\n\n      if (offset >= 0 && offset < range.height()) {\n        return arg.data[offset][0];\n      }\n    } else if (range.height() === 1) {\n      var _offset = state.formulaAddress.col - range.start.col;\n\n      if (_offset >= 0 && _offset < range.width()) {\n        return arg.data[0][_offset];\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction _normalizeString(str, form) {\n  return typeof str.normalize === 'function' ? str.normalize(form.toUpperCase()) : unorm[form](str);\n}\n\nexport { _normalizeString as normalizeString };","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/ArithmeticHelper.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","from","_arrayLikeToArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","Object","prototype","toString","slice","constructor","name","test","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","unorm","CellError","CellValueTypeOrd","ErrorType","getCellValueType","ErrorMessage","collatorFromConfig","cloneNumber","CurrencyNumber","DateNumber","DateTimeNumber","EmptyValue","getRawValue","getTypeFormatOfExtendedNumber","isExtendedNumber","NumberType","PercentNumber","TimeNumber","SimpleRangeValue","COMPLEX_NUMBER_SYMBOL","complexParsingRegexp","ArithmeticHelper","config","dateTimeHelper","numberLiteralsHelper","_this","lt","left","right","compare","leq","gt","geq","eq","neq","pow","Math","addWithEpsilonRaw","ret","abs","actualEps","addWithEpsilon","typeOfResult","inferExtendedNumberTypeAdditive","ExtendedNumberFactory","unaryMinus","arg","unaryPlus","unaryPercent","concat","nonstrictadd","subtract","leftArg","rightArg","divide","DIV_BY_ZERO","inferExtendedNumberTypeMultiplicative","multiply","manyToExactComplex","args","_iterator","_step","coerced","coerceScalarToComplex","coerceNumbersExactRanges","manyToNumbers","manyToExactNumbers","coerceNumbersCoerceRangesDropNulls","manyToCoercedNumbersDropNulls","_iterator2","_step2","manyToOnlyNumbersDropNulls","_iterator3","_step3","VALUE","NumberExpected","_iterator4","_step4","coerceScalarToNumberOrError","collator","smartRounding","precisionEpsilon","eqMatcherFunction","pattern","_this2","regexp","buildRegex","cellValue","normalizeString","neqMatcherFunction","_this3","searchString","text","_a","result","exec","index","requiresRegex","useRegularExpressions","useWildcards","matchWholeCell","c","charAt","isWildcard","needsEscape","arguments","undefined","regexpStr","RegExp","escapeNoCharacters","caseSensitive","escapeNonWildcards","escapeAllCharacters","str","toLowerCase","accentSensitive","_normalizeString","replace","leftTmp","dateStringToDateNumber","rightTmp","floatCmp","coerceEmptyToValue","stringCmp","numberCmp","coerceBooleanToNumber","mod","coerceToMaybeNumber","NumberCoercion","coerceNonDateScalarToMaybeNumber","numericStringToMaybeNumber","trim","Number","coerceComplexExactRanges","vals","_iterator5","_step5","expandedVals","_vals","val","valuesFromTopLeftCorner","apply","rangeFn","_iterator6","_step6","_i2","_vals2","coerceStringToComplex","NUM","ComplexNumberExpected","match","val1","parseComplexToken","val2","typeFormat","type","format","NUMBER_RAW","NUMBER_CURRENCY","currencySymbol","NUMBER_DATE","NUMBER_DATETIME","NUMBER_TIME","NUMBER_PERCENT","coerceComplexToString","_ref","symb","_ref2","re","im","isFinite","NaN","imStr","coerceToRange","fromScalar","coerceToRangeNumbersOrError","hasOnlyNumbers","coerceScalarToBoolean","argUppered","toUpperCase","coerceScalarToString","zeroIfEmpty","isNumberOverflow","isNaN","Infinity","fixNegativeZero","includes","escapedCharacters","d","_getTypeFormatOfExten","leftType","leftFormat","_getTypeFormatOfExten2","rightType","rightFormat","_getTypeFormatOfExten3","_getTypeFormatOfExten4","forceNormalizeString","coerceRangeToScalar","state","isAdHoc","data","range","formulaAddress","sheet","width","offset","row","start","height","_offset","col","form","normalize"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport unorm from 'unorm';\nimport { CellError, CellValueTypeOrd, ErrorType, getCellValueType } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { collatorFromConfig } from '../StringHelper';\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, EmptyValue, getRawValue, getTypeFormatOfExtendedNumber, isExtendedNumber, NumberType, PercentNumber, TimeNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nvar COMPLEX_NUMBER_SYMBOL = 'i';\nvar complexParsingRegexp = /^\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij]))\\s*(([+-])\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij])))?$/;\nexport var ArithmeticHelper = /*#__PURE__*/function () {\n  function ArithmeticHelper(config, dateTimeHelper, numberLiteralsHelper) {\n    var _this = this;\n\n    _classCallCheck(this, ArithmeticHelper);\n\n    this.config = config;\n    this.dateTimeHelper = dateTimeHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n\n    this.lt = function (left, right) {\n      return _this.compare(left, right) < 0;\n    };\n\n    this.leq = function (left, right) {\n      return _this.compare(left, right) <= 0;\n    };\n\n    this.gt = function (left, right) {\n      return _this.compare(left, right) > 0;\n    };\n\n    this.geq = function (left, right) {\n      return _this.compare(left, right) >= 0;\n    };\n\n    this.eq = function (left, right) {\n      return _this.compare(left, right) === 0;\n    };\n\n    this.neq = function (left, right) {\n      return _this.compare(left, right) !== 0;\n    };\n\n    this.pow = function (left, right) {\n      return Math.pow(getRawValue(left), getRawValue(right));\n    };\n\n    this.addWithEpsilonRaw = function (left, right) {\n      var ret = left + right;\n\n      if (Math.abs(ret) < _this.actualEps * Math.abs(left)) {\n        return 0;\n      } else {\n        return ret;\n      }\n    };\n\n    this.addWithEpsilon = function (left, right) {\n      var typeOfResult = inferExtendedNumberTypeAdditive(left, right);\n      return _this.ExtendedNumberFactory(_this.addWithEpsilonRaw(getRawValue(left), getRawValue(right)), typeOfResult);\n    };\n\n    this.unaryMinus = function (arg) {\n      return cloneNumber(arg, -getRawValue(arg));\n    };\n\n    this.unaryPlus = function (arg) {\n      return arg;\n    };\n\n    this.unaryPercent = function (arg) {\n      return new PercentNumber(getRawValue(arg) / 100);\n    };\n\n    this.concat = function (left, right) {\n      return left.concat(right);\n    };\n\n    this.nonstrictadd = function (left, right) {\n      if (left instanceof CellError) {\n        return left;\n      } else if (right instanceof CellError) {\n        return right;\n      } else if (typeof left === 'number') {\n        if (typeof right === 'number') {\n          return _this.addWithEpsilonRaw(left, right);\n        } else {\n          return left;\n        }\n      } else if (typeof right === 'number') {\n        return right;\n      } else {\n        return 0;\n      }\n    };\n    /**\n     * Subtracts two numbers\n     *\n     * Implementation of subtracting which is used in interpreter.\n     *\n     * @param left - left operand of subtraction\n     * @param right - right operand of subtraction\n     * @param eps - precision of comparison\n     */\n\n\n    this.subtract = function (leftArg, rightArg) {\n      var typeOfResult = inferExtendedNumberTypeAdditive(leftArg, rightArg);\n      var left = getRawValue(leftArg);\n      var right = getRawValue(rightArg);\n      var ret = left - right;\n\n      if (Math.abs(ret) < _this.actualEps * Math.abs(left)) {\n        ret = 0;\n      }\n\n      return _this.ExtendedNumberFactory(ret, typeOfResult);\n    };\n\n    this.divide = function (leftArg, rightArg) {\n      var left = getRawValue(leftArg);\n      var right = getRawValue(rightArg);\n\n      if (right === 0) {\n        return new CellError(ErrorType.DIV_BY_ZERO);\n      } else {\n        var typeOfResult = inferExtendedNumberTypeMultiplicative(leftArg, rightArg);\n        return _this.ExtendedNumberFactory(left / right, typeOfResult);\n      }\n    };\n\n    this.multiply = function (left, right) {\n      var typeOfResult = inferExtendedNumberTypeMultiplicative(left, right);\n      return _this.ExtendedNumberFactory(getRawValue(left) * getRawValue(right), typeOfResult);\n    };\n\n    this.manyToExactComplex = function (args) {\n      var ret = [];\n\n      var _iterator = _createForOfIteratorHelper(args),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var arg = _step.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          } else if (isExtendedNumber(arg) || typeof arg === 'string') {\n            var coerced = _this.coerceScalarToComplex(arg);\n\n            if (!(coerced instanceof CellError)) {\n              ret.push(coerced);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return ret;\n    };\n\n    this.coerceNumbersExactRanges = function (args) {\n      return _this.manyToNumbers(args, _this.manyToExactNumbers);\n    };\n\n    this.coerceNumbersCoerceRangesDropNulls = function (args) {\n      return _this.manyToNumbers(args, _this.manyToCoercedNumbersDropNulls);\n    };\n\n    this.manyToExactNumbers = function (args) {\n      var ret = [];\n\n      var _iterator2 = _createForOfIteratorHelper(args),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var arg = _step2.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          } else if (isExtendedNumber(arg)) {\n            ret.push(getRawValue(arg));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return ret;\n    };\n\n    this.manyToOnlyNumbersDropNulls = function (args) {\n      var ret = [];\n\n      var _iterator3 = _createForOfIteratorHelper(args),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var arg = _step3.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          } else if (arg === EmptyValue) {\n            continue;\n          } else if (isExtendedNumber(arg)) {\n            ret.push(getRawValue(arg));\n          } else {\n            return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return ret;\n    };\n\n    this.manyToCoercedNumbersDropNulls = function (args) {\n      var ret = [];\n\n      var _iterator4 = _createForOfIteratorHelper(args),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var arg = _step4.value;\n\n          if (arg instanceof CellError) {\n            return arg;\n          }\n\n          if (arg === EmptyValue) {\n            continue;\n          }\n\n          var coerced = _this.coerceScalarToNumberOrError(arg);\n\n          if (isExtendedNumber(coerced)) {\n            ret.push(getRawValue(coerced));\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return ret;\n    };\n\n    this.collator = collatorFromConfig(config);\n    this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\n  }\n\n  _createClass(ArithmeticHelper, [{\n    key: \"eqMatcherFunction\",\n    value: function eqMatcherFunction(pattern) {\n      var _this2 = this;\n\n      var regexp = this.buildRegex(pattern);\n      return function (cellValue) {\n        return typeof cellValue === 'string' && regexp.test(_this2.normalizeString(cellValue));\n      };\n    }\n  }, {\n    key: \"neqMatcherFunction\",\n    value: function neqMatcherFunction(pattern) {\n      var _this3 = this;\n\n      var regexp = this.buildRegex(pattern);\n      return function (cellValue) {\n        return !(typeof cellValue === 'string') || !regexp.test(_this3.normalizeString(cellValue));\n      };\n    }\n  }, {\n    key: \"searchString\",\n    value: function searchString(pattern, text) {\n      var _a;\n\n      var regexp = this.buildRegex(pattern, false);\n      var result = regexp.exec(text);\n      return (_a = result === null || result === void 0 ? void 0 : result.index) !== null && _a !== void 0 ? _a : -1;\n    }\n  }, {\n    key: \"requiresRegex\",\n    value: function requiresRegex(pattern) {\n      if (!this.config.useRegularExpressions && !this.config.useWildcards) {\n        return !this.config.matchWholeCell;\n      }\n\n      for (var i = 0; i < pattern.length; i++) {\n        var c = pattern.charAt(i);\n\n        if (isWildcard(c) || this.config.useRegularExpressions && needsEscape(c)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"buildRegex\",\n    value: function buildRegex(pattern) {\n      var matchWholeCell = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      pattern = this.normalizeString(pattern);\n      var regexpStr;\n      var useWildcards = this.config.useWildcards;\n      var useRegularExpressions = this.config.useRegularExpressions;\n\n      if (useRegularExpressions) {\n        try {\n          RegExp(pattern);\n        } catch (e) {\n          useRegularExpressions = false;\n          useWildcards = false;\n        }\n      }\n\n      if (useRegularExpressions) {\n        regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\n      } else if (useWildcards) {\n        regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\n      } else {\n        regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\n      }\n\n      if (this.config.matchWholeCell && matchWholeCell) {\n        return RegExp('^(' + regexpStr + ')$');\n      } else {\n        return RegExp(regexpStr);\n      }\n    }\n  }, {\n    key: \"normalizeString\",\n    value: function normalizeString(str) {\n      if (!this.config.caseSensitive) {\n        str = str.toLowerCase();\n      }\n\n      if (!this.config.accentSensitive) {\n        str = _normalizeString(str, 'nfd').replace(/[\\u0300-\\u036f]/g, '');\n      }\n\n      return str;\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(left, right) {\n      if (typeof left === 'string' || typeof right === 'string') {\n        var leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\n        var rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\n\n        if (isExtendedNumber(leftTmp) && isExtendedNumber(rightTmp)) {\n          return this.floatCmp(leftTmp, rightTmp);\n        }\n      }\n\n      if (left === EmptyValue) {\n        left = coerceEmptyToValue(right);\n      } else if (right === EmptyValue) {\n        right = coerceEmptyToValue(left);\n      }\n\n      if (typeof left === 'string' && typeof right === 'string') {\n        return this.stringCmp(left, right);\n      } else if (typeof left === 'boolean' && typeof right === 'boolean') {\n        return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\n      } else if (isExtendedNumber(left) && isExtendedNumber(right)) {\n        return this.floatCmp(left, right);\n      } else if (left === EmptyValue && right === EmptyValue) {\n        return 0;\n      } else {\n        return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\n      }\n    }\n  }, {\n    key: \"floatCmp\",\n    value: function floatCmp(leftArg, rightArg) {\n      var left = getRawValue(leftArg);\n      var right = getRawValue(rightArg);\n      var mod = 1 + this.actualEps;\n\n      if (right >= 0 && left * mod >= right && left <= right * mod) {\n        return 0;\n      } else if (right <= 0 && left * mod <= right && left >= right * mod) {\n        return 0;\n      } else if (left > right) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: \"stringCmp\",\n    value: function stringCmp(left, right) {\n      return this.collator.compare(left, right);\n    }\n  }, {\n    key: \"coerceScalarToNumberOrError\",\n    value: function coerceScalarToNumberOrError(arg) {\n      var _a;\n\n      if (arg instanceof CellError) {\n        return arg;\n      }\n\n      return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.NumberCoercion);\n    }\n  }, {\n    key: \"coerceToMaybeNumber\",\n    value: function coerceToMaybeNumber(arg) {\n      var _a;\n\n      return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined;\n    }\n  }, {\n    key: \"coerceNonDateScalarToMaybeNumber\",\n    value: function coerceNonDateScalarToMaybeNumber(arg) {\n      if (arg === EmptyValue) {\n        return 0;\n      } else if (typeof arg === 'string') {\n        if (arg === '') {\n          return 0;\n        }\n\n        return this.numberLiteralsHelper.numericStringToMaybeNumber(arg.trim());\n      } else if (isExtendedNumber(arg)) {\n        return arg;\n      } else if (typeof arg === 'boolean') {\n        return Number(arg);\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"coerceComplexExactRanges\",\n    value: function coerceComplexExactRanges(args) {\n      var vals = [];\n\n      var _iterator5 = _createForOfIteratorHelper(args),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var arg = _step5.value;\n\n          if (arg instanceof SimpleRangeValue) {\n            vals.push(arg);\n          } else if (arg !== EmptyValue) {\n            var coerced = this.coerceScalarToComplex(arg);\n\n            if (coerced instanceof CellError) {\n              return coerced;\n            } else {\n              vals.push(coerced);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var expandedVals = [];\n\n      for (var _i = 0, _vals = vals; _i < _vals.length; _i++) {\n        var val = _vals[_i];\n\n        if (val instanceof SimpleRangeValue) {\n          var arr = this.manyToExactComplex(val.valuesFromTopLeftCorner());\n\n          if (arr instanceof CellError) {\n            return arr;\n          } else {\n            expandedVals.push.apply(expandedVals, _toConsumableArray(arr));\n          }\n        } else {\n          expandedVals.push(val);\n        }\n      }\n\n      return expandedVals;\n    }\n  }, {\n    key: \"manyToNumbers\",\n    value: function manyToNumbers(args, rangeFn) {\n      var vals = [];\n\n      var _iterator6 = _createForOfIteratorHelper(args),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var arg = _step6.value;\n\n          if (arg instanceof SimpleRangeValue) {\n            vals.push(arg);\n          } else {\n            var coerced = getRawValue(this.coerceScalarToNumberOrError(arg));\n\n            if (coerced instanceof CellError) {\n              return coerced;\n            } else {\n              vals.push(coerced);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var expandedVals = [];\n\n      for (var _i2 = 0, _vals2 = vals; _i2 < _vals2.length; _i2++) {\n        var val = _vals2[_i2];\n\n        if (val instanceof SimpleRangeValue) {\n          var arr = rangeFn(val.valuesFromTopLeftCorner());\n\n          if (arr instanceof CellError) {\n            return arr;\n          } else {\n            expandedVals.push.apply(expandedVals, _toConsumableArray(arr));\n          }\n        } else {\n          expandedVals.push(val);\n        }\n      }\n\n      return expandedVals;\n    }\n  }, {\n    key: \"coerceScalarToComplex\",\n    value: function coerceScalarToComplex(arg) {\n      if (arg instanceof CellError) {\n        return arg;\n      } else if (arg === EmptyValue) {\n        return [0, 0];\n      } else if (isExtendedNumber(arg)) {\n        return [getRawValue(arg), 0];\n      } else if (typeof arg === 'string') {\n        return this.coerceStringToComplex(arg);\n      } else {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n    }\n  }, {\n    key: \"coerceStringToComplex\",\n    value: function coerceStringToComplex(arg) {\n      var match = complexParsingRegexp.exec(arg);\n\n      if (match === null) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n\n      var val1;\n\n      if (match[6] !== undefined) {\n        val1 = match[1] === '-' ? [0, -1] : [0, 1];\n      } else {\n        val1 = this.parseComplexToken(match[1] + match[3], match[5]);\n      }\n\n      if (val1 instanceof CellError) {\n        return val1;\n      }\n\n      if (match[8] === undefined) {\n        return val1;\n      }\n\n      var val2;\n\n      if (match[14] !== undefined) {\n        val2 = match[9] === '-' ? [0, -1] : [0, 1];\n      } else {\n        val2 = this.parseComplexToken(match[9] + match[11], match[13]);\n      }\n\n      if (val2 instanceof CellError) {\n        return val2;\n      }\n\n      if (match[5] !== '' || match[13] === '') {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n\n      if (match[8] === '+') {\n        return [val1[0] + val2[0], val1[1] + val2[1]];\n      } else {\n        return [val1[0] - val2[0], val1[1] - val2[1]];\n      }\n    }\n  }, {\n    key: \"parseComplexToken\",\n    value: function parseComplexToken(arg, mod) {\n      var val = getRawValue(this.coerceNonDateScalarToMaybeNumber(arg));\n\n      if (val === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n      }\n\n      if (mod === '') {\n        return [val, 0];\n      } else {\n        return [0, val];\n      }\n    }\n  }, {\n    key: \"ExtendedNumberFactory\",\n    value: function ExtendedNumberFactory(value, typeFormat) {\n      var type = typeFormat.type,\n          format = typeFormat.format;\n\n      switch (type) {\n        case NumberType.NUMBER_RAW:\n          return value;\n\n        case NumberType.NUMBER_CURRENCY:\n          {\n            return new CurrencyNumber(value, format !== null && format !== void 0 ? format : this.config.currencySymbol[0]);\n          }\n\n        case NumberType.NUMBER_DATE:\n          return new DateNumber(value, format);\n\n        case NumberType.NUMBER_DATETIME:\n          return new DateTimeNumber(value, format);\n\n        case NumberType.NUMBER_TIME:\n          return new TimeNumber(value, format);\n\n        case NumberType.NUMBER_PERCENT:\n          return new PercentNumber(value, format);\n      }\n    }\n  }]);\n\n  return ArithmeticHelper;\n}();\nexport function coerceComplexToString(_ref, symb) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      re = _ref2[0],\n      im = _ref2[1];\n\n  if (!isFinite(re) || !isFinite(im)) {\n    return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n  }\n\n  symb = symb !== null && symb !== void 0 ? symb : COMPLEX_NUMBER_SYMBOL;\n\n  if (im === 0) {\n    return \"\".concat(re);\n  }\n\n  var imStr = \"\".concat(im === -1 || im === 1 ? '' : Math.abs(im)).concat(symb);\n\n  if (re === 0) {\n    return \"\".concat(im < 0 ? '-' : '').concat(imStr);\n  }\n\n  return \"\".concat(re).concat(im < 0 ? '-' : '+').concat(imStr);\n}\nexport function coerceToRange(arg) {\n  if (arg instanceof SimpleRangeValue) {\n    return arg;\n  } else {\n    return SimpleRangeValue.fromScalar(arg);\n  }\n}\nexport function coerceToRangeNumbersOrError(arg) {\n  if (arg instanceof SimpleRangeValue && arg.hasOnlyNumbers() || arg instanceof CellError) {\n    return arg;\n  } else if (isExtendedNumber(arg)) {\n    return SimpleRangeValue.fromScalar(arg);\n  } else {\n    return null;\n  }\n}\nexport function coerceBooleanToNumber(arg) {\n  return Number(arg);\n}\nexport function coerceEmptyToValue(arg) {\n  if (typeof arg === 'string') {\n    return '';\n  } else if (isExtendedNumber(arg)) {\n    return 0;\n  } else if (typeof arg === 'boolean') {\n    return false;\n  } else {\n    return EmptyValue;\n  }\n}\n/**\n * Coerce scalar value to boolean if possible, or error if value is an error\n *\n * @param arg\n */\n\nexport function coerceScalarToBoolean(arg) {\n  if (arg instanceof CellError || typeof arg === 'boolean') {\n    return arg;\n  } else if (arg === EmptyValue) {\n    return false;\n  } else if (isExtendedNumber(arg)) {\n    return getRawValue(arg) !== 0;\n  } else {\n    var argUppered = arg.toUpperCase();\n\n    if (argUppered === 'TRUE') {\n      return true;\n    } else if (argUppered === 'FALSE') {\n      return false;\n    } else if (argUppered === '') {\n      return false;\n    } else {\n      return undefined;\n    }\n  }\n}\nexport function coerceScalarToString(arg) {\n  if (arg instanceof CellError || typeof arg === 'string') {\n    return arg;\n  } else if (arg === EmptyValue) {\n    return '';\n  } else if (isExtendedNumber(arg)) {\n    return getRawValue(arg).toString();\n  } else {\n    return arg ? 'TRUE' : 'FALSE';\n  }\n}\nexport function zeroIfEmpty(arg) {\n  return arg === EmptyValue ? 0 : arg;\n}\nexport function numberCmp(leftArg, rightArg) {\n  var left = getRawValue(leftArg);\n  var right = getRawValue(rightArg);\n\n  if (left > right) {\n    return 1;\n  } else if (left < right) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\nexport function isNumberOverflow(arg) {\n  return isNaN(arg) || arg === Infinity || arg === -Infinity;\n}\nexport function fixNegativeZero(arg) {\n  if (arg === 0) {\n    return 0;\n  } else {\n    return arg;\n  }\n}\n\nfunction isWildcard(c) {\n  return ['*', '?'].includes(c);\n}\n\nvar escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\n\nfunction needsEscape(c) {\n  return escapedCharacters.includes(c);\n}\n\nfunction escapeNonWildcards(pattern, caseSensitive) {\n  var str = '';\n\n  for (var i = 0; i < pattern.length; i++) {\n    var c = pattern.charAt(i);\n\n    if (c === '~') {\n      if (i == pattern.length - 1) {\n        str += '~';\n        continue;\n      }\n\n      var d = pattern.charAt(i + 1);\n\n      if (isWildcard(d) || needsEscape(d)) {\n        str += '\\\\' + d;\n        i++;\n      } else {\n        str += d;\n        i++;\n      }\n    } else if (isWildcard(c)) {\n      str += '.' + c;\n    } else if (needsEscape(c)) {\n      str += '\\\\' + c;\n    } else if (caseSensitive) {\n      str += c;\n    } else {\n      str += c.toLowerCase();\n    }\n  }\n\n  return str;\n}\n\nfunction escapeAllCharacters(pattern, caseSensitive) {\n  var str = '';\n\n  for (var i = 0; i < pattern.length; i++) {\n    var c = pattern.charAt(i);\n\n    if (isWildcard(c) || needsEscape(c)) {\n      str += '\\\\' + c;\n    } else if (caseSensitive) {\n      str += c;\n    } else {\n      str += c.toLowerCase();\n    }\n  }\n\n  return str;\n}\n\nfunction escapeNoCharacters(pattern, caseSensitive) {\n  var str = '';\n\n  for (var i = 0; i < pattern.length; i++) {\n    var c = pattern.charAt(i);\n\n    if (isWildcard(c) || needsEscape(c)) {\n      str += c;\n    } else if (caseSensitive) {\n      str += c;\n    } else {\n      str += c.toLowerCase();\n    }\n  }\n\n  return str;\n}\n\nfunction inferExtendedNumberTypeAdditive(leftArg, rightArg) {\n  var _getTypeFormatOfExten = getTypeFormatOfExtendedNumber(leftArg),\n      leftType = _getTypeFormatOfExten.type,\n      leftFormat = _getTypeFormatOfExten.format;\n\n  var _getTypeFormatOfExten2 = getTypeFormatOfExtendedNumber(rightArg),\n      rightType = _getTypeFormatOfExten2.type,\n      rightFormat = _getTypeFormatOfExten2.format;\n\n  if (leftType === NumberType.NUMBER_RAW) {\n    return {\n      type: rightType,\n      format: rightFormat\n    };\n  }\n\n  if (rightType === NumberType.NUMBER_RAW) {\n    return {\n      type: leftType,\n      format: leftFormat\n    };\n  }\n\n  if ((leftType === NumberType.NUMBER_DATETIME || leftType === NumberType.NUMBER_DATE) && (rightType === NumberType.NUMBER_DATETIME || rightType === NumberType.NUMBER_DATE)) {\n    return {\n      type: NumberType.NUMBER_RAW\n    };\n  }\n\n  if (leftType === NumberType.NUMBER_TIME) {\n    if (rightType === NumberType.NUMBER_DATE) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: rightFormat + ' ' + leftFormat\n      };\n    }\n\n    if (rightType === NumberType.NUMBER_DATETIME) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: rightFormat\n      };\n    }\n  }\n\n  if (rightType === NumberType.NUMBER_TIME) {\n    if (leftType === NumberType.NUMBER_DATE) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: leftFormat + ' ' + rightFormat\n      };\n    }\n\n    if (leftType === NumberType.NUMBER_DATETIME) {\n      return {\n        type: NumberType.NUMBER_DATETIME,\n        format: leftFormat\n      };\n    }\n  }\n\n  return {\n    type: leftType,\n    format: leftFormat\n  };\n}\n\nfunction inferExtendedNumberTypeMultiplicative(leftArg, rightArg) {\n  var _getTypeFormatOfExten3 = getTypeFormatOfExtendedNumber(leftArg),\n      leftType = _getTypeFormatOfExten3.type,\n      leftFormat = _getTypeFormatOfExten3.format;\n\n  var _getTypeFormatOfExten4 = getTypeFormatOfExtendedNumber(rightArg),\n      rightType = _getTypeFormatOfExten4.type,\n      rightFormat = _getTypeFormatOfExten4.format;\n\n  if (leftType === NumberType.NUMBER_PERCENT) {\n    leftType = NumberType.NUMBER_RAW;\n    leftFormat = undefined;\n  }\n\n  if (rightType === NumberType.NUMBER_PERCENT) {\n    rightType = NumberType.NUMBER_RAW;\n    rightFormat = undefined;\n  }\n\n  if (leftType === NumberType.NUMBER_RAW) {\n    return {\n      type: rightType,\n      format: rightFormat\n    };\n  }\n\n  if (rightType === NumberType.NUMBER_RAW) {\n    return {\n      type: leftType,\n      format: leftFormat\n    };\n  }\n\n  return {\n    type: NumberType.NUMBER_RAW\n  };\n}\n\nexport function forceNormalizeString(str) {\n  return _normalizeString(str.toLowerCase(), 'nfd').replace(/[\\u0300-\\u036f]/g, '');\n}\nexport function coerceRangeToScalar(arg, state) {\n  var _a;\n\n  if (arg.isAdHoc()) {\n    return (_a = arg.data[0]) === null || _a === void 0 ? void 0 : _a[0];\n  }\n\n  var range = arg.range;\n\n  if (state.formulaAddress.sheet === range.sheet) {\n    if (range.width() === 1) {\n      var offset = state.formulaAddress.row - range.start.row;\n\n      if (offset >= 0 && offset < range.height()) {\n        return arg.data[offset][0];\n      }\n    } else if (range.height() === 1) {\n      var _offset = state.formulaAddress.col - range.start.col;\n\n      if (_offset >= 0 && _offset < range.width()) {\n        return arg.data[0][_offset];\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction _normalizeString(str, form) {\n  return typeof str.normalize === 'function' ? str.normalize(form.toUpperCase()) : unorm[form](str);\n}\n\nexport { _normalizeString as normalizeString };"]},"metadata":{},"sourceType":"module"}