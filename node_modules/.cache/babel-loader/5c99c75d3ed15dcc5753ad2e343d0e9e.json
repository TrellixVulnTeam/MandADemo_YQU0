{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { CellError, ErrorType } from './Cell';\nimport { timeToNumber } from './DateTimeHelper';\nimport { ErrorMessage } from './error-message';\nimport { UnableToParseError } from './errors';\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, getRawValue, PercentNumber, TimeNumber } from './interpreter/InterpreterValue';\nexport var CellContent;\n\n(function (CellContent) {\n  var Number = function Number(value) {\n    _classCallCheck(this, Number);\n\n    this.value = value;\n    this.value = cloneNumber(this.value, fixNegativeZero(getRawValue(this.value)));\n  };\n\n  CellContent.Number = Number;\n\n  var String = function String(value) {\n    _classCallCheck(this, String);\n\n    this.value = value;\n  };\n\n  CellContent.String = String;\n\n  var Boolean = function Boolean(value) {\n    _classCallCheck(this, Boolean);\n\n    this.value = value;\n  };\n\n  CellContent.Boolean = Boolean;\n\n  var Empty = /*#__PURE__*/function () {\n    function Empty() {\n      _classCallCheck(this, Empty);\n    }\n\n    _createClass(Empty, null, [{\n      key: \"getSingletonInstance\",\n      value: function getSingletonInstance() {\n        if (!Empty.instance) {\n          Empty.instance = new Empty();\n        }\n\n        return Empty.instance;\n      }\n    }]);\n\n    return Empty;\n  }();\n\n  CellContent.Empty = Empty;\n\n  var Formula = function Formula(formula) {\n    _classCallCheck(this, Formula);\n\n    this.formula = formula;\n  };\n\n  CellContent.Formula = Formula;\n\n  var Error = function Error(errorType, message) {\n    _classCallCheck(this, Error);\n\n    this.value = new CellError(errorType, message);\n  };\n\n  CellContent.Error = Error;\n})(CellContent || (CellContent = {}));\n/**\n * Checks whether string looks like formula or not.\n *\n * @param text - formula\n */\n\n\nexport function isFormula(text) {\n  return text.startsWith('=');\n}\nexport function isBoolean(text) {\n  var tl = text.toLowerCase();\n  return tl === 'true' || tl === 'false';\n}\nexport function isError(text, errorMapping) {\n  var upperCased = text.toUpperCase();\n  var errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\n  return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\n}\nexport var CellContentParser = /*#__PURE__*/function () {\n  function CellContentParser(config, dateHelper, numberLiteralsHelper) {\n    _classCallCheck(this, CellContentParser);\n\n    this.config = config;\n    this.dateHelper = dateHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n  }\n\n  _createClass(CellContentParser, [{\n    key: \"currencyMatcher\",\n    value: function currencyMatcher(token) {\n      var _iterator = _createForOfIteratorHelper(this.config.currencySymbol),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var currency = _step.value;\n\n          if (token.startsWith(currency)) {\n            return [currency, token.slice(currency.length)];\n          }\n\n          if (token.endsWith(currency)) {\n            return [currency, token.slice(0, token.length - currency.length)];\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(content) {\n      if (content === undefined || content === null) {\n        return CellContent.Empty.getSingletonInstance();\n      } else if (typeof content === 'number') {\n        if (isNumberOverflow(content)) {\n          return new CellContent.Error(ErrorType.NUM, ErrorMessage.ValueLarge);\n        } else {\n          return new CellContent.Number(content);\n        }\n      } else if (typeof content === 'boolean') {\n        return new CellContent.Boolean(content);\n      } else if (content instanceof Date) {\n        var dateVal = this.dateHelper.dateToNumber({\n          day: content.getDate(),\n          month: content.getMonth() + 1,\n          year: content.getFullYear()\n        });\n        var timeVal = timeToNumber({\n          hours: content.getHours(),\n          minutes: content.getMinutes(),\n          seconds: content.getSeconds() + content.getMilliseconds() / 1000\n        });\n        var val = dateVal + timeVal;\n\n        if (val < 0) {\n          return new CellContent.Error(ErrorType.NUM, ErrorMessage.DateBounds);\n        }\n\n        if (val % 1 === 0) {\n          return new CellContent.Number(new DateNumber(val, 'Date()'));\n        } else if (val < 1) {\n          return new CellContent.Number(new TimeNumber(val, 'Date()'));\n        } else {\n          return new CellContent.Number(new DateTimeNumber(val, 'Date()'));\n        }\n      } else if (typeof content === 'string') {\n        if (isBoolean(content)) {\n          return new CellContent.Boolean(content.toLowerCase() === 'true');\n        } else if (isFormula(content)) {\n          return new CellContent.Formula(content);\n        } else if (isError(content, this.config.errorMapping)) {\n          return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\n        } else {\n          var trimmedContent = content.trim();\n          var mode = 0;\n          var currency;\n\n          if (trimmedContent.endsWith('%')) {\n            mode = 1;\n            trimmedContent = trimmedContent.slice(0, trimmedContent.length - 1);\n          } else {\n            var res = this.currencyMatcher(trimmedContent);\n\n            if (res !== undefined) {\n              mode = 2;\n\n              var _res = _slicedToArray(res, 2);\n\n              currency = _res[0];\n              trimmedContent = _res[1];\n            }\n          }\n\n          var _val = this.numberLiteralsHelper.numericStringToMaybeNumber(trimmedContent);\n\n          if (_val !== undefined) {\n            var parseAsNum;\n\n            if (mode === 1) {\n              parseAsNum = new PercentNumber(_val / 100);\n            } else if (mode === 2) {\n              parseAsNum = new CurrencyNumber(_val, currency);\n            } else {\n              parseAsNum = _val;\n            }\n\n            return new CellContent.Number(parseAsNum);\n          }\n\n          var parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\n\n          if (parsedDateNumber !== undefined) {\n            return new CellContent.Number(parsedDateNumber);\n          } else {\n            return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\n          }\n        }\n      } else {\n        throw new UnableToParseError(content);\n      }\n    }\n  }]);\n\n  return CellContentParser;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/CellContentParser.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","len","arr2","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","CellError","ErrorType","timeToNumber","ErrorMessage","UnableToParseError","fixNegativeZero","isNumberOverflow","cloneNumber","CurrencyNumber","DateNumber","DateTimeNumber","getRawValue","PercentNumber","TimeNumber","CellContent","Number","String","Boolean","Empty","getSingletonInstance","Formula","formula","Error","errorType","message","isFormula","text","startsWith","isBoolean","tl","toLowerCase","isError","errorMapping","upperCased","toUpperCase","errorRegex","hasOwnProperty","CellContentParser","config","dateHelper","numberLiteralsHelper","currencyMatcher","token","_iterator","currencySymbol","_step","currency","endsWith","undefined","parse","content","NUM","ValueLarge","Date","dateVal","dateToNumber","day","getDate","month","getMonth","year","getFullYear","timeVal","hours","getHours","minutes","getMinutes","seconds","getSeconds","getMilliseconds","val","DateBounds","trimmedContent","trim","mode","res","_res","_val","numericStringToMaybeNumber","parseAsNum","parsedDateNumber","dateStringToDateNumber"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from './Cell';\nimport { timeToNumber } from './DateTimeHelper';\nimport { ErrorMessage } from './error-message';\nimport { UnableToParseError } from './errors';\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, getRawValue, PercentNumber, TimeNumber } from './interpreter/InterpreterValue';\nexport var CellContent;\n\n(function (CellContent) {\n  var Number = function Number(value) {\n    _classCallCheck(this, Number);\n\n    this.value = value;\n    this.value = cloneNumber(this.value, fixNegativeZero(getRawValue(this.value)));\n  };\n\n  CellContent.Number = Number;\n\n  var String = function String(value) {\n    _classCallCheck(this, String);\n\n    this.value = value;\n  };\n\n  CellContent.String = String;\n\n  var Boolean = function Boolean(value) {\n    _classCallCheck(this, Boolean);\n\n    this.value = value;\n  };\n\n  CellContent.Boolean = Boolean;\n\n  var Empty = /*#__PURE__*/function () {\n    function Empty() {\n      _classCallCheck(this, Empty);\n    }\n\n    _createClass(Empty, null, [{\n      key: \"getSingletonInstance\",\n      value: function getSingletonInstance() {\n        if (!Empty.instance) {\n          Empty.instance = new Empty();\n        }\n\n        return Empty.instance;\n      }\n    }]);\n\n    return Empty;\n  }();\n\n  CellContent.Empty = Empty;\n\n  var Formula = function Formula(formula) {\n    _classCallCheck(this, Formula);\n\n    this.formula = formula;\n  };\n\n  CellContent.Formula = Formula;\n\n  var Error = function Error(errorType, message) {\n    _classCallCheck(this, Error);\n\n    this.value = new CellError(errorType, message);\n  };\n\n  CellContent.Error = Error;\n})(CellContent || (CellContent = {}));\n/**\n * Checks whether string looks like formula or not.\n *\n * @param text - formula\n */\n\n\nexport function isFormula(text) {\n  return text.startsWith('=');\n}\nexport function isBoolean(text) {\n  var tl = text.toLowerCase();\n  return tl === 'true' || tl === 'false';\n}\nexport function isError(text, errorMapping) {\n  var upperCased = text.toUpperCase();\n  var errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\n  return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\n}\nexport var CellContentParser = /*#__PURE__*/function () {\n  function CellContentParser(config, dateHelper, numberLiteralsHelper) {\n    _classCallCheck(this, CellContentParser);\n\n    this.config = config;\n    this.dateHelper = dateHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n  }\n\n  _createClass(CellContentParser, [{\n    key: \"currencyMatcher\",\n    value: function currencyMatcher(token) {\n      var _iterator = _createForOfIteratorHelper(this.config.currencySymbol),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var currency = _step.value;\n\n          if (token.startsWith(currency)) {\n            return [currency, token.slice(currency.length)];\n          }\n\n          if (token.endsWith(currency)) {\n            return [currency, token.slice(0, token.length - currency.length)];\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(content) {\n      if (content === undefined || content === null) {\n        return CellContent.Empty.getSingletonInstance();\n      } else if (typeof content === 'number') {\n        if (isNumberOverflow(content)) {\n          return new CellContent.Error(ErrorType.NUM, ErrorMessage.ValueLarge);\n        } else {\n          return new CellContent.Number(content);\n        }\n      } else if (typeof content === 'boolean') {\n        return new CellContent.Boolean(content);\n      } else if (content instanceof Date) {\n        var dateVal = this.dateHelper.dateToNumber({\n          day: content.getDate(),\n          month: content.getMonth() + 1,\n          year: content.getFullYear()\n        });\n        var timeVal = timeToNumber({\n          hours: content.getHours(),\n          minutes: content.getMinutes(),\n          seconds: content.getSeconds() + content.getMilliseconds() / 1000\n        });\n        var val = dateVal + timeVal;\n\n        if (val < 0) {\n          return new CellContent.Error(ErrorType.NUM, ErrorMessage.DateBounds);\n        }\n\n        if (val % 1 === 0) {\n          return new CellContent.Number(new DateNumber(val, 'Date()'));\n        } else if (val < 1) {\n          return new CellContent.Number(new TimeNumber(val, 'Date()'));\n        } else {\n          return new CellContent.Number(new DateTimeNumber(val, 'Date()'));\n        }\n      } else if (typeof content === 'string') {\n        if (isBoolean(content)) {\n          return new CellContent.Boolean(content.toLowerCase() === 'true');\n        } else if (isFormula(content)) {\n          return new CellContent.Formula(content);\n        } else if (isError(content, this.config.errorMapping)) {\n          return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\n        } else {\n          var trimmedContent = content.trim();\n          var mode = 0;\n          var currency;\n\n          if (trimmedContent.endsWith('%')) {\n            mode = 1;\n            trimmedContent = trimmedContent.slice(0, trimmedContent.length - 1);\n          } else {\n            var res = this.currencyMatcher(trimmedContent);\n\n            if (res !== undefined) {\n              mode = 2;\n\n              var _res = _slicedToArray(res, 2);\n\n              currency = _res[0];\n              trimmedContent = _res[1];\n            }\n          }\n\n          var _val = this.numberLiteralsHelper.numericStringToMaybeNumber(trimmedContent);\n\n          if (_val !== undefined) {\n            var parseAsNum;\n\n            if (mode === 1) {\n              parseAsNum = new PercentNumber(_val / 100);\n            } else if (mode === 2) {\n              parseAsNum = new CurrencyNumber(_val, currency);\n            } else {\n              parseAsNum = _val;\n            }\n\n            return new CellContent.Number(parseAsNum);\n          }\n\n          var parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\n\n          if (parsedDateNumber !== undefined) {\n            return new CellContent.Number(parsedDateNumber);\n          } else {\n            return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\n          }\n        }\n      } else {\n        throw new UnableToParseError(content);\n      }\n    }\n  }]);\n\n  return CellContentParser;\n}();"]},"metadata":{},"sourceType":"module"}