{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\nvar ClipboardOperationType;\n\n(function (ClipboardOperationType) {\n  ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\n  ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\n})(ClipboardOperationType || (ClipboardOperationType = {}));\n\nexport var ClipboardCellType;\n\n(function (ClipboardCellType) {\n  ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\n  ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\n  ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\n  ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\n})(ClipboardCellType || (ClipboardCellType = {}));\n\nvar Clipboard = /*#__PURE__*/function () {\n  function Clipboard(sourceLeftCorner, width, height, type, content) {\n    _classCallCheck(this, Clipboard);\n\n    this.sourceLeftCorner = sourceLeftCorner;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.content = content;\n  }\n\n  _createClass(Clipboard, [{\n    key: \"getContent\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function getContent(leftCorner) {\n      var y, x;\n      return _regeneratorRuntime.wrap(function getContent$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.content === undefined)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              y = 0;\n\n            case 5:\n              if (!(y < this.height)) {\n                _context.next = 16;\n                break;\n              }\n\n              x = 0;\n\n            case 7:\n              if (!(x < this.width)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 10;\n              return [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\n\n            case 10:\n              ++x;\n              _context.next = 7;\n              break;\n\n            case 13:\n              ++y;\n              _context.next = 5;\n              break;\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getContent, this);\n    })\n  }]);\n\n  return Clipboard;\n}();\n\nexport var ClipboardOperations = /*#__PURE__*/function () {\n  function ClipboardOperations(dependencyGraph, operations, parser, lazilyTransformingAstService, config) {\n    _classCallCheck(this, ClipboardOperations);\n\n    this.dependencyGraph = dependencyGraph;\n    this.operations = operations;\n    this.parser = parser;\n    this.lazilyTransformingAstService = lazilyTransformingAstService;\n    this.config = config;\n  }\n\n  _createClass(ClipboardOperations, [{\n    key: \"cut\",\n    value: function cut(leftCorner, width, height) {\n      this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(leftCorner, width, height) {\n      var content = [];\n\n      for (var y = 0; y < height; ++y) {\n        content[y] = [];\n\n        for (var x = 0; x < width; ++x) {\n          var clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\n          content[y].push(clipboardCell);\n        }\n      }\n\n      this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\n    }\n  }, {\n    key: \"abortCut\",\n    value: function abortCut() {\n      if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\n        this.clear();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clipboard = undefined;\n    }\n  }, {\n    key: \"ensureItIsPossibleToCopyPaste\",\n    value: function ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\n      if (this.clipboard === undefined) {\n        return;\n      }\n\n      if (invalidSimpleCellAddress(destinationLeftCorner) || !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\n        throw new InvalidArgumentsError('a valid target address.');\n      }\n\n      var targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\n\n      if (targetRange.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n        throw new SheetSizeLimitExceededError();\n      }\n\n      if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(targetRange)) {\n        throw new Error('It is not possible to paste onto matrix');\n      }\n    }\n  }, {\n    key: \"isCutClipboard\",\n    value: function isCutClipboard() {\n      return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\n    }\n  }, {\n    key: \"isCopyClipboard\",\n    value: function isCopyClipboard() {\n      return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\n    }\n  }]);\n\n  return ClipboardOperations;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/ClipboardOperations.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","AbsoluteCellRange","invalidSimpleCellAddress","simpleCellAddress","InvalidArgumentsError","SheetSizeLimitExceededError","ClipboardOperationType","ClipboardCellType","Clipboard","sourceLeftCorner","width","height","type","content","value","mark","getContent","leftCorner","y","x","wrap","getContent$","_context","prev","next","undefined","abrupt","sheet","col","row","stop","ClipboardOperations","dependencyGraph","operations","parser","lazilyTransformingAstService","config","cut","clipboard","CUT","copy","clipboardCell","getClipboardCell","push","COPY","abortCut","clear","ensureItIsPossibleToCopyPaste","destinationLeftCorner","sheetMapping","hasSheetWithId","targetRange","spanFrom","exceedsSheetSizeLimits","maxColumns","maxRows","matrixMapping","isFormulaMatrixInRange","Error","isCutClipboard","isCopyClipboard"],"mappings":"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","sourcesContent":["import \"regenerator-runtime/runtime.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\nvar ClipboardOperationType;\n\n(function (ClipboardOperationType) {\n  ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\n  ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\n})(ClipboardOperationType || (ClipboardOperationType = {}));\n\nexport var ClipboardCellType;\n\n(function (ClipboardCellType) {\n  ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\n  ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\n  ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\n  ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\n})(ClipboardCellType || (ClipboardCellType = {}));\n\nvar Clipboard = /*#__PURE__*/function () {\n  function Clipboard(sourceLeftCorner, width, height, type, content) {\n    _classCallCheck(this, Clipboard);\n\n    this.sourceLeftCorner = sourceLeftCorner;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.content = content;\n  }\n\n  _createClass(Clipboard, [{\n    key: \"getContent\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function getContent(leftCorner) {\n      var y, x;\n      return regeneratorRuntime.wrap(function getContent$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.content === undefined)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              y = 0;\n\n            case 5:\n              if (!(y < this.height)) {\n                _context.next = 16;\n                break;\n              }\n\n              x = 0;\n\n            case 7:\n              if (!(x < this.width)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 10;\n              return [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\n\n            case 10:\n              ++x;\n              _context.next = 7;\n              break;\n\n            case 13:\n              ++y;\n              _context.next = 5;\n              break;\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getContent, this);\n    })\n  }]);\n\n  return Clipboard;\n}();\n\nexport var ClipboardOperations = /*#__PURE__*/function () {\n  function ClipboardOperations(dependencyGraph, operations, parser, lazilyTransformingAstService, config) {\n    _classCallCheck(this, ClipboardOperations);\n\n    this.dependencyGraph = dependencyGraph;\n    this.operations = operations;\n    this.parser = parser;\n    this.lazilyTransformingAstService = lazilyTransformingAstService;\n    this.config = config;\n  }\n\n  _createClass(ClipboardOperations, [{\n    key: \"cut\",\n    value: function cut(leftCorner, width, height) {\n      this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(leftCorner, width, height) {\n      var content = [];\n\n      for (var y = 0; y < height; ++y) {\n        content[y] = [];\n\n        for (var x = 0; x < width; ++x) {\n          var clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\n          content[y].push(clipboardCell);\n        }\n      }\n\n      this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\n    }\n  }, {\n    key: \"abortCut\",\n    value: function abortCut() {\n      if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\n        this.clear();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clipboard = undefined;\n    }\n  }, {\n    key: \"ensureItIsPossibleToCopyPaste\",\n    value: function ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\n      if (this.clipboard === undefined) {\n        return;\n      }\n\n      if (invalidSimpleCellAddress(destinationLeftCorner) || !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\n        throw new InvalidArgumentsError('a valid target address.');\n      }\n\n      var targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\n\n      if (targetRange.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n        throw new SheetSizeLimitExceededError();\n      }\n\n      if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(targetRange)) {\n        throw new Error('It is not possible to paste onto matrix');\n      }\n    }\n  }, {\n    key: \"isCutClipboard\",\n    value: function isCutClipboard() {\n      return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\n    }\n  }, {\n    key: \"isCopyClipboard\",\n    value: function isCopyClipboard() {\n      return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\n    }\n  }]);\n\n  return ClipboardOperations;\n}();"]},"metadata":{},"sourceType":"module"}