{"ast":null,"code":"import { has, isString, isUndefined } from \"../utils/utils\";\nimport { Lexer } from \"./lexer_public\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens\";\nexport function tokenLabel(tokType) {\n  if (hasTokenLabel(tokType)) {\n    return tokType.LABEL;\n  } else {\n    return tokType.name;\n  }\n}\nexport function tokenName(tokType) {\n  return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n  return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n  return createTokenInternal(config);\n}\n\nfunction createTokenInternal(config) {\n  var pattern = config.pattern;\n  var tokenType = {};\n  tokenType.name = config.name;\n\n  if (!isUndefined(pattern)) {\n    tokenType.PATTERN = pattern;\n  }\n\n  if (has(config, PARENT)) {\n    throw \"The parent property is no longer supported.\\n\" + \"See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.\";\n  }\n\n  if (has(config, CATEGORIES)) {\n    // casting to ANY as this will be fixed inside `augmentTokenTypes``\n    tokenType.CATEGORIES = config[CATEGORIES];\n  }\n\n  augmentTokenTypes([tokenType]);\n\n  if (has(config, LABEL)) {\n    tokenType.LABEL = config[LABEL];\n  }\n\n  if (has(config, GROUP)) {\n    tokenType.GROUP = config[GROUP];\n  }\n\n  if (has(config, POP_MODE)) {\n    tokenType.POP_MODE = config[POP_MODE];\n  }\n\n  if (has(config, PUSH_MODE)) {\n    tokenType.PUSH_MODE = config[PUSH_MODE];\n  }\n\n  if (has(config, LONGER_ALT)) {\n    tokenType.LONGER_ALT = config[LONGER_ALT];\n  }\n\n  if (has(config, LINE_BREAKS)) {\n    tokenType.LINE_BREAKS = config[LINE_BREAKS];\n  }\n\n  if (has(config, START_CHARS_HINT)) {\n    tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n  }\n\n  return tokenType;\n}\n\nexport var EOF = createToken({\n  name: \"EOF\",\n  pattern: Lexer.NA\n});\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n  return {\n    image: image,\n    startOffset: startOffset,\n    endOffset: endOffset,\n    startLine: startLine,\n    endLine: endLine,\n    startColumn: startColumn,\n    endColumn: endColumn,\n    tokenTypeIdx: tokType.tokenTypeIdx,\n    tokenType: tokType\n  };\n}\nexport function tokenMatcher(token, tokType) {\n  return tokenStructuredMatcher(token, tokType);\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/scan/tokens_public.js"],"names":["has","isString","isUndefined","Lexer","augmentTokenTypes","tokenStructuredMatcher","tokenLabel","tokType","hasTokenLabel","LABEL","name","tokenName","obj","PARENT","CATEGORIES","GROUP","PUSH_MODE","POP_MODE","LONGER_ALT","LINE_BREAKS","START_CHARS_HINT","createToken","config","createTokenInternal","pattern","tokenType","PATTERN","EOF","NA","createTokenInstance","image","startOffset","endOffset","startLine","endLine","startColumn","endColumn","tokenTypeIdx","tokenMatcher","token"],"mappings":"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","sourcesContent":["import { has, isString, isUndefined } from \"../utils/utils\";\nimport { Lexer } from \"./lexer_public\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    var pattern = config.pattern;\n    var tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw \"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.\";\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport var EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image: image,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        startLine: startLine,\n        endLine: endLine,\n        startColumn: startColumn,\n        endColumn: endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map"]},"metadata":{},"sourceType":"module"}