{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { applyMixins, cloneObj, forEach, has, isEmpty, map, PRINT_WARNING, toFastProperties, values } from \"../../utils/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\";\nimport { expandAllNestedRuleNames } from \"../cst/cst\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider } from \"../errors_public\";\nimport { resolveGrammar, validateGrammar } from \"../grammar/gast/gast_resolver_public\";\nimport { Recoverable } from \"./traits/recoverable\";\nimport { LooksAhead } from \"./traits/looksahead\";\nimport { TreeBuilder } from \"./traits/tree_builder\";\nimport { LexerAdapter } from \"./traits/lexer_adapter\";\nimport { RecognizerApi } from \"./traits/recognizer_api\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine\";\nimport { ErrorHandler } from \"./traits/error_handler\";\nimport { ContentAssist } from \"./traits/context_assist\";\nimport { GastRecorder } from \"./traits/gast_recorder\";\nimport { PerformanceTracer } from \"./traits/perf_tracer\";\nexport var END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport var DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 4,\n  ignoredIssues: {},\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexport var DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function () {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nexport var ParserDefinitionErrorType;\n\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_NESTED_RULE_NAME\"] = 10] = \"INVALID_NESTED_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_NESTED_NAME\"] = 11] = \"DUPLICATE_NESTED_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 12] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 13] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 14] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\n\nexport function EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n\n  return function () {\n    return value;\n  };\n}\n\nvar Parser = function () {\n  function Parser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n\n    this.ignoredIssues = DEFAULT_PARSER_CONFIG.ignoredIssues;\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n    /* istanbul ignore if - complete over-kill to test this, we should only add a test when we actually hard deprecate it and throw an error... */\n\n    if (has(config, \"ignoredIssues\") && config.ignoredIssues !== DEFAULT_PARSER_CONFIG.ignoredIssues) {\n      PRINT_WARNING(\"The <ignoredIssues> IParserConfig property is soft-deprecated and will be removed in future versions.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\");\n    }\n\n    this.ignoredIssues = has(config, \"ignoredIssues\") ? config.ignoredIssues : DEFAULT_PARSER_CONFIG.ignoredIssues;\n    this.skipValidations = has(config, \"skipValidations\") ? config.skipValidations : DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n\n\n  Parser.performSelfAnalysis = function (parserInstance) {\n    ;\n    parserInstance.performSelfAnalysis();\n  };\n\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(_this);\n      });\n\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording(); // Building the GAST\n\n\n          forEach(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast = undefined;\n\n            _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n\n      var resolverErrors = [];\n\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = resolveGrammar({\n          rules: values(_this.gastProductionsCache)\n        });\n\n        _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\n\n      });\n\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = validateGrammar({\n            rules: values(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: values(_this.tokensMap),\n            ignoredIssues: _this.ignoredIssues,\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n\n          _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\n\n        }\n      }); // this analysis may fail if the grammar is not perfectly valid\n\n\n      if (isEmpty(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = computeAllProdsFollows(values(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions(values(_this.gastProductionsCache));\n        });\n      }\n\n      _this.TRACE_INIT(\"expandAllNestedRuleNames\", function () {\n        // TODO: is this needed for EmbeddedActionsParser?\n        var cstAnalysisResult = expandAllNestedRuleNames(values(_this.gastProductionsCache), _this.fullRuleNameToShort);\n        _this.allRuleNames = cstAnalysisResult.allRuleNames;\n      });\n\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !isEmpty(_this.definitionErrors)) {\n        defErrorsMsgs = map(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n      }\n    });\n  }; // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n\n\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\n\nexport { Parser };\napplyMixins(Parser, [Recoverable, LooksAhead, TreeBuilder, LexerAdapter, RecognizerEngine, RecognizerApi, ErrorHandler, ContentAssist, GastRecorder, PerformanceTracer]);\n\nvar CstParser = function (_super) {\n  __extends(CstParser, _super);\n\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n\n    var _this = this;\n\n    var configClone = cloneObj(config);\n    configClone.outputCst = true;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n\n  return CstParser;\n}(Parser);\n\nexport { CstParser };\n\nvar EmbeddedActionsParser = function (_super) {\n  __extends(EmbeddedActionsParser, _super);\n\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n\n    var _this = this;\n\n    var configClone = cloneObj(config);\n    configClone.outputCst = false;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n\n  return EmbeddedActionsParser;\n}(Parser);\n\nexport { EmbeddedActionsParser };","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/parse/parser/parser.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","applyMixins","cloneObj","forEach","has","isEmpty","map","PRINT_WARNING","toFastProperties","values","computeAllProdsFollows","createTokenInstance","EOF","expandAllNestedRuleNames","defaultGrammarValidatorErrorProvider","defaultParserErrorProvider","resolveGrammar","validateGrammar","Recoverable","LooksAhead","TreeBuilder","LexerAdapter","RecognizerApi","RecognizerEngine","ErrorHandler","ContentAssist","GastRecorder","PerformanceTracer","END_OF_FILE","NaN","freeze","DEFAULT_PARSER_CONFIG","recoveryEnabled","maxLookahead","ignoredIssues","dynamicTokensEnabled","outputCst","errorMessageProvider","nodeLocationTracking","traceInitPerf","skipValidations","DEFAULT_RULE_CONFIG","recoveryValueFunc","undefined","resyncEnabled","ParserDefinitionErrorType","EMPTY_ALT","value","Parser","tokenVocabulary","config","definitionErrors","selfAnalysisDone","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","performSelfAnalysis","parserInstance","_this","TRACE_INIT","defErrorsMsgs","className","enableRecording","definedRulesNames","currRuleName","wrappedRule","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","rules","push","apply","validationErrors","tokenTypes","tokensMap","errMsgProvider","grammarName","allFollows","resyncFollows","preComputeLookaheadFunctions","cstAnalysisResult","fullRuleNameToShort","allRuleNames","DEFER_DEFINITION_ERRORS_HANDLING","defError","message","Error","join","CstParser","_super","configClone","call","EmbeddedActionsParser"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { applyMixins, cloneObj, forEach, has, isEmpty, map, PRINT_WARNING, toFastProperties, values } from \"../../utils/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\";\nimport { expandAllNestedRuleNames } from \"../cst/cst\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider } from \"../errors_public\";\nimport { resolveGrammar, validateGrammar } from \"../grammar/gast/gast_resolver_public\";\nimport { Recoverable } from \"./traits/recoverable\";\nimport { LooksAhead } from \"./traits/looksahead\";\nimport { TreeBuilder } from \"./traits/tree_builder\";\nimport { LexerAdapter } from \"./traits/lexer_adapter\";\nimport { RecognizerApi } from \"./traits/recognizer_api\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine\";\nimport { ErrorHandler } from \"./traits/error_handler\";\nimport { ContentAssist } from \"./traits/context_assist\";\nimport { GastRecorder } from \"./traits/gast_recorder\";\nimport { PerformanceTracer } from \"./traits/perf_tracer\";\nexport var END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport var DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 4,\n    ignoredIssues: {},\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false\n});\nexport var DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: function () { return undefined; },\n    resyncEnabled: true\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_NESTED_RULE_NAME\"] = 10] = \"INVALID_NESTED_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_NESTED_NAME\"] = 11] = \"DUPLICATE_NESTED_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 12] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 13] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 14] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value) {\n    if (value === void 0) { value = undefined; }\n    return function () {\n        return value;\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(tokenVocabulary, config) {\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\n        this.ignoredIssues = DEFAULT_PARSER_CONFIG.ignoredIssues;\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        var that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        /* istanbul ignore if - complete over-kill to test this, we should only add a test when we actually hard deprecate it and throw an error... */\n        if (has(config, \"ignoredIssues\") &&\n            config.ignoredIssues !== DEFAULT_PARSER_CONFIG.ignoredIssues) {\n            PRINT_WARNING(\"The <ignoredIssues> IParserConfig property is soft-deprecated and will be removed in future versions.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\");\n        }\n        this.ignoredIssues = has(config, \"ignoredIssues\")\n            ? config.ignoredIssues\n            : DEFAULT_PARSER_CONFIG.ignoredIssues;\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    Parser.performSelfAnalysis = function (parserInstance) {\n        ;\n        parserInstance.performSelfAnalysis();\n    };\n    Parser.prototype.performSelfAnalysis = function () {\n        var _this = this;\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\n            var defErrorsMsgs;\n            _this.selfAnalysisDone = true;\n            var className = _this.className;\n            _this.TRACE_INIT(\"toFastProps\", function () {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(_this);\n            });\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\n                try {\n                    _this.enableRecording();\n                    // Building the GAST\n                    forEach(_this.definedRulesNames, function (currRuleName) {\n                        var wrappedRule = _this[currRuleName];\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        var recordedRuleGast = undefined;\n                        _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    _this.disableRecording();\n                }\n            });\n            var resolverErrors = [];\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\n                resolverErrors = resolveGrammar({\n                    rules: values(_this.gastProductionsCache)\n                });\n                _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\n            });\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && _this.skipValidations === false) {\n                    var validationErrors = validateGrammar({\n                        rules: values(_this.gastProductionsCache),\n                        maxLookahead: _this.maxLookahead,\n                        tokenTypes: values(_this.tokensMap),\n                        ignoredIssues: _this.ignoredIssues,\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className\n                    });\n                    _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(_this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (_this.recoveryEnabled) {\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n                        var allFollows = computeAllProdsFollows(values(_this.gastProductionsCache));\n                        _this.resyncFollows = allFollows;\n                    });\n                }\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n                    _this.preComputeLookaheadFunctions(values(_this.gastProductionsCache));\n                });\n            }\n            _this.TRACE_INIT(\"expandAllNestedRuleNames\", function () {\n                // TODO: is this needed for EmbeddedActionsParser?\n                var cstAnalysisResult = expandAllNestedRuleNames(values(_this.gastProductionsCache), _this.fullRuleNameToShort);\n                _this.allRuleNames = cstAnalysisResult.allRuleNames;\n            });\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(_this.definitionErrors)) {\n                defErrorsMsgs = map(_this.definitionErrors, function (defError) { return defError.message; });\n                throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n            }\n        });\n    };\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n    // (normally during the parser's constructor).\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\n    // needing to display the parser definition errors in some GUI(online playground).\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n    return Parser;\n}());\nexport { Parser };\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer\n]);\nvar CstParser = /** @class */ (function (_super) {\n    __extends(CstParser, _super);\n    function CstParser(tokenVocabulary, config) {\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = cloneObj(config);\n        configClone.outputCst = true;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return CstParser;\n}(Parser));\nexport { CstParser };\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\n    __extends(EmbeddedActionsParser, _super);\n    function EmbeddedActionsParser(tokenVocabulary, config) {\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = cloneObj(config);\n        configClone.outputCst = false;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return EmbeddedActionsParser;\n}(Parser));\nexport { EmbeddedActionsParser };\n//# sourceMappingURL=parser.js.map"]},"metadata":{},"sourceType":"module"}