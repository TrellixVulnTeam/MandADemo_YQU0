{"ast":null,"code":"import { genUmdModule, genWrapperFunction } from \"./generate\";\nexport function generateParserFactory(options) {\n  var wrapperText = genWrapperFunction({\n    name: options.name,\n    rules: options.rules\n  });\n  var constructorWrapper = new Function(\"tokenVocabulary\", \"config\", \"chevrotain\", wrapperText);\n  return function (config) {\n    return constructorWrapper(options.tokenVocabulary, config, // TODO: check how the require is transpiled/webpacked\n    require(\"../api\"));\n  };\n}\nexport function generateParserModule(options) {\n  return genUmdModule({\n    name: options.name,\n    rules: options.rules\n  });\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/generate/generate_public.js"],"names":["genUmdModule","genWrapperFunction","generateParserFactory","options","wrapperText","name","rules","constructorWrapper","Function","config","tokenVocabulary","require","generateParserModule"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,QAAiD,YAAjD;AACA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AAC3C,MAAIC,WAAW,GAAGH,kBAAkB,CAAC;AACjCI,IAAAA,IAAI,EAAEF,OAAO,CAACE,IADmB;AAEjCC,IAAAA,KAAK,EAAEH,OAAO,CAACG;AAFkB,GAAD,CAApC;AAIA,MAAIC,kBAAkB,GAAG,IAAIC,QAAJ,CAAa,iBAAb,EAAgC,QAAhC,EAA0C,YAA1C,EAAwDJ,WAAxD,CAAzB;AACA,SAAO,UAAUK,MAAV,EAAkB;AACrB,WAAOF,kBAAkB,CAACJ,OAAO,CAACO,eAAT,EAA0BD,MAA1B,EACzB;AACAE,IAAAA,OAAO,CAAC,QAAD,CAFkB,CAAzB;AAGH,GAJD;AAKH;AACD,OAAO,SAASC,oBAAT,CAA8BT,OAA9B,EAAuC;AAC1C,SAAOH,YAAY,CAAC;AAAEK,IAAAA,IAAI,EAAEF,OAAO,CAACE,IAAhB;AAAsBC,IAAAA,KAAK,EAAEH,OAAO,CAACG;AAArC,GAAD,CAAnB;AACH","sourcesContent":["import { genUmdModule, genWrapperFunction } from \"./generate\";\nexport function generateParserFactory(options) {\n    var wrapperText = genWrapperFunction({\n        name: options.name,\n        rules: options.rules\n    });\n    var constructorWrapper = new Function(\"tokenVocabulary\", \"config\", \"chevrotain\", wrapperText);\n    return function (config) {\n        return constructorWrapper(options.tokenVocabulary, config, \n        // TODO: check how the require is transpiled/webpacked\n        require(\"../api\"));\n    };\n}\nexport function generateParserModule(options) {\n    return genUmdModule({ name: options.name, rules: options.rules });\n}\n//# sourceMappingURL=generate_public.js.map"]},"metadata":{},"sourceType":"module"}