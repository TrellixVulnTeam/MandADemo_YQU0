{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AstNodeType, collectDependencies } from './';\n\nvar buildCacheEntry = function buildCacheEntry(ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) {\n  return {\n    ast: ast,\n    relativeDependencies: relativeDependencies,\n    hasVolatileFunction: hasVolatileFunction,\n    hasStructuralChangeFunction: hasStructuralChangeFunction\n  };\n};\n\nexport var Cache = /*#__PURE__*/function () {\n  function Cache(functionRegistry) {\n    _classCallCheck(this, Cache);\n\n    this.functionRegistry = functionRegistry;\n    this.cache = new Map();\n  }\n\n  _createClass(Cache, [{\n    key: \"set\",\n    value: function set(hash, ast) {\n      var astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\n      var cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\n      this.cache.set(hash, cacheEntry);\n      return cacheEntry;\n    }\n  }, {\n    key: \"get\",\n    value: function get(hash) {\n      return this.cache.get(hash) || null;\n    }\n  }, {\n    key: \"maybeSetAndThenGet\",\n    value: function maybeSetAndThenGet(hash, ast) {\n      var entryFromCache = this.cache.get(hash);\n\n      if (entryFromCache) {\n        return entryFromCache.ast;\n      } else {\n        this.set(hash, ast);\n        return ast;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.cache.clear();\n    }\n  }]);\n\n  return Cache;\n}();\nexport var doesContainFunctions = function doesContainFunctions(ast, functionCriterion) {\n  switch (ast.type) {\n    case AstNodeType.EMPTY:\n    case AstNodeType.NUMBER:\n    case AstNodeType.STRING:\n    case AstNodeType.ERROR:\n    case AstNodeType.ERROR_WITH_RAW_INPUT:\n    case AstNodeType.CELL_REFERENCE:\n    case AstNodeType.CELL_RANGE:\n    case AstNodeType.COLUMN_RANGE:\n    case AstNodeType.ROW_RANGE:\n    case AstNodeType.NAMED_EXPRESSION:\n      return false;\n\n    case AstNodeType.PERCENT_OP:\n    case AstNodeType.PLUS_UNARY_OP:\n    case AstNodeType.MINUS_UNARY_OP:\n      {\n        return doesContainFunctions(ast.value, functionCriterion);\n      }\n\n    case AstNodeType.CONCATENATE_OP:\n    case AstNodeType.EQUALS_OP:\n    case AstNodeType.NOT_EQUAL_OP:\n    case AstNodeType.LESS_THAN_OP:\n    case AstNodeType.GREATER_THAN_OP:\n    case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n    case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n    case AstNodeType.MINUS_OP:\n    case AstNodeType.PLUS_OP:\n    case AstNodeType.TIMES_OP:\n    case AstNodeType.DIV_OP:\n    case AstNodeType.POWER_OP:\n      return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\n\n    case AstNodeType.PARENTHESIS:\n      return doesContainFunctions(ast.expression, functionCriterion);\n\n    case AstNodeType.FUNCTION_CALL:\n      {\n        if (functionCriterion(ast.procedureName)) {\n          return true;\n        }\n\n        return ast.args.some(function (arg) {\n          return doesContainFunctions(arg, functionCriterion);\n        });\n      }\n  }\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/parser/Cache.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","AstNodeType","collectDependencies","buildCacheEntry","ast","relativeDependencies","hasVolatileFunction","hasStructuralChangeFunction","Cache","functionRegistry","cache","Map","value","set","hash","astRelativeDependencies","cacheEntry","doesContainFunctions","isFunctionVolatile","isFunctionDependentOnSheetStructureChange","get","maybeSetAndThenGet","entryFromCache","destroy","clear","functionCriterion","type","EMPTY","NUMBER","STRING","ERROR","ERROR_WITH_RAW_INPUT","CELL_REFERENCE","CELL_RANGE","COLUMN_RANGE","ROW_RANGE","NAMED_EXPRESSION","PERCENT_OP","PLUS_UNARY_OP","MINUS_UNARY_OP","CONCATENATE_OP","EQUALS_OP","NOT_EQUAL_OP","LESS_THAN_OP","GREATER_THAN_OP","LESS_THAN_OR_EQUAL_OP","GREATER_THAN_OR_EQUAL_OP","MINUS_OP","PLUS_OP","TIMES_OP","DIV_OP","POWER_OP","left","right","PARENTHESIS","expression","FUNCTION_CALL","procedureName","args","some","arg"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AstNodeType, collectDependencies } from './';\n\nvar buildCacheEntry = function buildCacheEntry(ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) {\n  return {\n    ast: ast,\n    relativeDependencies: relativeDependencies,\n    hasVolatileFunction: hasVolatileFunction,\n    hasStructuralChangeFunction: hasStructuralChangeFunction\n  };\n};\n\nexport var Cache = /*#__PURE__*/function () {\n  function Cache(functionRegistry) {\n    _classCallCheck(this, Cache);\n\n    this.functionRegistry = functionRegistry;\n    this.cache = new Map();\n  }\n\n  _createClass(Cache, [{\n    key: \"set\",\n    value: function set(hash, ast) {\n      var astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\n      var cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\n      this.cache.set(hash, cacheEntry);\n      return cacheEntry;\n    }\n  }, {\n    key: \"get\",\n    value: function get(hash) {\n      return this.cache.get(hash) || null;\n    }\n  }, {\n    key: \"maybeSetAndThenGet\",\n    value: function maybeSetAndThenGet(hash, ast) {\n      var entryFromCache = this.cache.get(hash);\n\n      if (entryFromCache) {\n        return entryFromCache.ast;\n      } else {\n        this.set(hash, ast);\n        return ast;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.cache.clear();\n    }\n  }]);\n\n  return Cache;\n}();\nexport var doesContainFunctions = function doesContainFunctions(ast, functionCriterion) {\n  switch (ast.type) {\n    case AstNodeType.EMPTY:\n    case AstNodeType.NUMBER:\n    case AstNodeType.STRING:\n    case AstNodeType.ERROR:\n    case AstNodeType.ERROR_WITH_RAW_INPUT:\n    case AstNodeType.CELL_REFERENCE:\n    case AstNodeType.CELL_RANGE:\n    case AstNodeType.COLUMN_RANGE:\n    case AstNodeType.ROW_RANGE:\n    case AstNodeType.NAMED_EXPRESSION:\n      return false;\n\n    case AstNodeType.PERCENT_OP:\n    case AstNodeType.PLUS_UNARY_OP:\n    case AstNodeType.MINUS_UNARY_OP:\n      {\n        return doesContainFunctions(ast.value, functionCriterion);\n      }\n\n    case AstNodeType.CONCATENATE_OP:\n    case AstNodeType.EQUALS_OP:\n    case AstNodeType.NOT_EQUAL_OP:\n    case AstNodeType.LESS_THAN_OP:\n    case AstNodeType.GREATER_THAN_OP:\n    case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n    case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n    case AstNodeType.MINUS_OP:\n    case AstNodeType.PLUS_OP:\n    case AstNodeType.TIMES_OP:\n    case AstNodeType.DIV_OP:\n    case AstNodeType.POWER_OP:\n      return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\n\n    case AstNodeType.PARENTHESIS:\n      return doesContainFunctions(ast.expression, functionCriterion);\n\n    case AstNodeType.FUNCTION_CALL:\n      {\n        if (functionCriterion(ast.procedureName)) {\n          return true;\n        }\n\n        return ast.args.some(function (arg) {\n          return doesContainFunctions(arg, functionCriterion);\n        });\n      }\n  }\n};"]},"metadata":{},"sourceType":"module"}