{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { StatType } from './statistics';\nimport { CombinedTransformer } from './dependencyTransformers/CombinedTransformer';\nexport var LazilyTransformingAstService = /*#__PURE__*/function () {\n  function LazilyTransformingAstService(stats) {\n    _classCallCheck(this, LazilyTransformingAstService);\n\n    this.stats = stats;\n    this.transformations = [];\n  }\n\n  _createClass(LazilyTransformingAstService, [{\n    key: \"version\",\n    value: function version() {\n      return this.transformations.length;\n    }\n  }, {\n    key: \"addTransformation\",\n    value: function addTransformation(transformation) {\n      if (this.combinedTransformer !== undefined) {\n        this.combinedTransformer.add(transformation);\n      } else {\n        this.transformations.push(transformation);\n      }\n\n      return this.version();\n    }\n  }, {\n    key: \"beginCombinedMode\",\n    value: function beginCombinedMode(sheet) {\n      this.combinedTransformer = new CombinedTransformer(sheet);\n    }\n  }, {\n    key: \"commitCombinedMode\",\n    value: function commitCombinedMode() {\n      if (this.combinedTransformer === undefined) {\n        throw 'Combined mode wasn\\'t started';\n      }\n\n      this.transformations.push(this.combinedTransformer);\n      this.combinedTransformer = undefined;\n      return this.version();\n    }\n  }, {\n    key: \"applyTransformations\",\n    value: function applyTransformations(ast, address, version) {\n      this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\n\n      for (var v = version; v < this.transformations.length; v++) {\n        var transformation = this.transformations[v];\n\n        if (transformation.isIrreversible()) {\n          this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\n          this.parser.rememberNewAst(ast);\n        }\n\n        var _transformation$trans = transformation.transformSingleAst(ast, address),\n            _transformation$trans2 = _slicedToArray(_transformation$trans, 2),\n            newAst = _transformation$trans2[0],\n            newAddress = _transformation$trans2[1];\n\n        ast = newAst;\n        address = newAddress;\n      }\n\n      var cachedAst = this.parser.rememberNewAst(ast);\n      this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\n      return [cachedAst, address, this.transformations.length];\n    }\n  }, {\n    key: \"getTransformationsFrom\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function getTransformationsFrom(version, filter) {\n      var v, transformation;\n      return _regeneratorRuntime.wrap(function getTransformationsFrom$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              v = version;\n\n            case 1:\n              if (!(v < this.transformations.length)) {\n                _context.next = 9;\n                break;\n              }\n\n              transformation = this.transformations[v];\n\n              if (!(!filter || filter(transformation))) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return transformation;\n\n            case 6:\n              v++;\n              _context.next = 1;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getTransformationsFrom, this);\n    })\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.parser = undefined;\n      this.transformations = [];\n    }\n  }]);\n\n  return LazilyTransformingAstService;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/LazilyTransformingAstService.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","StatType","CombinedTransformer","LazilyTransformingAstService","stats","transformations","version","addTransformation","transformation","combinedTransformer","undefined","add","beginCombinedMode","sheet","commitCombinedMode","applyTransformations","ast","address","start","TRANSFORM_ASTS_POSTPONED","v","isIrreversible","undoRedo","storeDataForVersion","parser","computeHashFromAst","rememberNewAst","_transformation$trans","transformSingleAst","_transformation$trans2","newAst","newAddress","cachedAst","end","mark","getTransformationsFrom","filter","wrap","getTransformationsFrom$","_context","prev","stop","destroy"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { StatType } from './statistics';\nimport { CombinedTransformer } from './dependencyTransformers/CombinedTransformer';\nexport var LazilyTransformingAstService = /*#__PURE__*/function () {\n  function LazilyTransformingAstService(stats) {\n    _classCallCheck(this, LazilyTransformingAstService);\n\n    this.stats = stats;\n    this.transformations = [];\n  }\n\n  _createClass(LazilyTransformingAstService, [{\n    key: \"version\",\n    value: function version() {\n      return this.transformations.length;\n    }\n  }, {\n    key: \"addTransformation\",\n    value: function addTransformation(transformation) {\n      if (this.combinedTransformer !== undefined) {\n        this.combinedTransformer.add(transformation);\n      } else {\n        this.transformations.push(transformation);\n      }\n\n      return this.version();\n    }\n  }, {\n    key: \"beginCombinedMode\",\n    value: function beginCombinedMode(sheet) {\n      this.combinedTransformer = new CombinedTransformer(sheet);\n    }\n  }, {\n    key: \"commitCombinedMode\",\n    value: function commitCombinedMode() {\n      if (this.combinedTransformer === undefined) {\n        throw 'Combined mode wasn\\'t started';\n      }\n\n      this.transformations.push(this.combinedTransformer);\n      this.combinedTransformer = undefined;\n      return this.version();\n    }\n  }, {\n    key: \"applyTransformations\",\n    value: function applyTransformations(ast, address, version) {\n      this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\n\n      for (var v = version; v < this.transformations.length; v++) {\n        var transformation = this.transformations[v];\n\n        if (transformation.isIrreversible()) {\n          this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\n          this.parser.rememberNewAst(ast);\n        }\n\n        var _transformation$trans = transformation.transformSingleAst(ast, address),\n            _transformation$trans2 = _slicedToArray(_transformation$trans, 2),\n            newAst = _transformation$trans2[0],\n            newAddress = _transformation$trans2[1];\n\n        ast = newAst;\n        address = newAddress;\n      }\n\n      var cachedAst = this.parser.rememberNewAst(ast);\n      this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\n      return [cachedAst, address, this.transformations.length];\n    }\n  }, {\n    key: \"getTransformationsFrom\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function getTransformationsFrom(version, filter) {\n      var v, transformation;\n      return regeneratorRuntime.wrap(function getTransformationsFrom$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              v = version;\n\n            case 1:\n              if (!(v < this.transformations.length)) {\n                _context.next = 9;\n                break;\n              }\n\n              transformation = this.transformations[v];\n\n              if (!(!filter || filter(transformation))) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return transformation;\n\n            case 6:\n              v++;\n              _context.next = 1;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getTransformationsFrom, this);\n    })\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.parser = undefined;\n      this.transformations = [];\n    }\n  }]);\n\n  return LazilyTransformingAstService;\n}();"]},"metadata":{},"sourceType":"module"}