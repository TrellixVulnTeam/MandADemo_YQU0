{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, ErrorType } from './Cell';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\nimport { ContentChanges } from './ContentChanges';\nimport { FormulaCellVertex, MatrixVertex, RangeVertex } from './DependencyGraph';\nimport { ErrorMessage } from './error-message';\nimport { Interpreter } from './interpreter/Interpreter';\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\nimport { Matrix } from './Matrix';\nimport { StatType } from './statistics';\nexport var Evaluator = /*#__PURE__*/function () {\n  function Evaluator(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions, serialization) {\n    _classCallCheck(this, Evaluator);\n\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.config = config;\n    this.stats = stats;\n    this.dateHelper = dateHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n    this.functionRegistry = functionRegistry;\n    this.namedExpressions = namedExpressions;\n    this.serialization = serialization;\n    this.interpreter = new Interpreter(this.dependencyGraph, this.columnSearch, this.config, this.stats, this.dateHelper, this.numberLiteralsHelper, this.functionRegistry, this.namedExpressions, this.serialization);\n  }\n\n  _createClass(Evaluator, [{\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      this.stats.start(StatType.TOP_SORT);\n\n      var _this$dependencyGraph = this.dependencyGraph.topSortWithScc(),\n          sorted = _this$dependencyGraph.sorted,\n          cycled = _this$dependencyGraph.cycled;\n\n      this.stats.end(StatType.TOP_SORT);\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this.recomputeFormulas(cycled, sorted);\n      });\n    }\n  }, {\n    key: \"partialRun\",\n    value: function partialRun(vertices) {\n      var _this2 = this;\n\n      var changes = new ContentChanges();\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this2.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, function (vertex) {\n          if (vertex instanceof FormulaCellVertex) {\n            var address = vertex.getAddress(_this2.dependencyGraph.lazilyTransformingAstService);\n            var formula = vertex.getFormula(_this2.dependencyGraph.lazilyTransformingAstService);\n            var currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n\n            var newCellValue = _this2.evaluateAstToCellValue(formula, address);\n\n            vertex.setCellValue(newCellValue);\n\n            if (newCellValue !== currentValue) {\n              changes.addChange(newCellValue, address);\n\n              _this2.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\n\n              return true;\n            }\n\n            return false;\n          } else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n            var _address = vertex.getAddress();\n\n            var _formula = vertex.getFormula();\n\n            var _currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n\n            var _newCellValue = _this2.evaluateAstToRangeValue(_formula, _address);\n\n            if (_newCellValue instanceof SimpleRangeValue) {\n              var newCellMatrix = new Matrix(_newCellValue.rawNumbers());\n              vertex.setCellValue(newCellMatrix);\n              changes.addMatrixChange(newCellMatrix, _address);\n\n              _this2.columnSearch.change(_currentValue, newCellMatrix, _address);\n            } else {\n              vertex.setErrorValue(_newCellValue);\n              changes.addChange(_newCellValue, _address);\n\n              _this2.columnSearch.change(_currentValue, _newCellValue, _address);\n            }\n\n            return true;\n          } else if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n            return true;\n          } else {\n            return true;\n          }\n        }, function (vertex) {\n          if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n          } else if (vertex instanceof FormulaCellVertex) {\n            var address = vertex.getAddress(_this2.dependencyGraph.lazilyTransformingAstService);\n\n            _this2.columnSearch.remove(getRawValue(vertex.valueOrNull()), address);\n\n            var error = new CellError(ErrorType.CYCLE, undefined, vertex.address);\n            vertex.setCellValue(error);\n            changes.addChange(error, vertex.address);\n          }\n        });\n      });\n      return changes;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.interpreter.destroy();\n    }\n  }, {\n    key: \"runAndForget\",\n    value: function runAndForget(ast, address, dependencies) {\n      var _this3 = this;\n\n      var tmpRanges = [];\n\n      var _iterator = _createForOfIteratorHelper(absolutizeDependencies(dependencies, address)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n\n          if (dep instanceof AbsoluteCellRange) {\n            var range = dep;\n\n            if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\n              var rangeVertex = new RangeVertex(range);\n              this.dependencyGraph.rangeMapping.setRange(rangeVertex);\n              tmpRanges.push(rangeVertex);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var ret = this.evaluateAstToCellValue(ast, address);\n      tmpRanges.forEach(function (rangeVertex) {\n        _this3.dependencyGraph.rangeMapping.removeRange(rangeVertex);\n      });\n      return ret;\n    }\n    /**\n     * Recalculates formulas in the topological sort order\n     */\n\n  }, {\n    key: \"recomputeFormulas\",\n    value: function recomputeFormulas(cycled, sorted) {\n      var _this4 = this;\n\n      cycled.forEach(function (vertex) {\n        if (vertex instanceof FormulaCellVertex) {\n          vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex.address));\n        }\n      });\n      sorted.forEach(function (vertex) {\n        if (vertex instanceof FormulaCellVertex) {\n          var address = vertex.getAddress(_this4.dependencyGraph.lazilyTransformingAstService);\n          var formula = vertex.getFormula(_this4.dependencyGraph.lazilyTransformingAstService);\n\n          var newCellValue = _this4.evaluateAstToCellValue(formula, address);\n\n          vertex.setCellValue(newCellValue);\n\n          _this4.columnSearch.add(getRawValue(newCellValue), address);\n        } else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n          var _address2 = vertex.getAddress();\n\n          var _formula2 = vertex.getFormula();\n\n          var _newCellValue2 = _this4.evaluateAstToRangeValue(_formula2, _address2);\n\n          if (_newCellValue2 instanceof SimpleRangeValue) {\n            var newCellMatrix = new Matrix(_newCellValue2.rawNumbers());\n            vertex.setCellValue(newCellMatrix);\n\n            _this4.columnSearch.add(newCellMatrix, _address2);\n          } else {\n            vertex.setErrorValue(_newCellValue2);\n\n            _this4.columnSearch.add(_newCellValue2, _address2);\n          }\n        } else if (vertex instanceof RangeVertex) {\n          vertex.clearCache();\n        }\n      });\n    }\n  }, {\n    key: \"evaluateAstToCellValue\",\n    value: function evaluateAstToCellValue(ast, formulaAddress) {\n      var interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n\n      if (interpreterValue instanceof SimpleRangeValue) {\n        return interpreterValue;\n      } else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\n        return 0;\n      } else {\n        return interpreterValue;\n      }\n    }\n  }, {\n    key: \"evaluateAstToRangeValue\",\n    value: function evaluateAstToRangeValue(ast, formulaAddress) {\n      var interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n\n      if (interpreterValue instanceof CellError) {\n        return interpreterValue;\n      } else if (interpreterValue instanceof SimpleRangeValue && interpreterValue.hasOnlyNumbers()) {\n        return interpreterValue;\n      } else {\n        return new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\n      }\n    }\n  }]);\n\n  return Evaluator;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/Evaluator.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","absolutizeDependencies","CellError","ErrorType","SimpleRangeValue","ContentChanges","FormulaCellVertex","MatrixVertex","RangeVertex","ErrorMessage","Interpreter","EmptyValue","getRawValue","Matrix","StatType","Evaluator","dependencyGraph","columnSearch","config","stats","dateHelper","numberLiteralsHelper","functionRegistry","namedExpressions","serialization","interpreter","run","_this","start","TOP_SORT","_this$dependencyGraph","topSortWithScc","sorted","cycled","end","measure","EVALUATION","recomputeFormulas","partialRun","vertices","_this2","changes","graph","getTopSortedWithSccSubgraphFrom","vertex","address","getAddress","lazilyTransformingAstService","formula","getFormula","currentValue","isComputed","getCellValue","newCellValue","evaluateAstToCellValue","setCellValue","addChange","change","isFormula","_address","_formula","_currentValue","_newCellValue","evaluateAstToRangeValue","newCellMatrix","rawNumbers","addMatrixChange","setErrorValue","clearCache","remove","valueOrNull","error","CYCLE","undefined","destroy","runAndForget","ast","dependencies","_this3","tmpRanges","_iterator","_step","dep","range","getRange","rangeVertex","rangeMapping","setRange","push","ret","forEach","removeRange","_this4","add","_address2","_formula2","_newCellValue2","formulaAddress","interpreterValue","evaluateAst","evaluateNullToZero","hasOnlyNumbers","VALUE","CellRangeExpected"],"mappings":"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","sourcesContent":["import \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, ErrorType } from './Cell';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\nimport { ContentChanges } from './ContentChanges';\nimport { FormulaCellVertex, MatrixVertex, RangeVertex } from './DependencyGraph';\nimport { ErrorMessage } from './error-message';\nimport { Interpreter } from './interpreter/Interpreter';\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\nimport { Matrix } from './Matrix';\nimport { StatType } from './statistics';\nexport var Evaluator = /*#__PURE__*/function () {\n  function Evaluator(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions, serialization) {\n    _classCallCheck(this, Evaluator);\n\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.config = config;\n    this.stats = stats;\n    this.dateHelper = dateHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n    this.functionRegistry = functionRegistry;\n    this.namedExpressions = namedExpressions;\n    this.serialization = serialization;\n    this.interpreter = new Interpreter(this.dependencyGraph, this.columnSearch, this.config, this.stats, this.dateHelper, this.numberLiteralsHelper, this.functionRegistry, this.namedExpressions, this.serialization);\n  }\n\n  _createClass(Evaluator, [{\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      this.stats.start(StatType.TOP_SORT);\n\n      var _this$dependencyGraph = this.dependencyGraph.topSortWithScc(),\n          sorted = _this$dependencyGraph.sorted,\n          cycled = _this$dependencyGraph.cycled;\n\n      this.stats.end(StatType.TOP_SORT);\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this.recomputeFormulas(cycled, sorted);\n      });\n    }\n  }, {\n    key: \"partialRun\",\n    value: function partialRun(vertices) {\n      var _this2 = this;\n\n      var changes = new ContentChanges();\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this2.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, function (vertex) {\n          if (vertex instanceof FormulaCellVertex) {\n            var address = vertex.getAddress(_this2.dependencyGraph.lazilyTransformingAstService);\n            var formula = vertex.getFormula(_this2.dependencyGraph.lazilyTransformingAstService);\n            var currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n\n            var newCellValue = _this2.evaluateAstToCellValue(formula, address);\n\n            vertex.setCellValue(newCellValue);\n\n            if (newCellValue !== currentValue) {\n              changes.addChange(newCellValue, address);\n\n              _this2.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\n\n              return true;\n            }\n\n            return false;\n          } else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n            var _address = vertex.getAddress();\n\n            var _formula = vertex.getFormula();\n\n            var _currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n\n            var _newCellValue = _this2.evaluateAstToRangeValue(_formula, _address);\n\n            if (_newCellValue instanceof SimpleRangeValue) {\n              var newCellMatrix = new Matrix(_newCellValue.rawNumbers());\n              vertex.setCellValue(newCellMatrix);\n              changes.addMatrixChange(newCellMatrix, _address);\n\n              _this2.columnSearch.change(_currentValue, newCellMatrix, _address);\n            } else {\n              vertex.setErrorValue(_newCellValue);\n              changes.addChange(_newCellValue, _address);\n\n              _this2.columnSearch.change(_currentValue, _newCellValue, _address);\n            }\n\n            return true;\n          } else if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n            return true;\n          } else {\n            return true;\n          }\n        }, function (vertex) {\n          if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n          } else if (vertex instanceof FormulaCellVertex) {\n            var address = vertex.getAddress(_this2.dependencyGraph.lazilyTransformingAstService);\n\n            _this2.columnSearch.remove(getRawValue(vertex.valueOrNull()), address);\n\n            var error = new CellError(ErrorType.CYCLE, undefined, vertex.address);\n            vertex.setCellValue(error);\n            changes.addChange(error, vertex.address);\n          }\n        });\n      });\n      return changes;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.interpreter.destroy();\n    }\n  }, {\n    key: \"runAndForget\",\n    value: function runAndForget(ast, address, dependencies) {\n      var _this3 = this;\n\n      var tmpRanges = [];\n\n      var _iterator = _createForOfIteratorHelper(absolutizeDependencies(dependencies, address)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n\n          if (dep instanceof AbsoluteCellRange) {\n            var range = dep;\n\n            if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\n              var rangeVertex = new RangeVertex(range);\n              this.dependencyGraph.rangeMapping.setRange(rangeVertex);\n              tmpRanges.push(rangeVertex);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var ret = this.evaluateAstToCellValue(ast, address);\n      tmpRanges.forEach(function (rangeVertex) {\n        _this3.dependencyGraph.rangeMapping.removeRange(rangeVertex);\n      });\n      return ret;\n    }\n    /**\n     * Recalculates formulas in the topological sort order\n     */\n\n  }, {\n    key: \"recomputeFormulas\",\n    value: function recomputeFormulas(cycled, sorted) {\n      var _this4 = this;\n\n      cycled.forEach(function (vertex) {\n        if (vertex instanceof FormulaCellVertex) {\n          vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex.address));\n        }\n      });\n      sorted.forEach(function (vertex) {\n        if (vertex instanceof FormulaCellVertex) {\n          var address = vertex.getAddress(_this4.dependencyGraph.lazilyTransformingAstService);\n          var formula = vertex.getFormula(_this4.dependencyGraph.lazilyTransformingAstService);\n\n          var newCellValue = _this4.evaluateAstToCellValue(formula, address);\n\n          vertex.setCellValue(newCellValue);\n\n          _this4.columnSearch.add(getRawValue(newCellValue), address);\n        } else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n          var _address2 = vertex.getAddress();\n\n          var _formula2 = vertex.getFormula();\n\n          var _newCellValue2 = _this4.evaluateAstToRangeValue(_formula2, _address2);\n\n          if (_newCellValue2 instanceof SimpleRangeValue) {\n            var newCellMatrix = new Matrix(_newCellValue2.rawNumbers());\n            vertex.setCellValue(newCellMatrix);\n\n            _this4.columnSearch.add(newCellMatrix, _address2);\n          } else {\n            vertex.setErrorValue(_newCellValue2);\n\n            _this4.columnSearch.add(_newCellValue2, _address2);\n          }\n        } else if (vertex instanceof RangeVertex) {\n          vertex.clearCache();\n        }\n      });\n    }\n  }, {\n    key: \"evaluateAstToCellValue\",\n    value: function evaluateAstToCellValue(ast, formulaAddress) {\n      var interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n\n      if (interpreterValue instanceof SimpleRangeValue) {\n        return interpreterValue;\n      } else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\n        return 0;\n      } else {\n        return interpreterValue;\n      }\n    }\n  }, {\n    key: \"evaluateAstToRangeValue\",\n    value: function evaluateAstToRangeValue(ast, formulaAddress) {\n      var interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n\n      if (interpreterValue instanceof CellError) {\n        return interpreterValue;\n      } else if (interpreterValue instanceof SimpleRangeValue && interpreterValue.hasOnlyNumbers()) {\n        return interpreterValue;\n      } else {\n        return new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\n      }\n    }\n  }]);\n\n  return Evaluator;\n}();"]},"metadata":{},"sourceType":"module"}