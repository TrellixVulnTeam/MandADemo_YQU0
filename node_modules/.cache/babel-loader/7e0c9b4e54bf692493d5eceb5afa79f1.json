{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { MatrixVertex } from './DependencyGraph';\nimport { Matrix, MatrixSize } from './Matrix';\nexport var Array2d = /*#__PURE__*/function () {\n  function Array2d(size) {\n    _classCallCheck(this, Array2d);\n\n    this._size = size;\n    this.array = new Array(size.height);\n\n    for (var y = 0; y < size.height; ++y) {\n      this.array[y] = new Array(size.width);\n    }\n  }\n\n  _createClass(Array2d, [{\n    key: \"set\",\n    value: function set(x, y, value) {\n      this.array[y][x] = value;\n    }\n  }, {\n    key: \"get\",\n    value: function get(x, y) {\n      var row = this.array[y];\n\n      if (!row) {\n        return null;\n      }\n\n      return row[x] || null;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._size;\n    }\n  }], [{\n    key: \"fromArray\",\n    value: function fromArray(input) {\n      var size = new MatrixSize(input[0].length, input.length);\n      var array = new Array2d(size);\n\n      for (var i = 0; i < size.height; ++i) {\n        for (var j = 0; j < size.width; ++j) {\n          array.set(j, i, input[i][j]);\n        }\n      }\n\n      return array;\n    }\n  }]);\n\n  return Array2d;\n}();\nexport var GraphBuilderMatrixHeuristic = /*#__PURE__*/function () {\n  function GraphBuilderMatrixHeuristic(dependencyGraph, columnSearch, threshold, cellContentParser) {\n    _classCallCheck(this, GraphBuilderMatrixHeuristic);\n\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.threshold = threshold;\n    this.cellContentParser = cellContentParser;\n    this.mapping = new Map();\n  }\n\n  _createClass(GraphBuilderMatrixHeuristic, [{\n    key: \"addSheet\",\n    value: function addSheet(id, size) {\n      this.mapping.set(id, new Array2d(size));\n    }\n  }, {\n    key: \"add\",\n    value: function add(cellAddress) {\n      if (!this.mapping.has(cellAddress.sheet)) {\n        throw Error(\"Sheet with id: \".concat(cellAddress.sheet, \" does not exists\"));\n      } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n      this.mapping.get(cellAddress.sheet).set(cellAddress.col, cellAddress.row, true);\n    }\n  }, {\n    key: \"run\",\n    value: function run(sheets) {\n      var _this = this;\n\n      var notMatrices = [];\n      var scanResult = this.findMatrices();\n      scanResult.forEach(function (elem) {\n        if (!elem.isMatrix || elem.range.size() < _this.threshold) {\n          notMatrices.push(elem);\n          return;\n        }\n\n        var possibleMatrix = elem.range;\n        var matrixVertex = MatrixVertex.fromRange(possibleMatrix);\n\n        var sheet = sheets[_this.dependencyGraph.getSheetName(possibleMatrix.start.sheet)];\n\n        var matrix = _this.matrixFromPlainValues(possibleMatrix, sheet);\n\n        matrixVertex.setCellValue(matrix);\n\n        _this.dependencyGraph.addMatrixVertex(matrixVertex.getAddress(), matrixVertex);\n\n        _this.columnSearch.add(matrix, matrixVertex.getAddress());\n      });\n      this.mapping.clear();\n      return notMatrices;\n    }\n  }, {\n    key: \"matrixFromPlainValues\",\n    value: function matrixFromPlainValues(range, sheet) {\n      var values = new Array(range.height());\n\n      for (var i = 0; i < range.height(); ++i) {\n        values[i] = new Array(range.width());\n      }\n\n      var _iterator = _createForOfIteratorHelper(range.addresses(this.dependencyGraph)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var address = _step.value;\n          var cellContent = sheet[address.row][address.col];\n          var parsedCellContent = this.cellContentParser.parse(cellContent);\n\n          if (parsedCellContent instanceof CellContent.Number) {\n            values[address.row - range.start.row][address.col - range.start.col] = parsedCellContent.value;\n          } else {\n            throw new Error('Range contains not numeric values');\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return new Matrix(values);\n    }\n  }, {\n    key: \"findMatrices\",\n    value: function findMatrices() {\n      var result = [];\n      this.mapping.forEach(function (m, sheet) {\n        var _iterator2 = _createForOfIteratorHelper(_findMatrices(sheet, m)),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _possibleMatrix = _step2.value;\n            result.push(_possibleMatrix);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return GraphBuilderMatrixHeuristic;\n}();\n\nfunction _findMatrices(sheet, input) {\n  var size = input.size();\n  var result = new Map();\n  var colours = new Array2d(size);\n  var colour = 0;\n\n  for (var y = size.height - 1; y >= 0; --y) {\n    for (var x = size.width - 1; x >= 0; --x) {\n      var value = input.get(x, y); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      var _ref = [input.get(x + 1, y), colours.get(x + 1, y)],\n          right = _ref[0],\n          rightColour = _ref[1]; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      var _ref2 = [input.get(x, y + 1), colours.get(x, y + 1)],\n          bottom = _ref2[0],\n          bottomColour = _ref2[1]; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      var _ref3 = [input.get(x + 1, y + 1), colours.get(x + 1, y + 1)],\n          diag = _ref3[0],\n          diagColour = _ref3[1];\n\n      if (!value) {\n        colours.set(x, y, 0);\n\n        if (rightColour === bottomColour) {\n          // 0 1\n          // 1 *\n          if (result.has(rightColour)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            result.get(rightColour).isMatrix = false;\n          }\n        }\n      } else if (value !== right && rightColour === bottomColour) {\n        // 1 2\n        // 2 *\n        colours.set(x, y, ++colour);\n        result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n\n        if (result.has(rightColour)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          result.get(rightColour).isMatrix = false;\n        }\n      } else if (value !== diag) {\n        if (right === value && right === bottom) {\n          // 1 1\n          // 1 0\n          if (result.has(rightColour)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            result.get(rightColour).isMatrix = false;\n          }\n\n          if (result.has(bottomColour)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            result.get(bottomColour).isMatrix = false;\n          }\n\n          colours.set(x, y, ++colour);\n          result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n        } else if (right !== value && bottom === value) {\n          // 1 0\n          // 1 0\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          if (result.has(bottomColour) && result.get(bottomColour).isMatrix) {\n            colours.set(x, y, bottomColour); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n            var old = result.get(bottomColour);\n            old.cells.push(simpleCellAddress(sheet, x, y));\n            result.set(bottomColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n          } else {\n            colours.set(x, y, ++colour);\n            result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n          }\n        } else if (right === value && bottom !== value) {\n          // 1 1\n          // 0 0\n          colours.set(x, y, rightColour); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          var _old = result.get(rightColour);\n\n          _old.cells.push(simpleCellAddress(sheet, x, y));\n\n          result.set(rightColour, possibleMatrix(_old.range.withStart(simpleCellAddress(sheet, x, y)), true, _old.cells));\n        } else {\n          colours.set(x, y, ++colour);\n          result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n        }\n      } else if (value === diag && diagColour === rightColour && diagColour === bottomColour) {\n        // 1 1\n        // 1 1\n        colours.set(x, y, rightColour); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        var _old2 = result.get(rightColour);\n\n        _old2.cells.push(simpleCellAddress(sheet, x, y));\n\n        result.set(rightColour, possibleMatrix(_old2.range.withStart(simpleCellAddress(sheet, x, y)), true, _old2.cells));\n      } else if (value === diag) {\n        colours.set(x, y, ++colour);\n        result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n      }\n    }\n  }\n\n  return result.values();\n}\n\nexport { _findMatrices as findMatrices };\n\nfunction possibleMatrix(range, isMatrix, cells) {\n  return {\n    isMatrix: isMatrix,\n    range: range,\n    cells: cells\n  };\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/GraphBuilderMatrixHeuristic.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","simpleCellAddress","CellContent","MatrixVertex","Matrix","MatrixSize","Array2d","size","_size","array","height","y","width","set","x","get","row","fromArray","input","j","GraphBuilderMatrixHeuristic","dependencyGraph","columnSearch","threshold","cellContentParser","mapping","Map","addSheet","id","add","cellAddress","has","sheet","Error","concat","col","run","sheets","_this","notMatrices","scanResult","findMatrices","forEach","elem","isMatrix","range","push","possibleMatrix","matrixVertex","fromRange","getSheetName","start","matrix","matrixFromPlainValues","setCellValue","addMatrixVertex","getAddress","clear","values","_iterator","addresses","_step","address","cellContent","parsedCellContent","parse","Number","result","m","_iterator2","_findMatrices","_step2","_possibleMatrix","colours","colour","_ref","right","rightColour","_ref2","bottom","bottomColour","_ref3","diag","diagColour","fromCoordinates","old","cells","withStart","_old","_old2"],"mappings":"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","sourcesContent":["function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { MatrixVertex } from './DependencyGraph';\nimport { Matrix, MatrixSize } from './Matrix';\nexport var Array2d = /*#__PURE__*/function () {\n  function Array2d(size) {\n    _classCallCheck(this, Array2d);\n\n    this._size = size;\n    this.array = new Array(size.height);\n\n    for (var y = 0; y < size.height; ++y) {\n      this.array[y] = new Array(size.width);\n    }\n  }\n\n  _createClass(Array2d, [{\n    key: \"set\",\n    value: function set(x, y, value) {\n      this.array[y][x] = value;\n    }\n  }, {\n    key: \"get\",\n    value: function get(x, y) {\n      var row = this.array[y];\n\n      if (!row) {\n        return null;\n      }\n\n      return row[x] || null;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._size;\n    }\n  }], [{\n    key: \"fromArray\",\n    value: function fromArray(input) {\n      var size = new MatrixSize(input[0].length, input.length);\n      var array = new Array2d(size);\n\n      for (var i = 0; i < size.height; ++i) {\n        for (var j = 0; j < size.width; ++j) {\n          array.set(j, i, input[i][j]);\n        }\n      }\n\n      return array;\n    }\n  }]);\n\n  return Array2d;\n}();\nexport var GraphBuilderMatrixHeuristic = /*#__PURE__*/function () {\n  function GraphBuilderMatrixHeuristic(dependencyGraph, columnSearch, threshold, cellContentParser) {\n    _classCallCheck(this, GraphBuilderMatrixHeuristic);\n\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.threshold = threshold;\n    this.cellContentParser = cellContentParser;\n    this.mapping = new Map();\n  }\n\n  _createClass(GraphBuilderMatrixHeuristic, [{\n    key: \"addSheet\",\n    value: function addSheet(id, size) {\n      this.mapping.set(id, new Array2d(size));\n    }\n  }, {\n    key: \"add\",\n    value: function add(cellAddress) {\n      if (!this.mapping.has(cellAddress.sheet)) {\n        throw Error(\"Sheet with id: \".concat(cellAddress.sheet, \" does not exists\"));\n      } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n      this.mapping.get(cellAddress.sheet).set(cellAddress.col, cellAddress.row, true);\n    }\n  }, {\n    key: \"run\",\n    value: function run(sheets) {\n      var _this = this;\n\n      var notMatrices = [];\n      var scanResult = this.findMatrices();\n      scanResult.forEach(function (elem) {\n        if (!elem.isMatrix || elem.range.size() < _this.threshold) {\n          notMatrices.push(elem);\n          return;\n        }\n\n        var possibleMatrix = elem.range;\n        var matrixVertex = MatrixVertex.fromRange(possibleMatrix);\n\n        var sheet = sheets[_this.dependencyGraph.getSheetName(possibleMatrix.start.sheet)];\n\n        var matrix = _this.matrixFromPlainValues(possibleMatrix, sheet);\n\n        matrixVertex.setCellValue(matrix);\n\n        _this.dependencyGraph.addMatrixVertex(matrixVertex.getAddress(), matrixVertex);\n\n        _this.columnSearch.add(matrix, matrixVertex.getAddress());\n      });\n      this.mapping.clear();\n      return notMatrices;\n    }\n  }, {\n    key: \"matrixFromPlainValues\",\n    value: function matrixFromPlainValues(range, sheet) {\n      var values = new Array(range.height());\n\n      for (var i = 0; i < range.height(); ++i) {\n        values[i] = new Array(range.width());\n      }\n\n      var _iterator = _createForOfIteratorHelper(range.addresses(this.dependencyGraph)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var address = _step.value;\n          var cellContent = sheet[address.row][address.col];\n          var parsedCellContent = this.cellContentParser.parse(cellContent);\n\n          if (parsedCellContent instanceof CellContent.Number) {\n            values[address.row - range.start.row][address.col - range.start.col] = parsedCellContent.value;\n          } else {\n            throw new Error('Range contains not numeric values');\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return new Matrix(values);\n    }\n  }, {\n    key: \"findMatrices\",\n    value: function findMatrices() {\n      var result = [];\n      this.mapping.forEach(function (m, sheet) {\n        var _iterator2 = _createForOfIteratorHelper(_findMatrices(sheet, m)),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _possibleMatrix = _step2.value;\n            result.push(_possibleMatrix);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return GraphBuilderMatrixHeuristic;\n}();\n\nfunction _findMatrices(sheet, input) {\n  var size = input.size();\n  var result = new Map();\n  var colours = new Array2d(size);\n  var colour = 0;\n\n  for (var y = size.height - 1; y >= 0; --y) {\n    for (var x = size.width - 1; x >= 0; --x) {\n      var value = input.get(x, y); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      var _ref = [input.get(x + 1, y), colours.get(x + 1, y)],\n          right = _ref[0],\n          rightColour = _ref[1]; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      var _ref2 = [input.get(x, y + 1), colours.get(x, y + 1)],\n          bottom = _ref2[0],\n          bottomColour = _ref2[1]; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      var _ref3 = [input.get(x + 1, y + 1), colours.get(x + 1, y + 1)],\n          diag = _ref3[0],\n          diagColour = _ref3[1];\n\n      if (!value) {\n        colours.set(x, y, 0);\n\n        if (rightColour === bottomColour) {\n          // 0 1\n          // 1 *\n          if (result.has(rightColour)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            result.get(rightColour).isMatrix = false;\n          }\n        }\n      } else if (value !== right && rightColour === bottomColour) {\n        // 1 2\n        // 2 *\n        colours.set(x, y, ++colour);\n        result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n\n        if (result.has(rightColour)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          result.get(rightColour).isMatrix = false;\n        }\n      } else if (value !== diag) {\n        if (right === value && right === bottom) {\n          // 1 1\n          // 1 0\n          if (result.has(rightColour)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            result.get(rightColour).isMatrix = false;\n          }\n\n          if (result.has(bottomColour)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            result.get(bottomColour).isMatrix = false;\n          }\n\n          colours.set(x, y, ++colour);\n          result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n        } else if (right !== value && bottom === value) {\n          // 1 0\n          // 1 0\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          if (result.has(bottomColour) && result.get(bottomColour).isMatrix) {\n            colours.set(x, y, bottomColour); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n            var old = result.get(bottomColour);\n            old.cells.push(simpleCellAddress(sheet, x, y));\n            result.set(bottomColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n          } else {\n            colours.set(x, y, ++colour);\n            result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n          }\n        } else if (right === value && bottom !== value) {\n          // 1 1\n          // 0 0\n          colours.set(x, y, rightColour); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          var _old = result.get(rightColour);\n\n          _old.cells.push(simpleCellAddress(sheet, x, y));\n\n          result.set(rightColour, possibleMatrix(_old.range.withStart(simpleCellAddress(sheet, x, y)), true, _old.cells));\n        } else {\n          colours.set(x, y, ++colour);\n          result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n        }\n      } else if (value === diag && diagColour === rightColour && diagColour === bottomColour) {\n        // 1 1\n        // 1 1\n        colours.set(x, y, rightColour); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        var _old2 = result.get(rightColour);\n\n        _old2.cells.push(simpleCellAddress(sheet, x, y));\n\n        result.set(rightColour, possibleMatrix(_old2.range.withStart(simpleCellAddress(sheet, x, y)), true, _old2.cells));\n      } else if (value === diag) {\n        colours.set(x, y, ++colour);\n        result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n      }\n    }\n  }\n\n  return result.values();\n}\n\nexport { _findMatrices as findMatrices };\n\nfunction possibleMatrix(range, isMatrix, cells) {\n  return {\n    isMatrix: isMatrix,\n    range: range,\n    cells: cells\n  };\n}"]},"metadata":{},"sourceType":"module"}