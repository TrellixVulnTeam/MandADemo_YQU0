{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nimport { ArrayValue, NotComputedArray } from '../ArrayValue';\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message'; // noinspection TypeScriptPreferShortImport\n\nimport { AstNodeType } from '../parser/Ast';\nimport { coerceRangeToScalar, coerceScalarToString, coerceToRange, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\nimport { CriterionBuilder } from './Criterion';\nimport { FunctionRegistry } from './FunctionRegistry';\nimport { InterpreterState } from './InterpreterState';\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nexport var Interpreter = /*#__PURE__*/function () {\n  function Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper) {\n    var _this = this;\n\n    _classCallCheck(this, Interpreter);\n\n    this.config = config;\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.stats = stats;\n    this.arithmeticHelper = arithmeticHelper;\n    this.functionRegistry = functionRegistry;\n    this.namedExpressions = namedExpressions;\n    this.serialization = serialization;\n    this.arraySizePredictor = arraySizePredictor;\n    this.dateTimeHelper = dateTimeHelper;\n\n    this.equalOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.eq, arg1, arg2);\n    };\n\n    this.notEqualOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.neq, arg1, arg2);\n    };\n\n    this.greaterThanOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.gt, arg1, arg2);\n    };\n\n    this.lessThanOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.lt, arg1, arg2);\n    };\n\n    this.greaterThanOrEqualOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.geq, arg1, arg2);\n    };\n\n    this.lessThanOrEqualOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.leq, arg1, arg2);\n    };\n\n    this.concatOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.concat, coerceScalarToString(arg1), coerceScalarToString(arg2));\n    };\n\n    this.plusOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.addWithEpsilon, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.minusOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.subtract, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.timesOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.multiply, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.powerOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.pow, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.divOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.divide, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.unaryMinusOp = function (arg) {\n      return unaryErrorWrapper(_this.arithmeticHelper.unaryMinus, _this.arithmeticHelper.coerceScalarToNumberOrError(arg));\n    };\n\n    this.percentOp = function (arg) {\n      return unaryErrorWrapper(_this.arithmeticHelper.unaryPercent, _this.arithmeticHelper.coerceScalarToNumberOrError(arg));\n    };\n\n    this.unaryPlusOp = function (arg) {\n      return _this.arithmeticHelper.unaryPlus(arg);\n    };\n\n    this.functionRegistry.initializePlugins(this);\n    this.criterionBuilder = new CriterionBuilder(config);\n  }\n\n  _createClass(Interpreter, [{\n    key: \"evaluateAst\",\n    value: function evaluateAst(ast, state) {\n      var val = this.evaluateAstWithoutPostprocessing(ast, state);\n\n      if (isExtendedNumber(val)) {\n        if (isNumberOverflow(getRawValue(val))) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n        } else {\n          val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\n        }\n      }\n\n      if (val instanceof SimpleRangeValue && val.height() === 1 && val.width() === 1) {\n        var _val$data = _slicedToArray(val.data, 1);\n\n        var _val$data$ = _slicedToArray(_val$data[0], 1);\n\n        val = _val$data$[0];\n      }\n\n      return wrapperForRootVertex(val, state.formulaVertex);\n    }\n    /**\n     * Calculates cell value from formula abstract syntax tree\n     *\n     * @param formula - abstract syntax tree of formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n\n  }, {\n    key: \"evaluateAstWithoutPostprocessing\",\n    value: function evaluateAstWithoutPostprocessing(ast, state) {\n      switch (ast.type) {\n        case AstNodeType.EMPTY:\n          {\n            return EmptyValue;\n          }\n\n        case AstNodeType.CELL_REFERENCE:\n          {\n            var address = ast.reference.toSimpleCellAddress(state.formulaAddress);\n\n            if (invalidSimpleCellAddress(address)) {\n              return new CellError(ErrorType.REF, ErrorMessage.BadRef);\n            }\n\n            return this.dependencyGraph.getCellValue(address);\n          }\n\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n          {\n            return ast.value;\n          }\n\n        case AstNodeType.CONCATENATE_OP:\n          {\n            var leftResult = this.evaluateAst(ast.left, state);\n            var rightResult = this.evaluateAst(ast.right, state);\n            return this.binaryRangeWrapper(this.concatOp, leftResult, rightResult, state);\n          }\n\n        case AstNodeType.EQUALS_OP:\n          {\n            var _leftResult = this.evaluateAst(ast.left, state);\n\n            var _rightResult = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.equalOp, _leftResult, _rightResult, state);\n          }\n\n        case AstNodeType.NOT_EQUAL_OP:\n          {\n            var _leftResult2 = this.evaluateAst(ast.left, state);\n\n            var _rightResult2 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.notEqualOp, _leftResult2, _rightResult2, state);\n          }\n\n        case AstNodeType.GREATER_THAN_OP:\n          {\n            var _leftResult3 = this.evaluateAst(ast.left, state);\n\n            var _rightResult3 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.greaterThanOp, _leftResult3, _rightResult3, state);\n          }\n\n        case AstNodeType.LESS_THAN_OP:\n          {\n            var _leftResult4 = this.evaluateAst(ast.left, state);\n\n            var _rightResult4 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.lessThanOp, _leftResult4, _rightResult4, state);\n          }\n\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult5 = this.evaluateAst(ast.left, state);\n\n            var _rightResult5 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.greaterThanOrEqualOp, _leftResult5, _rightResult5, state);\n          }\n\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult6 = this.evaluateAst(ast.left, state);\n\n            var _rightResult6 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.lessThanOrEqualOp, _leftResult6, _rightResult6, state);\n          }\n\n        case AstNodeType.PLUS_OP:\n          {\n            var _leftResult7 = this.evaluateAst(ast.left, state);\n\n            var _rightResult7 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.plusOp, _leftResult7, _rightResult7, state);\n          }\n\n        case AstNodeType.MINUS_OP:\n          {\n            var _leftResult8 = this.evaluateAst(ast.left, state);\n\n            var _rightResult8 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.minusOp, _leftResult8, _rightResult8, state);\n          }\n\n        case AstNodeType.TIMES_OP:\n          {\n            var _leftResult9 = this.evaluateAst(ast.left, state);\n\n            var _rightResult9 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.timesOp, _leftResult9, _rightResult9, state);\n          }\n\n        case AstNodeType.POWER_OP:\n          {\n            var _leftResult10 = this.evaluateAst(ast.left, state);\n\n            var _rightResult10 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.powerOp, _leftResult10, _rightResult10, state);\n          }\n\n        case AstNodeType.DIV_OP:\n          {\n            var _leftResult11 = this.evaluateAst(ast.left, state);\n\n            var _rightResult11 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.divOp, _leftResult11, _rightResult11, state);\n          }\n\n        case AstNodeType.PLUS_UNARY_OP:\n          {\n            var result = this.evaluateAst(ast.value, state);\n            return this.unaryRangeWrapper(this.unaryPlusOp, result, state);\n          }\n\n        case AstNodeType.MINUS_UNARY_OP:\n          {\n            var _result = this.evaluateAst(ast.value, state);\n\n            return this.unaryRangeWrapper(this.unaryMinusOp, _result, state);\n          }\n\n        case AstNodeType.PERCENT_OP:\n          {\n            var _result2 = this.evaluateAst(ast.value, state);\n\n            return this.unaryRangeWrapper(this.percentOp, _result2, state);\n          }\n\n        case AstNodeType.FUNCTION_CALL:\n          {\n            if (this.config.licenseKeyValidityState !== \"valid\"\n            /* VALID */\n            && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\n              return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\n            }\n\n            var pluginFunction = this.functionRegistry.getFunction(ast.procedureName);\n\n            if (pluginFunction !== undefined) {\n              return pluginFunction(ast, new InterpreterState(state.formulaAddress, state.arraysFlag || this.functionRegistry.isArrayFunction(ast.procedureName), state.formulaVertex));\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\n            }\n          }\n\n        case AstNodeType.NAMED_EXPRESSION:\n          {\n            var namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, state.formulaAddress.sheet);\n\n            if (namedExpression) {\n              return this.dependencyGraph.getCellValue(namedExpression.address);\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\n            }\n          }\n\n        case AstNodeType.CELL_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var range = AbsoluteCellRange.fromCellRange(ast, state.formulaAddress);\n            var arrayVertex = this.dependencyGraph.getArray(range);\n\n            if (arrayVertex) {\n              var array = arrayVertex.array;\n\n              if (array instanceof NotComputedArray) {\n                throw new Error('Array should be already computed');\n              } else if (array instanceof CellError) {\n                return array;\n              } else if (array instanceof ArrayValue) {\n                return SimpleRangeValue.fromRange(array.raw(), range, this.dependencyGraph);\n              } else {\n                throw new Error('Unknown array');\n              }\n            } else {\n              return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n          }\n\n        case AstNodeType.COLUMN_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range = AbsoluteColumnRange.fromColumnRange(ast, state.formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range, this.dependencyGraph);\n          }\n\n        case AstNodeType.ROW_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range2 = AbsoluteRowRange.fromRowRangeAst(ast, state.formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range2, this.dependencyGraph);\n          }\n\n        case AstNodeType.PARENTHESIS:\n          {\n            return this.evaluateAst(ast.expression, state);\n          }\n\n        case AstNodeType.ARRAY:\n          {\n            var totalWidth = undefined;\n            var ret = [];\n\n            var _iterator = _createForOfIteratorHelper(ast.args),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var astRow = _step.value;\n                var rowHeight = undefined;\n                var rowRet = [];\n\n                var _iterator2 = _createForOfIteratorHelper(astRow),\n                    _step2;\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var astIt = _step2.value;\n                    var arr = coerceToRange(this.evaluateAst(astIt, state));\n                    var height = arr.height();\n\n                    if (rowHeight === undefined) {\n                      rowHeight = height;\n                      rowRet.push.apply(rowRet, _toConsumableArray(arr.data));\n                    } else if (rowHeight === height) {\n                      for (var i = 0; i < height; i++) {\n                        var _rowRet$i;\n\n                        (_rowRet$i = rowRet[i]).push.apply(_rowRet$i, _toConsumableArray(arr.data[i]));\n                      }\n                    } else {\n                      return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                var width = rowRet[0].length;\n\n                if (totalWidth === undefined) {\n                  totalWidth = width;\n                  ret.push.apply(ret, rowRet);\n                } else if (totalWidth === width) {\n                  ret.push.apply(ret, rowRet);\n                } else {\n                  return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            return SimpleRangeValue.onlyValues(ret);\n          }\n\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n        case AstNodeType.ERROR:\n          {\n            return ast.error;\n          }\n      }\n    }\n  }, {\n    key: \"getGpuInstance\",\n    value: function getGpuInstance() {\n      var mode = this.config.gpuMode;\n      var gpujs = this.config.gpujs;\n\n      if (gpujs === undefined) {\n        throw Error('Cannot instantiate GPU.js. Constructor not provided.');\n      }\n\n      if (!this.gpu) {\n        this.gpu = new gpujs({\n          mode: mode\n        });\n      }\n\n      return this.gpu;\n    }\n  }, {\n    key: \"destroyGpu\",\n    value: function destroyGpu() {\n      var _a;\n\n      (_a = this.gpu) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n  }, {\n    key: \"rangeSpansOneSheet\",\n    value: function rangeSpansOneSheet(ast) {\n      return ast.start.sheet === ast.end.sheet;\n    }\n  }, {\n    key: \"unaryRangeWrapper\",\n    value: function unaryRangeWrapper(op, arg, state) {\n      var _a;\n\n      if (arg instanceof SimpleRangeValue && !state.arraysFlag) {\n        arg = (_a = coerceRangeToScalar(arg, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n      }\n\n      if (arg instanceof CellError) {\n        return arg;\n      }\n\n      if (arg instanceof SimpleRangeValue) {\n        var newRaw = arg.data.map(function (row) {\n          return row.map(op);\n        });\n        return SimpleRangeValue.onlyValues(newRaw);\n      }\n\n      return op(arg);\n    }\n  }, {\n    key: \"binaryRangeWrapper\",\n    value: function binaryRangeWrapper(op, arg1, arg2, state) {\n      var _a, _b;\n\n      if (arg1 instanceof SimpleRangeValue && !state.arraysFlag) {\n        arg1 = (_a = coerceRangeToScalar(arg1, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n      }\n\n      if (arg1 instanceof CellError) {\n        return arg1;\n      }\n\n      if (arg2 instanceof SimpleRangeValue && !state.arraysFlag) {\n        arg2 = (_b = coerceRangeToScalar(arg2, state)) !== null && _b !== void 0 ? _b : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n      }\n\n      if (arg2 instanceof CellError) {\n        return arg2;\n      }\n\n      if (arg1 instanceof SimpleRangeValue || arg2 instanceof SimpleRangeValue) {\n        if (!(arg1 instanceof SimpleRangeValue)) {\n          if (arg2.isAdHoc()) {\n            var raw2 = arg2.data;\n\n            for (var i = 0; i < raw2.length; i++) {\n              for (var j = 0; j < raw2[0].length; j++) {\n                raw2[i][j] = op(arg1, raw2[i][j]);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(raw2);\n          } else {\n            arg1 = SimpleRangeValue.fromScalar(arg1);\n          }\n        }\n\n        if (!(arg2 instanceof SimpleRangeValue)) {\n          if (arg1.isAdHoc()) {\n            var raw1 = arg1.data;\n\n            for (var _i2 = 0; _i2 < raw1.length; _i2++) {\n              for (var _j = 0; _j < raw1[0].length; _j++) {\n                raw1[_i2][_j] = op(raw1[_i2][_j], arg2);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(raw1);\n          } else {\n            arg2 = SimpleRangeValue.fromScalar(arg2);\n          }\n        }\n\n        if (arg1.width() === arg2.width() && arg1.height() === arg2.height()) {\n          if (arg1.isAdHoc()) {\n            var _raw = arg1.data;\n            var _raw2 = arg2.data;\n\n            for (var _i3 = 0; _i3 < _raw.length; _i3++) {\n              for (var _j2 = 0; _j2 < _raw[0].length; _j2++) {\n                _raw[_i3][_j2] = op(_raw[_i3][_j2], _raw2[_i3][_j2]);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(_raw);\n          }\n\n          if (arg2.isAdHoc()) {\n            var _raw3 = arg1.data;\n            var _raw4 = arg2.data;\n\n            for (var _i4 = 0; _i4 < _raw3.length; _i4++) {\n              for (var _j3 = 0; _j3 < _raw3[0].length; _j3++) {\n                _raw4[_i4][_j3] = op(_raw3[_i4][_j3], _raw4[_i4][_j3]);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(_raw4);\n          }\n        }\n\n        var width = Math.max(arg1.width(), arg2.width());\n        var height = Math.max(arg1.height(), arg2.height());\n        var ret = Array(height);\n\n        for (var _i5 = 0; _i5 < height; _i5++) {\n          ret[_i5] = Array(width);\n        }\n\n        for (var _i6 = 0; _i6 < height; _i6++) {\n          var i1 = arg1.height() !== 1 ? _i6 : 0;\n          var i2 = arg2.height() !== 1 ? _i6 : 0;\n\n          for (var _j4 = 0; _j4 < width; _j4++) {\n            var j1 = arg1.width() !== 1 ? _j4 : 0;\n            var j2 = arg2.width() !== 1 ? _j4 : 0;\n\n            if (i1 < arg1.height() && i2 < arg2.height() && j1 < arg1.width() && j2 < arg2.width()) {\n              ret[_i6][_j4] = op(arg1.data[i1][j1], arg2.data[i2][j2]);\n            } else {\n              ret[_i6][_j4] = new CellError(ErrorType.NA);\n            }\n          }\n        }\n\n        return SimpleRangeValue.onlyValues(ret);\n      }\n\n      return op(arg1, arg2);\n    }\n  }]);\n\n  return Interpreter;\n}();\n\nfunction unaryErrorWrapper(op, arg) {\n  if (arg instanceof CellError) {\n    return arg;\n  } else {\n    return op(arg);\n  }\n}\n\nfunction binaryErrorWrapper(op, arg1, arg2) {\n  if (arg1 instanceof CellError) {\n    return arg1;\n  } else if (arg2 instanceof CellError) {\n    return arg2;\n  } else {\n    return op(arg1, arg2);\n  }\n}\n\nfunction wrapperForRootVertex(val, vertex) {\n  if (val instanceof CellError && vertex !== undefined) {\n    return val.attachRootVertex(vertex);\n  }\n\n  return val;\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/Interpreter.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_createForOfIteratorHelper","o","allowArrayLike","it","length","i","F","s","n","done","value","e","_e2","f","normalCompletion","didErr","err","call","step","next","_e3","return","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","minLen","Object","prototype","toString","slice","constructor","name","test","len","arr2","_i","_arr","_n","_d","_s","_e","push","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","AbsoluteColumnRange","AbsoluteRowRange","ArrayValue","NotComputedArray","CellError","ErrorType","invalidSimpleCellAddress","ErrorMessage","AstNodeType","coerceRangeToScalar","coerceScalarToString","coerceToRange","fixNegativeZero","isNumberOverflow","CriterionBuilder","FunctionRegistry","InterpreterState","cloneNumber","EmptyValue","getRawValue","isExtendedNumber","SimpleRangeValue","Interpreter","config","dependencyGraph","columnSearch","stats","arithmeticHelper","functionRegistry","namedExpressions","serialization","arraySizePredictor","dateTimeHelper","_this","equalOp","arg1","arg2","binaryErrorWrapper","eq","notEqualOp","neq","greaterThanOp","gt","lessThanOp","lt","greaterThanOrEqualOp","geq","lessThanOrEqualOp","leq","concatOp","concat","plusOp","addWithEpsilon","coerceScalarToNumberOrError","minusOp","subtract","timesOp","multiply","powerOp","pow","divOp","divide","unaryMinusOp","arg","unaryErrorWrapper","unaryMinus","percentOp","unaryPercent","unaryPlusOp","unaryPlus","initializePlugins","criterionBuilder","evaluateAst","ast","state","val","evaluateAstWithoutPostprocessing","NUM","NaN","height","width","_val$data","data","_val$data$","wrapperForRootVertex","formulaVertex","type","EMPTY","CELL_REFERENCE","address","reference","toSimpleCellAddress","formulaAddress","REF","BadRef","getCellValue","NUMBER","STRING","CONCATENATE_OP","leftResult","left","rightResult","right","binaryRangeWrapper","EQUALS_OP","_leftResult","_rightResult","NOT_EQUAL_OP","_leftResult2","_rightResult2","GREATER_THAN_OP","_leftResult3","_rightResult3","LESS_THAN_OP","_leftResult4","_rightResult4","GREATER_THAN_OR_EQUAL_OP","_leftResult5","_rightResult5","LESS_THAN_OR_EQUAL_OP","_leftResult6","_rightResult6","PLUS_OP","_leftResult7","_rightResult7","MINUS_OP","_leftResult8","_rightResult8","TIMES_OP","_leftResult9","_rightResult9","POWER_OP","_leftResult10","_rightResult10","DIV_OP","_leftResult11","_rightResult11","PLUS_UNARY_OP","result","unaryRangeWrapper","MINUS_UNARY_OP","_result","PERCENT_OP","_result2","FUNCTION_CALL","licenseKeyValidityState","functionIsProtected","procedureName","LIC","LicenseKey","pluginFunction","getFunction","undefined","arraysFlag","isArrayFunction","NAME","FunctionName","NAMED_EXPRESSION","namedExpression","nearestNamedExpression","expressionName","sheet","NamedExpressionName","CELL_RANGE","rangeSpansOneSheet","RangeManySheets","range","fromCellRange","arrayVertex","getArray","array","Error","fromRange","raw","onlyRange","COLUMN_RANGE","_range","fromColumnRange","ROW_RANGE","_range2","fromRowRangeAst","PARENTHESIS","expression","ARRAY","totalWidth","ret","_iterator","args","_step","astRow","rowHeight","rowRet","_iterator2","_step2","astIt","apply","_rowRet$i","SizeMismatch","onlyValues","ERROR_WITH_RAW_INPUT","ERROR","error","getGpuInstance","mode","gpuMode","gpujs","gpu","destroyGpu","_a","destroy","start","end","op","VALUE","ScalarExpected","newRaw","map","row","_b","isAdHoc","raw2","j","fromScalar","raw1","_i2","_j","_raw","_raw2","_i3","_j2","_raw3","_raw4","_i4","_j3","Math","max","_i5","_i6","i1","i2","_j4","j1","j2","NA","vertex","attachRootVertex"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nimport { ArrayValue, NotComputedArray } from '../ArrayValue';\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message'; // noinspection TypeScriptPreferShortImport\n\nimport { AstNodeType } from '../parser/Ast';\nimport { coerceRangeToScalar, coerceScalarToString, coerceToRange, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\nimport { CriterionBuilder } from './Criterion';\nimport { FunctionRegistry } from './FunctionRegistry';\nimport { InterpreterState } from './InterpreterState';\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nexport var Interpreter = /*#__PURE__*/function () {\n  function Interpreter(config, dependencyGraph, columnSearch, stats, arithmeticHelper, functionRegistry, namedExpressions, serialization, arraySizePredictor, dateTimeHelper) {\n    var _this = this;\n\n    _classCallCheck(this, Interpreter);\n\n    this.config = config;\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.stats = stats;\n    this.arithmeticHelper = arithmeticHelper;\n    this.functionRegistry = functionRegistry;\n    this.namedExpressions = namedExpressions;\n    this.serialization = serialization;\n    this.arraySizePredictor = arraySizePredictor;\n    this.dateTimeHelper = dateTimeHelper;\n\n    this.equalOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.eq, arg1, arg2);\n    };\n\n    this.notEqualOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.neq, arg1, arg2);\n    };\n\n    this.greaterThanOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.gt, arg1, arg2);\n    };\n\n    this.lessThanOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.lt, arg1, arg2);\n    };\n\n    this.greaterThanOrEqualOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.geq, arg1, arg2);\n    };\n\n    this.lessThanOrEqualOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.leq, arg1, arg2);\n    };\n\n    this.concatOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.concat, coerceScalarToString(arg1), coerceScalarToString(arg2));\n    };\n\n    this.plusOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.addWithEpsilon, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.minusOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.subtract, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.timesOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.multiply, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.powerOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.pow, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.divOp = function (arg1, arg2) {\n      return binaryErrorWrapper(_this.arithmeticHelper.divide, _this.arithmeticHelper.coerceScalarToNumberOrError(arg1), _this.arithmeticHelper.coerceScalarToNumberOrError(arg2));\n    };\n\n    this.unaryMinusOp = function (arg) {\n      return unaryErrorWrapper(_this.arithmeticHelper.unaryMinus, _this.arithmeticHelper.coerceScalarToNumberOrError(arg));\n    };\n\n    this.percentOp = function (arg) {\n      return unaryErrorWrapper(_this.arithmeticHelper.unaryPercent, _this.arithmeticHelper.coerceScalarToNumberOrError(arg));\n    };\n\n    this.unaryPlusOp = function (arg) {\n      return _this.arithmeticHelper.unaryPlus(arg);\n    };\n\n    this.functionRegistry.initializePlugins(this);\n    this.criterionBuilder = new CriterionBuilder(config);\n  }\n\n  _createClass(Interpreter, [{\n    key: \"evaluateAst\",\n    value: function evaluateAst(ast, state) {\n      var val = this.evaluateAstWithoutPostprocessing(ast, state);\n\n      if (isExtendedNumber(val)) {\n        if (isNumberOverflow(getRawValue(val))) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n        } else {\n          val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\n        }\n      }\n\n      if (val instanceof SimpleRangeValue && val.height() === 1 && val.width() === 1) {\n        var _val$data = _slicedToArray(val.data, 1);\n\n        var _val$data$ = _slicedToArray(_val$data[0], 1);\n\n        val = _val$data$[0];\n      }\n\n      return wrapperForRootVertex(val, state.formulaVertex);\n    }\n    /**\n     * Calculates cell value from formula abstract syntax tree\n     *\n     * @param formula - abstract syntax tree of formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n\n  }, {\n    key: \"evaluateAstWithoutPostprocessing\",\n    value: function evaluateAstWithoutPostprocessing(ast, state) {\n      switch (ast.type) {\n        case AstNodeType.EMPTY:\n          {\n            return EmptyValue;\n          }\n\n        case AstNodeType.CELL_REFERENCE:\n          {\n            var address = ast.reference.toSimpleCellAddress(state.formulaAddress);\n\n            if (invalidSimpleCellAddress(address)) {\n              return new CellError(ErrorType.REF, ErrorMessage.BadRef);\n            }\n\n            return this.dependencyGraph.getCellValue(address);\n          }\n\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n          {\n            return ast.value;\n          }\n\n        case AstNodeType.CONCATENATE_OP:\n          {\n            var leftResult = this.evaluateAst(ast.left, state);\n            var rightResult = this.evaluateAst(ast.right, state);\n            return this.binaryRangeWrapper(this.concatOp, leftResult, rightResult, state);\n          }\n\n        case AstNodeType.EQUALS_OP:\n          {\n            var _leftResult = this.evaluateAst(ast.left, state);\n\n            var _rightResult = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.equalOp, _leftResult, _rightResult, state);\n          }\n\n        case AstNodeType.NOT_EQUAL_OP:\n          {\n            var _leftResult2 = this.evaluateAst(ast.left, state);\n\n            var _rightResult2 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.notEqualOp, _leftResult2, _rightResult2, state);\n          }\n\n        case AstNodeType.GREATER_THAN_OP:\n          {\n            var _leftResult3 = this.evaluateAst(ast.left, state);\n\n            var _rightResult3 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.greaterThanOp, _leftResult3, _rightResult3, state);\n          }\n\n        case AstNodeType.LESS_THAN_OP:\n          {\n            var _leftResult4 = this.evaluateAst(ast.left, state);\n\n            var _rightResult4 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.lessThanOp, _leftResult4, _rightResult4, state);\n          }\n\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult5 = this.evaluateAst(ast.left, state);\n\n            var _rightResult5 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.greaterThanOrEqualOp, _leftResult5, _rightResult5, state);\n          }\n\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult6 = this.evaluateAst(ast.left, state);\n\n            var _rightResult6 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.lessThanOrEqualOp, _leftResult6, _rightResult6, state);\n          }\n\n        case AstNodeType.PLUS_OP:\n          {\n            var _leftResult7 = this.evaluateAst(ast.left, state);\n\n            var _rightResult7 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.plusOp, _leftResult7, _rightResult7, state);\n          }\n\n        case AstNodeType.MINUS_OP:\n          {\n            var _leftResult8 = this.evaluateAst(ast.left, state);\n\n            var _rightResult8 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.minusOp, _leftResult8, _rightResult8, state);\n          }\n\n        case AstNodeType.TIMES_OP:\n          {\n            var _leftResult9 = this.evaluateAst(ast.left, state);\n\n            var _rightResult9 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.timesOp, _leftResult9, _rightResult9, state);\n          }\n\n        case AstNodeType.POWER_OP:\n          {\n            var _leftResult10 = this.evaluateAst(ast.left, state);\n\n            var _rightResult10 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.powerOp, _leftResult10, _rightResult10, state);\n          }\n\n        case AstNodeType.DIV_OP:\n          {\n            var _leftResult11 = this.evaluateAst(ast.left, state);\n\n            var _rightResult11 = this.evaluateAst(ast.right, state);\n\n            return this.binaryRangeWrapper(this.divOp, _leftResult11, _rightResult11, state);\n          }\n\n        case AstNodeType.PLUS_UNARY_OP:\n          {\n            var result = this.evaluateAst(ast.value, state);\n            return this.unaryRangeWrapper(this.unaryPlusOp, result, state);\n          }\n\n        case AstNodeType.MINUS_UNARY_OP:\n          {\n            var _result = this.evaluateAst(ast.value, state);\n\n            return this.unaryRangeWrapper(this.unaryMinusOp, _result, state);\n          }\n\n        case AstNodeType.PERCENT_OP:\n          {\n            var _result2 = this.evaluateAst(ast.value, state);\n\n            return this.unaryRangeWrapper(this.percentOp, _result2, state);\n          }\n\n        case AstNodeType.FUNCTION_CALL:\n          {\n            if (this.config.licenseKeyValidityState !== \"valid\"\n            /* VALID */\n            && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\n              return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\n            }\n\n            var pluginFunction = this.functionRegistry.getFunction(ast.procedureName);\n\n            if (pluginFunction !== undefined) {\n              return pluginFunction(ast, new InterpreterState(state.formulaAddress, state.arraysFlag || this.functionRegistry.isArrayFunction(ast.procedureName), state.formulaVertex));\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\n            }\n          }\n\n        case AstNodeType.NAMED_EXPRESSION:\n          {\n            var namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, state.formulaAddress.sheet);\n\n            if (namedExpression) {\n              return this.dependencyGraph.getCellValue(namedExpression.address);\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\n            }\n          }\n\n        case AstNodeType.CELL_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var range = AbsoluteCellRange.fromCellRange(ast, state.formulaAddress);\n            var arrayVertex = this.dependencyGraph.getArray(range);\n\n            if (arrayVertex) {\n              var array = arrayVertex.array;\n\n              if (array instanceof NotComputedArray) {\n                throw new Error('Array should be already computed');\n              } else if (array instanceof CellError) {\n                return array;\n              } else if (array instanceof ArrayValue) {\n                return SimpleRangeValue.fromRange(array.raw(), range, this.dependencyGraph);\n              } else {\n                throw new Error('Unknown array');\n              }\n            } else {\n              return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n          }\n\n        case AstNodeType.COLUMN_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range = AbsoluteColumnRange.fromColumnRange(ast, state.formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range, this.dependencyGraph);\n          }\n\n        case AstNodeType.ROW_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range2 = AbsoluteRowRange.fromRowRangeAst(ast, state.formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range2, this.dependencyGraph);\n          }\n\n        case AstNodeType.PARENTHESIS:\n          {\n            return this.evaluateAst(ast.expression, state);\n          }\n\n        case AstNodeType.ARRAY:\n          {\n            var totalWidth = undefined;\n            var ret = [];\n\n            var _iterator = _createForOfIteratorHelper(ast.args),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var astRow = _step.value;\n                var rowHeight = undefined;\n                var rowRet = [];\n\n                var _iterator2 = _createForOfIteratorHelper(astRow),\n                    _step2;\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var astIt = _step2.value;\n                    var arr = coerceToRange(this.evaluateAst(astIt, state));\n                    var height = arr.height();\n\n                    if (rowHeight === undefined) {\n                      rowHeight = height;\n                      rowRet.push.apply(rowRet, _toConsumableArray(arr.data));\n                    } else if (rowHeight === height) {\n                      for (var i = 0; i < height; i++) {\n                        var _rowRet$i;\n\n                        (_rowRet$i = rowRet[i]).push.apply(_rowRet$i, _toConsumableArray(arr.data[i]));\n                      }\n                    } else {\n                      return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                var width = rowRet[0].length;\n\n                if (totalWidth === undefined) {\n                  totalWidth = width;\n                  ret.push.apply(ret, rowRet);\n                } else if (totalWidth === width) {\n                  ret.push.apply(ret, rowRet);\n                } else {\n                  return new CellError(ErrorType.REF, ErrorMessage.SizeMismatch);\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            return SimpleRangeValue.onlyValues(ret);\n          }\n\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n        case AstNodeType.ERROR:\n          {\n            return ast.error;\n          }\n      }\n    }\n  }, {\n    key: \"getGpuInstance\",\n    value: function getGpuInstance() {\n      var mode = this.config.gpuMode;\n      var gpujs = this.config.gpujs;\n\n      if (gpujs === undefined) {\n        throw Error('Cannot instantiate GPU.js. Constructor not provided.');\n      }\n\n      if (!this.gpu) {\n        this.gpu = new gpujs({\n          mode: mode\n        });\n      }\n\n      return this.gpu;\n    }\n  }, {\n    key: \"destroyGpu\",\n    value: function destroyGpu() {\n      var _a;\n\n      (_a = this.gpu) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n  }, {\n    key: \"rangeSpansOneSheet\",\n    value: function rangeSpansOneSheet(ast) {\n      return ast.start.sheet === ast.end.sheet;\n    }\n  }, {\n    key: \"unaryRangeWrapper\",\n    value: function unaryRangeWrapper(op, arg, state) {\n      var _a;\n\n      if (arg instanceof SimpleRangeValue && !state.arraysFlag) {\n        arg = (_a = coerceRangeToScalar(arg, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n      }\n\n      if (arg instanceof CellError) {\n        return arg;\n      }\n\n      if (arg instanceof SimpleRangeValue) {\n        var newRaw = arg.data.map(function (row) {\n          return row.map(op);\n        });\n        return SimpleRangeValue.onlyValues(newRaw);\n      }\n\n      return op(arg);\n    }\n  }, {\n    key: \"binaryRangeWrapper\",\n    value: function binaryRangeWrapper(op, arg1, arg2, state) {\n      var _a, _b;\n\n      if (arg1 instanceof SimpleRangeValue && !state.arraysFlag) {\n        arg1 = (_a = coerceRangeToScalar(arg1, state)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n      }\n\n      if (arg1 instanceof CellError) {\n        return arg1;\n      }\n\n      if (arg2 instanceof SimpleRangeValue && !state.arraysFlag) {\n        arg2 = (_b = coerceRangeToScalar(arg2, state)) !== null && _b !== void 0 ? _b : new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n      }\n\n      if (arg2 instanceof CellError) {\n        return arg2;\n      }\n\n      if (arg1 instanceof SimpleRangeValue || arg2 instanceof SimpleRangeValue) {\n        if (!(arg1 instanceof SimpleRangeValue)) {\n          if (arg2.isAdHoc()) {\n            var raw2 = arg2.data;\n\n            for (var i = 0; i < raw2.length; i++) {\n              for (var j = 0; j < raw2[0].length; j++) {\n                raw2[i][j] = op(arg1, raw2[i][j]);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(raw2);\n          } else {\n            arg1 = SimpleRangeValue.fromScalar(arg1);\n          }\n        }\n\n        if (!(arg2 instanceof SimpleRangeValue)) {\n          if (arg1.isAdHoc()) {\n            var raw1 = arg1.data;\n\n            for (var _i2 = 0; _i2 < raw1.length; _i2++) {\n              for (var _j = 0; _j < raw1[0].length; _j++) {\n                raw1[_i2][_j] = op(raw1[_i2][_j], arg2);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(raw1);\n          } else {\n            arg2 = SimpleRangeValue.fromScalar(arg2);\n          }\n        }\n\n        if (arg1.width() === arg2.width() && arg1.height() === arg2.height()) {\n          if (arg1.isAdHoc()) {\n            var _raw = arg1.data;\n            var _raw2 = arg2.data;\n\n            for (var _i3 = 0; _i3 < _raw.length; _i3++) {\n              for (var _j2 = 0; _j2 < _raw[0].length; _j2++) {\n                _raw[_i3][_j2] = op(_raw[_i3][_j2], _raw2[_i3][_j2]);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(_raw);\n          }\n\n          if (arg2.isAdHoc()) {\n            var _raw3 = arg1.data;\n            var _raw4 = arg2.data;\n\n            for (var _i4 = 0; _i4 < _raw3.length; _i4++) {\n              for (var _j3 = 0; _j3 < _raw3[0].length; _j3++) {\n                _raw4[_i4][_j3] = op(_raw3[_i4][_j3], _raw4[_i4][_j3]);\n              }\n            }\n\n            return SimpleRangeValue.onlyValues(_raw4);\n          }\n        }\n\n        var width = Math.max(arg1.width(), arg2.width());\n        var height = Math.max(arg1.height(), arg2.height());\n        var ret = Array(height);\n\n        for (var _i5 = 0; _i5 < height; _i5++) {\n          ret[_i5] = Array(width);\n        }\n\n        for (var _i6 = 0; _i6 < height; _i6++) {\n          var i1 = arg1.height() !== 1 ? _i6 : 0;\n          var i2 = arg2.height() !== 1 ? _i6 : 0;\n\n          for (var _j4 = 0; _j4 < width; _j4++) {\n            var j1 = arg1.width() !== 1 ? _j4 : 0;\n            var j2 = arg2.width() !== 1 ? _j4 : 0;\n\n            if (i1 < arg1.height() && i2 < arg2.height() && j1 < arg1.width() && j2 < arg2.width()) {\n              ret[_i6][_j4] = op(arg1.data[i1][j1], arg2.data[i2][j2]);\n            } else {\n              ret[_i6][_j4] = new CellError(ErrorType.NA);\n            }\n          }\n        }\n\n        return SimpleRangeValue.onlyValues(ret);\n      }\n\n      return op(arg1, arg2);\n    }\n  }]);\n\n  return Interpreter;\n}();\n\nfunction unaryErrorWrapper(op, arg) {\n  if (arg instanceof CellError) {\n    return arg;\n  } else {\n    return op(arg);\n  }\n}\n\nfunction binaryErrorWrapper(op, arg1, arg2) {\n  if (arg1 instanceof CellError) {\n    return arg1;\n  } else if (arg2 instanceof CellError) {\n    return arg2;\n  } else {\n    return op(arg1, arg2);\n  }\n}\n\nfunction wrapperForRootVertex(val, vertex) {\n  if (val instanceof CellError && vertex !== undefined) {\n    return val.attachRootVertex(vertex);\n  }\n\n  return val;\n}"]},"metadata":{},"sourceType":"module"}