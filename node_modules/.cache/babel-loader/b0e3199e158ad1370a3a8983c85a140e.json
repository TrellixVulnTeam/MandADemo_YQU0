{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { simpleCellAddress } from '../Cell';\n/**\n * Mapping from address ranges to range vertices\n */\n\nexport var RangeMapping = /*#__PURE__*/function () {\n  function RangeMapping() {\n    _classCallCheck(this, RangeMapping);\n    /** Map in which actual data is stored. */\n\n\n    this.rangeMapping = new Map();\n  }\n\n  _createClass(RangeMapping, [{\n    key: \"getMappingSize\",\n    value: function getMappingSize(sheet) {\n      var _a, _b;\n\n      return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\n    }\n    /**\n     * Saves range vertex\n     *\n     * @param vertex - vertex to save\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(vertex) {\n      var sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\n\n      if (sheetMap === undefined) {\n        sheetMap = new Map();\n        this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\n      }\n\n      var key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n      sheetMap.set(key, vertex);\n    }\n  }, {\n    key: \"removeRange\",\n    value: function removeRange(vertex) {\n      var sheet = vertex.getStart().sheet;\n      var sheetMap = this.rangeMapping.get(sheet);\n\n      if (sheetMap === undefined) {\n        return;\n      }\n\n      var key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n      sheetMap.delete(key);\n\n      if (sheetMap.size === 0) {\n        this.rangeMapping.delete(sheet);\n      }\n    }\n    /**\n     * Returns associated vertex for given range\n     *\n     * @param start - top-left corner of the range\n     * @param end - bottom-right corner of the range\n     */\n\n  }, {\n    key: \"getRange\",\n    value: function getRange(start, end) {\n      var sheetMap = this.rangeMapping.get(start.sheet);\n      var key = keyFromAddresses(start, end);\n      return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\n    }\n  }, {\n    key: \"fetchRange\",\n    value: function fetchRange(start, end) {\n      var maybeRange = this.getRange(start, end);\n\n      if (!maybeRange) {\n        throw Error('Range does not exist');\n      }\n\n      return maybeRange;\n    }\n  }, {\n    key: \"truncateRanges\",\n    value: function truncateRanges(span, coordinate) {\n      var verticesToRemove = Array();\n      var updated = Array();\n      var sheet = span.sheet;\n\n      var _iterator = _createForOfIteratorHelper(this.entriesFromSheet(span.sheet)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              _vertex = _step$value[1];\n\n          var range = _vertex.range;\n\n          if (span.start <= coordinate(_vertex.range.end)) {\n            range.removeSpan(span);\n\n            if (range.shouldBeRemoved()) {\n              this.removeByKey(sheet, key);\n              verticesToRemove.push(_vertex);\n            } else {\n              updated.push([key, _vertex]);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var verticesToMerge = [];\n      updated.sort(function (left, right) {\n        return compareBy(left[1], right[1], coordinate);\n      });\n\n      for (var _i = 0, _updated = updated; _i < _updated.length; _i++) {\n        var _updated$_i = _slicedToArray(_updated[_i], 2),\n            oldKey = _updated$_i[0],\n            vertex = _updated$_i[1];\n\n        var newKey = keyFromRange(vertex.range);\n\n        if (newKey === oldKey) {\n          continue;\n        }\n\n        var existingVertex = this.getByKey(sheet, newKey);\n        this.removeByKey(sheet, oldKey);\n\n        if (existingVertex !== undefined && vertex != existingVertex) {\n          verticesToMerge.push([existingVertex, vertex]);\n        } else {\n          this.setRange(vertex);\n        }\n      }\n\n      return {\n        verticesToRemove: verticesToRemove,\n        verticesToMerge: verticesToMerge\n      };\n    }\n  }, {\n    key: \"moveAllRangesInSheetAfterRowByRows\",\n    value: function moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\n      this.updateVerticesFromSheet(sheet, function (key, vertex) {\n        if (row <= vertex.start.row) {\n          vertex.range.shiftByRows(numberOfRows);\n          return vertex;\n        } else if (row > vertex.start.row && row <= vertex.end.row) {\n          vertex.range.expandByRows(numberOfRows);\n          return vertex;\n        } else {\n          return undefined;\n        }\n      });\n    }\n  }, {\n    key: \"moveAllRangesInSheetAfterColumnByColumns\",\n    value: function moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\n      this.updateVerticesFromSheet(sheet, function (key, vertex) {\n        if (column <= vertex.start.col) {\n          vertex.range.shiftByColumns(numberOfColumns);\n          return vertex;\n        } else if (column > vertex.start.col && column <= vertex.end.col) {\n          vertex.range.expandByColumns(numberOfColumns);\n          return vertex;\n        } else {\n          return undefined;\n        }\n      });\n    }\n  }, {\n    key: \"moveRangesInsideSourceRange\",\n    value: function moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\n      this.updateVerticesFromSheet(sourceRange.sheet, function (key, vertex) {\n        if (sourceRange.containsRange(vertex.range)) {\n          vertex.range.shiftByColumns(toRight);\n          vertex.range.shiftByRows(toBottom);\n          vertex.range.moveToSheet(toSheet);\n          return vertex;\n        } else {\n          return undefined;\n        }\n      });\n    }\n  }, {\n    key: \"removeRangesInSheet\",\n    value: function removeRangesInSheet(sheet) {\n      if (this.rangeMapping.has(sheet)) {\n        var ranges = this.rangeMapping.get(sheet).values();\n        this.rangeMapping.delete(sheet);\n        return ranges;\n      }\n\n      return [][Symbol.iterator]();\n    }\n  }, {\n    key: \"rangesInSheet\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function rangesInSheet(sheet) {\n      var sheetMap;\n      return _regeneratorRuntime.wrap(function rangesInSheet$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sheetMap = this.rangeMapping.get(sheet);\n\n              if (sheetMap) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              return _context.delegateYield(sheetMap.values(), \"t0\", 4);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, rangesInSheet, this);\n    })\n  }, {\n    key: \"rangeVerticesContainedInRange\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function rangeVerticesContainedInRange(sourceRange) {\n      var _iterator2, _step2, rangeVertex;\n\n      return _regeneratorRuntime.wrap(function rangeVerticesContainedInRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(this.rangesInSheet(sourceRange.sheet));\n              _context2.prev = 1;\n\n              _iterator2.s();\n\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context2.next = 10;\n                break;\n              }\n\n              rangeVertex = _step2.value;\n\n              if (!sourceRange.containsRange(rangeVertex.range)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return rangeVertex;\n\n            case 8:\n              _context2.next = 3;\n              break;\n\n            case 10:\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator2.e(_context2.t0);\n\n            case 15:\n              _context2.prev = 15;\n\n              _iterator2.f();\n\n              return _context2.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, rangeVerticesContainedInRange, this, [[1, 12, 15, 18]]);\n    })\n    /**\n     * Finds smaller range does have own vertex.\n     *\n     * @param rangeMapping - range mapping dependency\n     * @param ranges - ranges to find smaller range in\n     */\n\n  }, {\n    key: \"findSmallerRange\",\n    value: function findSmallerRange(range) {\n      if (range.height() > 1 && Number.isFinite(range.height())) {\n        var valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\n        var rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\n\n        if (rowLessVertex !== undefined) {\n          var restRange = new AbsoluteCellRange(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\n          return {\n            smallerRangeVertex: rowLessVertex,\n            restRange: restRange\n          };\n        }\n      }\n\n      return {\n        smallerRangeVertex: null,\n        restRange: range\n      };\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.rangeMapping.clear();\n    }\n  }, {\n    key: \"entriesFromSheet\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function entriesFromSheet(sheet) {\n      var sheetMap;\n      return _regeneratorRuntime.wrap(function entriesFromSheet$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              sheetMap = this.rangeMapping.get(sheet);\n\n              if (sheetMap) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              return _context3.delegateYield(sheetMap.entries(), \"t0\", 4);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, entriesFromSheet, this);\n    })\n  }, {\n    key: \"removeByKey\",\n    value: function removeByKey(sheet, key) {\n      this.rangeMapping.get(sheet).delete(key);\n    }\n  }, {\n    key: \"getByKey\",\n    value: function getByKey(sheet, key) {\n      var _a;\n\n      return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\n    }\n  }, {\n    key: \"updateVerticesFromSheet\",\n    value: function updateVerticesFromSheet(sheet, fn) {\n      var _this = this;\n\n      var updated = Array();\n\n      var _iterator3 = _createForOfIteratorHelper(this.entriesFromSheet(sheet)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              vertex = _step3$value[1];\n\n          var result = fn(key, vertex);\n\n          if (result !== undefined) {\n            this.removeByKey(sheet, key);\n            updated.push(result);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      updated.forEach(function (range) {\n        _this.setRange(range);\n      });\n    }\n  }]);\n\n  return RangeMapping;\n}();\n\nfunction keyFromAddresses(start, end) {\n  return \"\".concat(start.col, \",\").concat(start.row, \",\").concat(end.col, \",\").concat(end.row);\n}\n\nfunction keyFromRange(range) {\n  return keyFromAddresses(range.start, range.end);\n}\n\nvar compareBy = function compareBy(left, right, coordinate) {\n  var leftStart = coordinate(left.range.start);\n  var rightStart = coordinate(left.range.start);\n\n  if (leftStart === rightStart) {\n    var leftEnd = coordinate(left.range.end);\n    var rightEnd = coordinate(right.range.end);\n    return leftEnd - rightEnd;\n  } else {\n    return leftStart - rightStart;\n  }\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/DependencyGraph/RangeMapping.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err","Array","isArray","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","simpleCellAddress","RangeMapping","rangeMapping","Map","getMappingSize","sheet","_a","_b","get","size","setRange","vertex","sheetMap","getStart","undefined","set","keyFromAddresses","getEnd","removeRange","delete","getRange","start","end","fetchRange","maybeRange","Error","truncateRanges","span","coordinate","verticesToRemove","updated","_iterator","entriesFromSheet","_step","_step$value","_vertex","range","removeSpan","shouldBeRemoved","removeByKey","verticesToMerge","sort","left","right","compareBy","_updated","_updated$_i","oldKey","newKey","keyFromRange","existingVertex","getByKey","moveAllRangesInSheetAfterRowByRows","row","numberOfRows","updateVerticesFromSheet","shiftByRows","expandByRows","moveAllRangesInSheetAfterColumnByColumns","column","numberOfColumns","col","shiftByColumns","expandByColumns","moveRangesInsideSourceRange","sourceRange","toRight","toBottom","toSheet","containsRange","moveToSheet","removeRangesInSheet","has","ranges","values","mark","rangesInSheet","wrap","rangesInSheet$","_context","prev","abrupt","delegateYield","stop","rangeVerticesContainedInRange","_iterator2","_step2","rangeVertex","rangeVerticesContainedInRange$","_context2","t0","finish","findSmallerRange","height","Number","isFinite","valuesRangeEndRowLess","rowLessVertex","restRange","smallerRangeVertex","destroy","clear","entriesFromSheet$","_context3","entries","fn","_this","_iterator3","_step3","_step3$value","result","forEach","concat","leftStart","rightStart","leftEnd","rightEnd"],"mappings":"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","sourcesContent":["import \"regenerator-runtime/runtime.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.is-finite.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { simpleCellAddress } from '../Cell';\n/**\n * Mapping from address ranges to range vertices\n */\n\nexport var RangeMapping = /*#__PURE__*/function () {\n  function RangeMapping() {\n    _classCallCheck(this, RangeMapping);\n\n    /** Map in which actual data is stored. */\n    this.rangeMapping = new Map();\n  }\n\n  _createClass(RangeMapping, [{\n    key: \"getMappingSize\",\n    value: function getMappingSize(sheet) {\n      var _a, _b;\n\n      return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\n    }\n    /**\n     * Saves range vertex\n     *\n     * @param vertex - vertex to save\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(vertex) {\n      var sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\n\n      if (sheetMap === undefined) {\n        sheetMap = new Map();\n        this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\n      }\n\n      var key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n      sheetMap.set(key, vertex);\n    }\n  }, {\n    key: \"removeRange\",\n    value: function removeRange(vertex) {\n      var sheet = vertex.getStart().sheet;\n      var sheetMap = this.rangeMapping.get(sheet);\n\n      if (sheetMap === undefined) {\n        return;\n      }\n\n      var key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n      sheetMap.delete(key);\n\n      if (sheetMap.size === 0) {\n        this.rangeMapping.delete(sheet);\n      }\n    }\n    /**\n     * Returns associated vertex for given range\n     *\n     * @param start - top-left corner of the range\n     * @param end - bottom-right corner of the range\n     */\n\n  }, {\n    key: \"getRange\",\n    value: function getRange(start, end) {\n      var sheetMap = this.rangeMapping.get(start.sheet);\n      var key = keyFromAddresses(start, end);\n      return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\n    }\n  }, {\n    key: \"fetchRange\",\n    value: function fetchRange(start, end) {\n      var maybeRange = this.getRange(start, end);\n\n      if (!maybeRange) {\n        throw Error('Range does not exist');\n      }\n\n      return maybeRange;\n    }\n  }, {\n    key: \"truncateRanges\",\n    value: function truncateRanges(span, coordinate) {\n      var verticesToRemove = Array();\n      var updated = Array();\n      var sheet = span.sheet;\n\n      var _iterator = _createForOfIteratorHelper(this.entriesFromSheet(span.sheet)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              _vertex = _step$value[1];\n\n          var range = _vertex.range;\n\n          if (span.start <= coordinate(_vertex.range.end)) {\n            range.removeSpan(span);\n\n            if (range.shouldBeRemoved()) {\n              this.removeByKey(sheet, key);\n              verticesToRemove.push(_vertex);\n            } else {\n              updated.push([key, _vertex]);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var verticesToMerge = [];\n      updated.sort(function (left, right) {\n        return compareBy(left[1], right[1], coordinate);\n      });\n\n      for (var _i = 0, _updated = updated; _i < _updated.length; _i++) {\n        var _updated$_i = _slicedToArray(_updated[_i], 2),\n            oldKey = _updated$_i[0],\n            vertex = _updated$_i[1];\n\n        var newKey = keyFromRange(vertex.range);\n\n        if (newKey === oldKey) {\n          continue;\n        }\n\n        var existingVertex = this.getByKey(sheet, newKey);\n        this.removeByKey(sheet, oldKey);\n\n        if (existingVertex !== undefined && vertex != existingVertex) {\n          verticesToMerge.push([existingVertex, vertex]);\n        } else {\n          this.setRange(vertex);\n        }\n      }\n\n      return {\n        verticesToRemove: verticesToRemove,\n        verticesToMerge: verticesToMerge\n      };\n    }\n  }, {\n    key: \"moveAllRangesInSheetAfterRowByRows\",\n    value: function moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\n      this.updateVerticesFromSheet(sheet, function (key, vertex) {\n        if (row <= vertex.start.row) {\n          vertex.range.shiftByRows(numberOfRows);\n          return vertex;\n        } else if (row > vertex.start.row && row <= vertex.end.row) {\n          vertex.range.expandByRows(numberOfRows);\n          return vertex;\n        } else {\n          return undefined;\n        }\n      });\n    }\n  }, {\n    key: \"moveAllRangesInSheetAfterColumnByColumns\",\n    value: function moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\n      this.updateVerticesFromSheet(sheet, function (key, vertex) {\n        if (column <= vertex.start.col) {\n          vertex.range.shiftByColumns(numberOfColumns);\n          return vertex;\n        } else if (column > vertex.start.col && column <= vertex.end.col) {\n          vertex.range.expandByColumns(numberOfColumns);\n          return vertex;\n        } else {\n          return undefined;\n        }\n      });\n    }\n  }, {\n    key: \"moveRangesInsideSourceRange\",\n    value: function moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\n      this.updateVerticesFromSheet(sourceRange.sheet, function (key, vertex) {\n        if (sourceRange.containsRange(vertex.range)) {\n          vertex.range.shiftByColumns(toRight);\n          vertex.range.shiftByRows(toBottom);\n          vertex.range.moveToSheet(toSheet);\n          return vertex;\n        } else {\n          return undefined;\n        }\n      });\n    }\n  }, {\n    key: \"removeRangesInSheet\",\n    value: function removeRangesInSheet(sheet) {\n      if (this.rangeMapping.has(sheet)) {\n        var ranges = this.rangeMapping.get(sheet).values();\n        this.rangeMapping.delete(sheet);\n        return ranges;\n      }\n\n      return [][Symbol.iterator]();\n    }\n  }, {\n    key: \"rangesInSheet\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function rangesInSheet(sheet) {\n      var sheetMap;\n      return regeneratorRuntime.wrap(function rangesInSheet$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sheetMap = this.rangeMapping.get(sheet);\n\n              if (sheetMap) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              return _context.delegateYield(sheetMap.values(), \"t0\", 4);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, rangesInSheet, this);\n    })\n  }, {\n    key: \"rangeVerticesContainedInRange\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function rangeVerticesContainedInRange(sourceRange) {\n      var _iterator2, _step2, rangeVertex;\n\n      return regeneratorRuntime.wrap(function rangeVerticesContainedInRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(this.rangesInSheet(sourceRange.sheet));\n              _context2.prev = 1;\n\n              _iterator2.s();\n\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context2.next = 10;\n                break;\n              }\n\n              rangeVertex = _step2.value;\n\n              if (!sourceRange.containsRange(rangeVertex.range)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return rangeVertex;\n\n            case 8:\n              _context2.next = 3;\n              break;\n\n            case 10:\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator2.e(_context2.t0);\n\n            case 15:\n              _context2.prev = 15;\n\n              _iterator2.f();\n\n              return _context2.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, rangeVerticesContainedInRange, this, [[1, 12, 15, 18]]);\n    })\n    /**\n     * Finds smaller range does have own vertex.\n     *\n     * @param rangeMapping - range mapping dependency\n     * @param ranges - ranges to find smaller range in\n     */\n\n  }, {\n    key: \"findSmallerRange\",\n    value: function findSmallerRange(range) {\n      if (range.height() > 1 && Number.isFinite(range.height())) {\n        var valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\n        var rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\n\n        if (rowLessVertex !== undefined) {\n          var restRange = new AbsoluteCellRange(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\n          return {\n            smallerRangeVertex: rowLessVertex,\n            restRange: restRange\n          };\n        }\n      }\n\n      return {\n        smallerRangeVertex: null,\n        restRange: range\n      };\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.rangeMapping.clear();\n    }\n  }, {\n    key: \"entriesFromSheet\",\n    value: /*#__PURE__*/regeneratorRuntime.mark(function entriesFromSheet(sheet) {\n      var sheetMap;\n      return regeneratorRuntime.wrap(function entriesFromSheet$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              sheetMap = this.rangeMapping.get(sheet);\n\n              if (sheetMap) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              return _context3.delegateYield(sheetMap.entries(), \"t0\", 4);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, entriesFromSheet, this);\n    })\n  }, {\n    key: \"removeByKey\",\n    value: function removeByKey(sheet, key) {\n      this.rangeMapping.get(sheet).delete(key);\n    }\n  }, {\n    key: \"getByKey\",\n    value: function getByKey(sheet, key) {\n      var _a;\n\n      return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\n    }\n  }, {\n    key: \"updateVerticesFromSheet\",\n    value: function updateVerticesFromSheet(sheet, fn) {\n      var _this = this;\n\n      var updated = Array();\n\n      var _iterator3 = _createForOfIteratorHelper(this.entriesFromSheet(sheet)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              vertex = _step3$value[1];\n\n          var result = fn(key, vertex);\n\n          if (result !== undefined) {\n            this.removeByKey(sheet, key);\n            updated.push(result);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      updated.forEach(function (range) {\n        _this.setRange(range);\n      });\n    }\n  }]);\n\n  return RangeMapping;\n}();\n\nfunction keyFromAddresses(start, end) {\n  return \"\".concat(start.col, \",\").concat(start.row, \",\").concat(end.col, \",\").concat(end.row);\n}\n\nfunction keyFromRange(range) {\n  return keyFromAddresses(range.start, range.end);\n}\n\nvar compareBy = function compareBy(left, right, coordinate) {\n  var leftStart = coordinate(left.range.start);\n  var rightStart = coordinate(left.range.start);\n\n  if (leftStart === rightStart) {\n    var leftEnd = coordinate(left.range.end);\n    var rightEnd = coordinate(right.range.end);\n    return leftEnd - rightEnd;\n  } else {\n    return leftStart - rightStart;\n  }\n};"]},"metadata":{},"sourceType":"module"}