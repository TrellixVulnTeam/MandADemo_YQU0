{"ast":null,"code":"var _jsxFileName = \"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HotTable, HotColumn } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.min.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableTitle = {\n  \"Always Available\": [\"Employee Unique ID\"],\n  \"Core People Data\": [\"First Name\", \"Last Name\", \"Email\", \"Company\", \"Legal Entity\", \"Employee Status\", \"Employee Type\", \"Date of Hire\", \"Immigration Supported\", \"Office/\\nLocation\", \"Remote working\", \"Current Job Level\", \"Current Job Title\", \"Current Job Family Group\", \"Function\"],\n  \"M&A Integration Process\": [\"Uber EEID\", \"In Deal (Y/N)\", \"WAVE\", \"Disposition\", \"Cohort\", \"Reason left Deal\", \"Date Left\"],\n  \"Legal\": [\"Gender\", \"Date of Birth\", \"Race/Ethnicity\", \"Nationality\", \"Supervisor Unique ID\", \"Supervisor Organization\", \"Supervisor Email\", \"AIA Flag\", \"Legal Hold\", \"Garden Leave\", \"Employee Transfer Decision\", \"Talent Release Justification\", \"Notification Date\", \"Last Day Worked\", \"Termination Date\", \"Office location\", \"Disposition\"],\n  \"Immigration\": [\"Immigration Supported\", \"Immigration Status\", \"Visa Expiration\", \"Can start on Day 1?\", \"Eligible for Immi Garden Leave\"],\n  \"Mobility\": [\"On Assignment (Y/N)\", \"Assignment end date\", \"Relocation (Y/N)\"],\n  \"Comp (PM)\": [\"Previous Base Salary\", \"Previous Total Cash\", \"Previous Equity holdings\", \"Vesting Schedule\", \"Shares per Vest Cycle\", \"Uber Location\", \"Uber Job Ladder\", \"Uber Level\", \"Uber Base\", \"Uber Bonus\", \"Uber Equity\"],\n  \"Comp (M&A)\": [\"???Here\"],\n  \"TA\": [null],\n  \"Welcome / POps\": [\"Email Address\", \"Name\", \"Personal Email\", \"EEID\", \"Job Title\", \"Manager\", \"Uber Office Location\", \"Base Salary\", \"Bonus Target\", \"New Hire Grant\", \"Bridge Bonus\", \"Retention Bonus\"],\n  \"Separation / POps\": [\"Email Address\", \"Name\", \"Personal Email\", \"EEID\", \"Disposition\", \"Name\", \"Personal Email\", \"Original Start Date\", \"Tenured Uber \\n(Years + Quarters)\", \"Current Unvested Equity\", \"Weekly Salary\", \"2 weeks pay\", \"Base Severance\\n( 4 weeks) \", \"Tenure Severance\", \"Uber Severance\\n( Base + Tenure)\", \"Uber Severance less Equity\", \"Is equity greater than Uber severance? (greater/ Less)\", \"Final Severance amount\", \"COBRA amount\", \"6 Month Benefits Cash Payment\", \"LOA Flag?\", \"Immigration Check\", \"Severance template\", \"Hourly Rate\", \"Hours per Week\", \"Integration Bonus\", \"Location\", \"CA or Non CA\", \"Date of Birth\", \"Age\", \"Job Title\", \"Uber Severance Policy\", \"WARN check\"]\n}; // usertype / which section should be displayed\n\nconst userGroup = {\n  \"admin\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"M&A Integration Proces\", \"Legal\", \"Immigration\", \"Mobility\", \"EIB (onboard into WD)\", \"Comp (M&A)\", \"Welcome / POps\", \"Separation / POps\", \"HR\"],\n  \"Legal\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"Legal\", \"Immigration\", \"Comp (M&A)\"],\n  \"Welcome\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"Mobility\", \"Welcome / POps\"],\n  \"Separation\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"Mobility\", \"Separation / POps\"]\n};\nconst mockSectionData = {\n  \"Employee Unique ID (Fixed Section)\": 'Employee Unique ID',\n  \"Core People Data\": 'First Name\tLast Name\tEmail\tCompany\tLegal Entity\tEmployee Status\tEmployee Type\tDate of Hire\tImmigration Supported\tOffice/\\nLocation\tRemote working\tCurrent Job Level\tCurrent Job Title\tCurrent Job Family Group\tFunction',\n  'M&A Integration Proces': 'Uber EEID\tIn Deal (Y/N)\tWAVE\tDisposition\tCohort\tReason left Deal\tDate Left',\n  'Legal': 'Gender\tDate of Birth\tRace/Ethnicity\tNationality\tSupervisor Unique ID\tSupervisor Organization\tSupervisor Email\tAIA Flag\tLegal Hold\tGarden Leave\tEmployee Transfer Decision\tTalent Release Justification\tNotification Date\tLast Day Worked\tTermination Date\tOffice location\tDisposition',\n  'Immigration': 'Immigration Supported\tImmigration Status\tVisa Expiration\tCan start on Day 1?\tEligible for Immi Garden Leave',\n  'Mobility': 'On Assignment (Y/N)\tAssignment end date\tRelocation (Y/N)',\n  'EIB (onboard into WD)': `Employee ID\tManager's Employee ID\tSupervisory Organization Reference ID\tPosition ID\tJob Posting Title\tAvailability Date\tEarliest Hire Date\tCountry (Alpha-3 Code)\tPrefix\tLegal First Name\tLegal Middle Name\tLegal Last Name\tSuffix\tPersonal Email Address\tHire Reason Code\tHire Date\tOriginal Hire Date\tEmployee Type\tContinuous Service Date\tConversion Position Start Date\tJob Profile (Job Code)\tPosition Title\tBusiness Title\tLocation\tLocation ID\tTime Type\tWork Shift\tDefault Hours\tScheduled Hours\tFTE Validation\tPay Rate Type\tCompensation Package\tCompensation Grade\tCompensation Grade ID\tCompensation Grade Profile\tCompensation Grade Profile ID\tBase Pay Plan\tBase Pay Amount\tBase Pay Currency\tBase Pay Frequency\tAllowance Plan 1\tAllowance Plan 1 Reference ID\tAllowance 1 Amount\tAllowance 1 Frequency\tBonus Plan\tBonus Plan ID\tBonus Plan Amount\tBonus Plan Percent\tPeriod Salary Plan\tPeriod Salary Plan ID\tCommission Plan\tCommission Plan ID\tCommission Plan Target Amount\tDraw Amount\tDraw Frequency\tDraw Duration\tRecoverable?\tCompany\tCompany ID\tCost Center\tCost Center ID\tMarket\tMarket ID\tLine of Business\tLine of Business ID\tPay Group\tPay Group ID\tWork Email/User Name\tContract Start Date\tContract End Date\tContract Status\tPosition Reference\tAddress Line 1\tAddress Line 2\tAddress Line 3\tAddress Line 4\tCity\tState/Region\tPostal Code\tCountry\tUse For\tOne-Time Payment Plan\tEffective Date\tScheduled Payment Date\tAmount\tCurrency\tSend to Payroll?`,\n  'Comp (M&A)': `Job Profile\tJob Family\tJob Level\tPay Rate Type`,\n  'Welcome / POps': `Email Address\tName\tPersonal Email\tEEID\tJob Title\tManager\tUber Office Location\tBase Salary\tBonus Target\tNew Hire Grant\tBridge Bonus\tRetention Bonus`,\n  'Separation / POps': `Email Address\tName\tPersonal Email\tEEID\tDisposition\tOriginal Start Date\t\"Tenured Uber \n  (Years + Quarters)\"\tCurrent Unvested Equity\tWeekly Salary\t2 weeks pay\t\"Base Severance\n  ( 4 weeks) \"\tTenure Severance\t\"Uber Severance\n  ( Base + Tenure)\"\tUber Severance less Equity\tIs equity greater than Uber severance? (greater/ Less)\tFinal Severance amount\tCOBRA amount\t6 Month Benefits Cash Payment\tLOA Flag?\tImmigration Check\tSeverance template\tHourly Rate\tHours per Week\tIntegration Bonus\tLocation\tCA or Non CA\tDate of Birth\tAge\tJob Title\tUber Severance Policy\tWARN check`,\n  'HR': `Supervisory Org\tELT\tELT+1`\n};\n\nconst cleanRawSectionData = rawData => {\n  let currentIndex = 0;\n  let cleanedData = {};\n  Object.entries(rawData).forEach(([key, value], index) => {\n    let tempSplitArr = value.split('\\t');\n    cleanedData[key] = [tempSplitArr, tempSplitArr.length, currentIndex];\n    currentIndex += tempSplitArr.length;\n  });\n  return cleanedData;\n};\n\nconst cleanSectionData = cleanRawSectionData(mockSectionData);\n\nconst generateNestedHeaders = sectionData => {\n  return [// get overall title\n  Object.keys(sectionData).map(key => {\n    return {\n      label: key,\n      colspan: sectionData[key][1]\n    };\n  }), // get all sub titles\n  Object.values(sectionData).reduce((previous, value) => {\n    return previous.concat(value[0]);\n  }, [])];\n};\n\nconst nestedHeaders = generateNestedHeaders(cleanSectionData);\nconst mockRawData = [['ABC_100000\tJohn\tSmith\tjsmith@abc.com\tABC\tABC US Ltd\tActive\tEmployee \t01/01/2010\tY\tDallas, TX\tYes\t6\tData Analyst\tAnalysts\tSupport', 'ABC_100000\tY\t2\t\t\t\t', 'Male\t01/01/1970\tWhite\tAmerican\t1234\tAnalytics\tpburke@abc.com\tResult of AIA analysis\t\tNo\t\t\t\t\t\t\t', 'Y\tL-1A\t11/2/2022\tY\tY', 'Y\t12/2022\tY', '545454\tABC_100000\tWFM Team - Krakow (Manas Kapoor)\t65652\tEngineer\t11/1/2021\t11/1/2021\tUSA\tMr\tJohn\tWilliam\tJohnson\t\twilliams@gmail.com\t98\t11/1/2021\t11/1/2021\tIC\t11/1/2021\t11/1/2021\t65\tEngineer\tEngineer\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t240000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'Operations Engineer\tEngineering\tLevel 4\tSalary', 'jma@uber.com\tJim James\tjim@gmail.com\t233442\tEngineer\tJack Edwars\tSan Francisco\t150000\t35000\t250000\t120000\t12000', 'jma@uber.com\tJim Jones\tjim@gmail.com\t233442\t2B\t9/9/2018\t2\t100000\t3000\t6000\t11200\t5000\t16200\tY\tLess\t20100\t4000\t12000\tNA\tY\tSent\t24\t40\t2300\tSan Francisco\tCA   \t11/7/1982\t39\tEngineer II\t\tNA', 'WFM Team - Krakow (Manas Kapoor)\tJill Hazelbaker\tThomas Ranese'], ['XYZ_100000\tRaj\tPatel\traj.patel@xyz.com\tXYZ\tXYZ Canada Sub\tActive\tContractor\t12/01/2002\tY\tQuebec, Canada\tYes\t4\tData Engineer\tEngineering\tSupport', 'XYZ_100000\tY\t2\t\t\t\t', 'Male\t08/25/1980\tAsian\tIndian\t456788\tEngineering\ttim.copling@xyz.com\t\t\tNo\t\t\t09/01/2021\t10/01/2021\t10/01/2021\t\t', 'N\tH-1B\t1/21/2013\tN \tNA', 'N\tNA\tN', '678345\tXYZ_100000\tEats Support (Katarzyna Barbara Musia≈Ç)\t9781\tSales Lead\t10/15/2021\t10/15/2021\tCDA\tMrs\tLisa\tMaria\tJones\t\tJones@gmail.com\t121\t10/15/2021\t10/15/2021\tMgr\t10/15/2021\t10/15/2021\t34\tSales Lead\tGlobal Sales Lead\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t400000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t', 'Software Engineer\tEngineering\tLevel 5\tSalary', 'joan@uber.com\tJoan Davis\tjd1232@gmail.com\t453222\tSales Manager\tJill Beans\tSan Francisco\t150000\t45000\t250000\t10000\t12000', 'joan@uber.com\tJoan Williams\tjd1232@gmail.com\t453222\t1A\t10/1/2020\t1\t210000\t2300\t2600\t11000\t3000\t14000\tN\tGreater\t17800\t4000\t12000\tNA\tY\tSent\t32\t40\t2300\tChicago\tNon CA\t6/6/1988\t33\tSales Manager\t\tNA', 'Eats Support (Katarzyna Barbara Musia≈Ç)\tAndrew Macdonald\tAnabel Diaz']];\n\nconst cleanRawData = rawDataArr => {\n  let cleanedData = [];\n  rawDataArr.forEach(rawData => {\n    cleanedData.push(rawData.reduce((prev, data) => {\n      return prev.concat(data.split('\\t'));\n    }, []));\n  });\n  return cleanedData;\n};\n\nconst cleanData = cleanRawData(mockRawData); // let demoData = Handsontable.helper.createSpreadsheetData(20, nestedHeaders[1].length);\n\nlet hiddenCategoryArr = [];\n\nfunction App() {\n  _s();\n\n  const hotTable = useRef();\n  const [hiddenColumnArr, setHiddenColumnArr] = useState([]);\n  const [activeUser, setActiveUser] = useState('admin');\n  useEffect(() => {\n    // collapse all titles\n    if (hotTable.current) {\n      hotTable.current.hotInstance.getPlugin(\"collapsibleColumns\").collapseAll();\n      hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").hideColumns(hiddenColumnArr);\n      hotTable.current.hotInstance.render();\n    }\n  });\n\n  const testAfterChange = changes => {\n    if (!changes) return;\n    let [row, col, preValue, afterValue] = changes[0];\n    if (preValue === afterValue) return;\n    alert(`value at row: ${row}, col: ${col} has changed from ${preValue} to ${afterValue}`);\n  };\n\n  const resetTable = () => {\n    // reset the table in to default condition\n    let prevHiddenColumn = hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").getHiddenColumns();\n    hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").showColumns(prevHiddenColumn);\n  };\n\n  const convertCategoryToColumn = () => {\n    if (!hiddenCategoryArr) {\n      setHiddenColumnArr([]);\n      return;\n    }\n\n    let newHiddenColumn = [];\n    let index = 0;\n    Object.entries(tableTitle).forEach(([key, value], _) => {\n      if (hiddenCategoryArr.includes(key)) {\n        newHiddenColumn = newHiddenColumn.concat(Array.from({\n          length: value.length\n        }, (_, i) => i + index));\n      }\n\n      index += value.length;\n    });\n    setHiddenColumnArr(newHiddenColumn);\n  };\n\n  const hideColumnBasedOnUser = userType => {\n    // change active user\n    setActiveUser(userType); // hide column based on its corresponding userType\n\n    hiddenCategoryArr = [];\n    hideColumnBasedOnSelect(userGroup[userType]);\n  };\n\n  const hideColumnBasedOnSelect = (titles, individualFlag = false) => {\n    if (!hotTable.current) return;\n    resetTable();\n\n    if (individualFlag) {\n      let title = titles[0];\n      let index = Object.keys(tableTitle).indexOf(title);\n      let currentElement = document.getElementById(`title-${index}`);\n\n      if (hiddenCategoryArr.includes(title)) {\n        const tempIndex = hiddenCategoryArr.indexOf(title);\n\n        if (tempIndex > -1) {\n          hiddenCategoryArr.splice(tempIndex, 1);\n          currentElement.classList.add('active');\n        }\n      } else {\n        hiddenCategoryArr.push(title);\n        currentElement.classList.remove('active');\n      }\n    } else {\n      Object.keys(tableTitle).forEach((title, index) => {\n        let currentElement = document.getElementById(`title-${index}`);\n\n        if (titles.includes(title)) {\n          if (hiddenCategoryArr.includes(title)) {\n            const tempIndex = hiddenCategoryArr.indexOf(title);\n\n            if (tempIndex > -1) {\n              hiddenCategoryArr.splice(tempIndex, 1);\n              currentElement.classList.add('active');\n            }\n          } else {\n            hiddenCategoryArr.push(title);\n            currentElement.classList.remove('active');\n          }\n        } else {\n          currentElement.classList.add('active');\n        }\n      });\n    }\n\n    convertCategoryToColumn();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"app-title\",\n      children: \"M&A Data Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-role-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"click below buttons to switch between different user types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), Object.keys(userGroup).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `app-button ${key === activeUser ? \"active\" : \"\"}`,\n          onClick: () => hideColumnBasedOnUser(key),\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-user\",\n        children: [\"Current User is \", activeUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-column-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"click below buttons to hide certain column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), Object.keys(tableTitle).map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-button active\",\n          id: `title-${index}`,\n          onClick: () => hideColumnBasedOnSelect([key], true),\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotTable, {\n      id: \"app-table\",\n      ref: hotTable,\n      data: cleanData,\n      height: 500,\n      width: \"100%\",\n      colWidths: 250,\n      search: true,\n      nestedHeaders: nestedHeaders,\n      collapsibleColumns: true,\n      dropdownMenu: true,\n      multiColumnSorting: true,\n      filters: true,\n      rowHeaders: true,\n      fixedColumnsLeft: 1,\n      manualColumnResize: true,\n      manualRowResize: true,\n      manualRowMove: true,\n      hiddenColumns: true,\n      afterChange: changes => testAfterChange(changes),\n      licenseKey: \"non-commercial-and-evaluation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jFQK+1wSBkFZUnF9G1rS6ZTQkZU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/src/App.js"],"names":["React","useEffect","useRef","useState","Handsontable","HotTable","HotColumn","tableTitle","userGroup","mockSectionData","cleanRawSectionData","rawData","currentIndex","cleanedData","Object","entries","forEach","key","value","index","tempSplitArr","split","length","cleanSectionData","generateNestedHeaders","sectionData","keys","map","label","colspan","values","reduce","previous","concat","nestedHeaders","mockRawData","cleanRawData","rawDataArr","push","prev","data","cleanData","hiddenCategoryArr","App","hotTable","hiddenColumnArr","setHiddenColumnArr","activeUser","setActiveUser","current","hotInstance","getPlugin","collapseAll","hideColumns","render","testAfterChange","changes","row","col","preValue","afterValue","alert","resetTable","prevHiddenColumn","getHiddenColumns","showColumns","convertCategoryToColumn","newHiddenColumn","_","includes","Array","from","i","hideColumnBasedOnUser","userType","hideColumnBasedOnSelect","titles","individualFlag","title","indexOf","currentElement","document","getElementById","tempIndex","splice","classList","add","remove"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HotTable, HotColumn } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.min.css\";\nimport \"./App.css\";\n\nconst tableTitle = {\n  \"Always Available\": [\"Employee Unique ID\"],\n  \"Core People Data\": [\"First Name\", \"Last Name\", \"Email\", \"Company\", \"Legal Entity\", \"Employee Status\", \"Employee Type\", \"Date of Hire\", \"Immigration Supported\", \"Office/\\nLocation\", \"Remote working\", \"Current Job Level\", \"Current Job Title\", \"Current Job Family Group\", \"Function\"],\n  \"M&A Integration Process\": [\"Uber EEID\", \"In Deal (Y/N)\", \"WAVE\", \"Disposition\", \"Cohort\", \"Reason left Deal\", \"Date Left\"],\n  \"Legal\": [\"Gender\", \"Date of Birth\", \"Race/Ethnicity\", \"Nationality\", \"Supervisor Unique ID\", \"Supervisor Organization\", \"Supervisor Email\", \"AIA Flag\", \"Legal Hold\", \"Garden Leave\", \"Employee Transfer Decision\", \"Talent Release Justification\", \"Notification Date\", \"Last Day Worked\", \"Termination Date\", \"Office location\", \"Disposition\"],\n  \"Immigration\": [\"Immigration Supported\", \"Immigration Status\", \"Visa Expiration\", \"Can start on Day 1?\", \"Eligible for Immi Garden Leave\"],\n  \"Mobility\": [\"On Assignment (Y/N)\", \"Assignment end date\", \"Relocation (Y/N)\"],\n  \"Comp (PM)\": [\"Previous Base Salary\", \"Previous Total Cash\", \"Previous Equity holdings\", \"Vesting Schedule\", \"Shares per Vest Cycle\", \"Uber Location\", \"Uber Job Ladder\", \"Uber Level\", \"Uber Base\", \"Uber Bonus\", \"Uber Equity\"],\n  \"Comp (M&A)\": [\"???Here\"],\n  \"TA\": [null],\n  \"Welcome / POps\": [\"Email Address\", \"Name\", \"Personal Email\", \"EEID\", \"Job Title\", \"Manager\", \"Uber Office Location\", \"Base Salary\", \"Bonus Target\", \"New Hire Grant\", \"Bridge Bonus\", \"Retention Bonus\"],\n  \"Separation / POps\": [\"Email Address\", \"Name\", \"Personal Email\", \"EEID\", \"Disposition\", \"Name\", \"Personal Email\", \"Original Start Date\", \"Tenured Uber \\n(Years + Quarters)\", \"Current Unvested Equity\", \"Weekly Salary\", \"2 weeks pay\", \"Base Severance\\n( 4 weeks) \", \"Tenure Severance\", \"Uber Severance\\n( Base + Tenure)\", \"Uber Severance less Equity\", \"Is equity greater than Uber severance? (greater/ Less)\", \"Final Severance amount\", \"COBRA amount\", \"6 Month Benefits Cash Payment\", \"LOA Flag?\", \"Immigration Check\", \"Severance template\", \"Hourly Rate\", \"Hours per Week\", \"Integration Bonus\", \"Location\", \"CA or Non CA\", \"Date of Birth\", \"Age\", \"Job Title\", \"Uber Severance Policy\", \"WARN check\"],\n}\n\n// usertype / which section should be displayed\nconst userGroup = {\n  \"admin\": [\n    \"Employee Unique ID (Fixed Section)\",\n    \"Core People Data\",\n    \"M&A Integration Proces\",\n    \"Legal\",\n    \"Immigration\",\n    \"Mobility\",\n    \"EIB (onboard into WD)\",\n    \"Comp (M&A)\",\n    \"Welcome / POps\",\n    \"Separation / POps\",\n    \"HR\"\n  ],\n  \"Legal\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"Legal\", \"Immigration\", \"Comp (M&A)\"],\n  \"Welcome\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"Mobility\", \"Welcome / POps\"],\n  \"Separation\": [\"Employee Unique ID (Fixed Section)\", \"Core People Data\", \"Mobility\", \"Separation / POps\"]\n}\n\nconst mockSectionData = {\n  \"Employee Unique ID (Fixed Section)\": 'Employee Unique ID',\n  \"Core People Data\": 'First Name\tLast Name\tEmail\tCompany\tLegal Entity\tEmployee Status\tEmployee Type\tDate of Hire\tImmigration Supported\tOffice/\\nLocation\tRemote working\tCurrent Job Level\tCurrent Job Title\tCurrent Job Family Group\tFunction',\n  'M&A Integration Proces': 'Uber EEID\tIn Deal (Y/N)\tWAVE\tDisposition\tCohort\tReason left Deal\tDate Left',\n  'Legal': 'Gender\tDate of Birth\tRace/Ethnicity\tNationality\tSupervisor Unique ID\tSupervisor Organization\tSupervisor Email\tAIA Flag\tLegal Hold\tGarden Leave\tEmployee Transfer Decision\tTalent Release Justification\tNotification Date\tLast Day Worked\tTermination Date\tOffice location\tDisposition',\n  'Immigration': 'Immigration Supported\tImmigration Status\tVisa Expiration\tCan start on Day 1?\tEligible for Immi Garden Leave',\n  'Mobility': 'On Assignment (Y/N)\tAssignment end date\tRelocation (Y/N)',\n  'EIB (onboard into WD)': `Employee ID\tManager's Employee ID\tSupervisory Organization Reference ID\tPosition ID\tJob Posting Title\tAvailability Date\tEarliest Hire Date\tCountry (Alpha-3 Code)\tPrefix\tLegal First Name\tLegal Middle Name\tLegal Last Name\tSuffix\tPersonal Email Address\tHire Reason Code\tHire Date\tOriginal Hire Date\tEmployee Type\tContinuous Service Date\tConversion Position Start Date\tJob Profile (Job Code)\tPosition Title\tBusiness Title\tLocation\tLocation ID\tTime Type\tWork Shift\tDefault Hours\tScheduled Hours\tFTE Validation\tPay Rate Type\tCompensation Package\tCompensation Grade\tCompensation Grade ID\tCompensation Grade Profile\tCompensation Grade Profile ID\tBase Pay Plan\tBase Pay Amount\tBase Pay Currency\tBase Pay Frequency\tAllowance Plan 1\tAllowance Plan 1 Reference ID\tAllowance 1 Amount\tAllowance 1 Frequency\tBonus Plan\tBonus Plan ID\tBonus Plan Amount\tBonus Plan Percent\tPeriod Salary Plan\tPeriod Salary Plan ID\tCommission Plan\tCommission Plan ID\tCommission Plan Target Amount\tDraw Amount\tDraw Frequency\tDraw Duration\tRecoverable?\tCompany\tCompany ID\tCost Center\tCost Center ID\tMarket\tMarket ID\tLine of Business\tLine of Business ID\tPay Group\tPay Group ID\tWork Email/User Name\tContract Start Date\tContract End Date\tContract Status\tPosition Reference\tAddress Line 1\tAddress Line 2\tAddress Line 3\tAddress Line 4\tCity\tState/Region\tPostal Code\tCountry\tUse For\tOne-Time Payment Plan\tEffective Date\tScheduled Payment Date\tAmount\tCurrency\tSend to Payroll?`,\n  'Comp (M&A)': `Job Profile\tJob Family\tJob Level\tPay Rate Type`,\n  'Welcome / POps': `Email Address\tName\tPersonal Email\tEEID\tJob Title\tManager\tUber Office Location\tBase Salary\tBonus Target\tNew Hire Grant\tBridge Bonus\tRetention Bonus`,\n  'Separation / POps': `Email Address\tName\tPersonal Email\tEEID\tDisposition\tOriginal Start Date\t\"Tenured Uber \n  (Years + Quarters)\"\tCurrent Unvested Equity\tWeekly Salary\t2 weeks pay\t\"Base Severance\n  ( 4 weeks) \"\tTenure Severance\t\"Uber Severance\n  ( Base + Tenure)\"\tUber Severance less Equity\tIs equity greater than Uber severance? (greater/ Less)\tFinal Severance amount\tCOBRA amount\t6 Month Benefits Cash Payment\tLOA Flag?\tImmigration Check\tSeverance template\tHourly Rate\tHours per Week\tIntegration Bonus\tLocation\tCA or Non CA\tDate of Birth\tAge\tJob Title\tUber Severance Policy\tWARN check`,\n  'HR': `Supervisory Org\tELT\tELT+1`\n}\n\nconst cleanRawSectionData = (rawData) => {\n  let currentIndex = 0;\n  let cleanedData = {};\n  Object.entries(rawData).forEach(([key, value], index) => {\n    let tempSplitArr = value.split('\\t');\n    cleanedData[key] = [tempSplitArr, tempSplitArr.length, currentIndex];\n    currentIndex += tempSplitArr.length;\n  });\n  return cleanedData;\n};\nconst cleanSectionData = cleanRawSectionData(mockSectionData);\n\nconst generateNestedHeaders = (sectionData) => {\n  return [\n    // get overall title\n    Object.keys(sectionData).map((key) => {\n      return {\n        label: key,\n        colspan: sectionData[key][1],\n      };\n    }),\n    // get all sub titles\n    Object.values(sectionData).reduce((previous, value) => {\n      return previous.concat(value[0]);\n    }, [])\n  ]\n};\nconst nestedHeaders = generateNestedHeaders(cleanSectionData);\n\nconst mockRawData = [[\n  'ABC_100000\tJohn\tSmith\tjsmith@abc.com\tABC\tABC US Ltd\tActive\tEmployee \t01/01/2010\tY\tDallas, TX\tYes\t6\tData Analyst\tAnalysts\tSupport',\n  'ABC_100000\tY\t2\t\t\t\t',\n  'Male\t01/01/1970\tWhite\tAmerican\t1234\tAnalytics\tpburke@abc.com\tResult of AIA analysis\t\tNo\t\t\t\t\t\t\t',\n  'Y\tL-1A\t11/2/2022\tY\tY',\n  'Y\t12/2022\tY',\n  '545454\tABC_100000\tWFM Team - Krakow (Manas Kapoor)\t65652\tEngineer\t11/1/2021\t11/1/2021\tUSA\tMr\tJohn\tWilliam\tJohnson\t\twilliams@gmail.com\t98\t11/1/2021\t11/1/2021\tIC\t11/1/2021\t11/1/2021\t65\tEngineer\tEngineer\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t240000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Operations Engineer\tEngineering\tLevel 4\tSalary',\n  'jma@uber.com\tJim James\tjim@gmail.com\t233442\tEngineer\tJack Edwars\tSan Francisco\t150000\t35000\t250000\t120000\t12000',\n  'jma@uber.com\tJim Jones\tjim@gmail.com\t233442\t2B\t9/9/2018\t2\t100000\t3000\t6000\t11200\t5000\t16200\tY\tLess\t20100\t4000\t12000\tNA\tY\tSent\t24\t40\t2300\tSan Francisco\tCA   \t11/7/1982\t39\tEngineer II\t\tNA',\n  'WFM Team - Krakow (Manas Kapoor)\tJill Hazelbaker\tThomas Ranese'\n], [\n  'XYZ_100000\tRaj\tPatel\traj.patel@xyz.com\tXYZ\tXYZ Canada Sub\tActive\tContractor\t12/01/2002\tY\tQuebec, Canada\tYes\t4\tData Engineer\tEngineering\tSupport',\n  'XYZ_100000\tY\t2\t\t\t\t',\n  'Male\t08/25/1980\tAsian\tIndian\t456788\tEngineering\ttim.copling@xyz.com\t\t\tNo\t\t\t09/01/2021\t10/01/2021\t10/01/2021\t\t',\n  'N\tH-1B\t1/21/2013\tN \tNA',\n  'N\tNA\tN',\n  '678345\tXYZ_100000\tEats Support (Katarzyna Barbara Musia≈Ç)\t9781\tSales Lead\t10/15/2021\t10/15/2021\tCDA\tMrs\tLisa\tMaria\tJones\t\tJones@gmail.com\t121\t10/15/2021\t10/15/2021\tMgr\t10/15/2021\t10/15/2021\t34\tSales Lead\tGlobal Sales Lead\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t400000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Software Engineer\tEngineering\tLevel 5\tSalary',\n  'joan@uber.com\tJoan Davis\tjd1232@gmail.com\t453222\tSales Manager\tJill Beans\tSan Francisco\t150000\t45000\t250000\t10000\t12000',\n  'joan@uber.com\tJoan Williams\tjd1232@gmail.com\t453222\t1A\t10/1/2020\t1\t210000\t2300\t2600\t11000\t3000\t14000\tN\tGreater\t17800\t4000\t12000\tNA\tY\tSent\t32\t40\t2300\tChicago\tNon CA\t6/6/1988\t33\tSales Manager\t\tNA',\n  'Eats Support (Katarzyna Barbara Musia≈Ç)\tAndrew Macdonald\tAnabel Diaz'\n]\n]\n\nconst cleanRawData = (rawDataArr) => {\n  let cleanedData = [];\n  rawDataArr.forEach((rawData) => {\n    cleanedData.push(rawData.reduce((prev, data) => {\n      return prev.concat(data.split('\\t'));\n    }, []))\n  });\n  return cleanedData;\n};\n\nconst cleanData = cleanRawData(mockRawData);\n\n\n\n\n// let demoData = Handsontable.helper.createSpreadsheetData(20, nestedHeaders[1].length);\nlet hiddenCategoryArr = [];\n\nfunction App() {\n\n  const hotTable = useRef();\n  const [hiddenColumnArr, setHiddenColumnArr] = useState([]);\n  const [activeUser, setActiveUser] = useState('admin');\n\n\n\n  useEffect(() => {\n    // collapse all titles\n    if (hotTable.current) {\n      hotTable.current.hotInstance.getPlugin(\"collapsibleColumns\").collapseAll();\n\n      hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").hideColumns(hiddenColumnArr);\n      hotTable.current.hotInstance.render();\n    }\n  });\n\n  const testAfterChange = (changes) => {\n    if (!changes) return;\n    let [row, col, preValue, afterValue] = changes[0];\n    if (preValue === afterValue) return;\n    alert(`value at row: ${row}, col: ${col} has changed from ${preValue} to ${afterValue}`);\n  }\n\n  const resetTable = () => {\n    // reset the table in to default condition\n    let prevHiddenColumn = hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").getHiddenColumns();\n    hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").showColumns(prevHiddenColumn);\n  }\n\n  const convertCategoryToColumn = () => {\n    if (!hiddenCategoryArr) {\n      setHiddenColumnArr([]);\n      return;\n    }\n    let newHiddenColumn = [];\n    let index = 0;\n    Object.entries(tableTitle).forEach(([key, value], _) => {\n      if (hiddenCategoryArr.includes(key)) {\n        newHiddenColumn = newHiddenColumn.concat(Array.from({ length: value.length }, (_, i) => i + index));\n      }\n      index += value.length;\n    });\n    setHiddenColumnArr(newHiddenColumn);\n  }\n\n  const hideColumnBasedOnUser = (userType) => {\n    // change active user\n    setActiveUser(userType);\n\n    // hide column based on its corresponding userType\n    hiddenCategoryArr = [];\n    hideColumnBasedOnSelect(userGroup[userType]);\n  };\n\n  const hideColumnBasedOnSelect = (titles, individualFlag = false) => {\n    if (!hotTable.current) return;\n    resetTable();\n\n    if (individualFlag) {\n      let title = titles[0];\n      let index = Object.keys(tableTitle).indexOf(title);\n      let currentElement = document.getElementById(`title-${index}`);\n      if (hiddenCategoryArr.includes(title)) {\n        const tempIndex = hiddenCategoryArr.indexOf(title);\n        if (tempIndex > -1) {\n          hiddenCategoryArr.splice(tempIndex, 1);\n          currentElement.classList.add('active');\n        }\n      } else {\n        hiddenCategoryArr.push(title);\n        currentElement.classList.remove('active');\n      }\n    } else {\n      Object.keys(tableTitle).forEach((title, index) => {\n        let currentElement = document.getElementById(`title-${index}`);\n        if (titles.includes(title)) {\n          if (hiddenCategoryArr.includes(title)) {\n            const tempIndex = hiddenCategoryArr.indexOf(title);\n            if (tempIndex > -1) {\n              hiddenCategoryArr.splice(tempIndex, 1);\n              currentElement.classList.add('active');\n            }\n          } else {\n            hiddenCategoryArr.push(title);\n            currentElement.classList.remove('active');\n          }\n        } else {\n          currentElement.classList.add('active');\n        }\n      });\n    }\n    convertCategoryToColumn();\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h2 className=\"app-title\">M&A Data Demo</h2>\n      <div className=\"user-role-group\">\n        <p>click below buttons to switch between different user types</p>\n        {\n          Object.keys(userGroup).map((key) => {\n            return <div className={`app-button ${key === activeUser ? \"active\" : \"\"}`} key={key} onClick={() => hideColumnBasedOnUser(key)}>{key}</div>;\n          })\n        }\n        <p className=\"current-user\">Current User is {activeUser}</p>\n      </div>\n      <div className=\"table-column-group\">\n        <p>click below buttons to hide certain column</p>\n        {\n          Object.keys(tableTitle).map((key, index) => {\n            return <div className=\"app-button active\" id={`title-${index}`} key={key} onClick={() => hideColumnBasedOnSelect([key], true)}>{key}</div>;\n          })\n        }\n      </div>\n      <HotTable\n        id=\"app-table\"\n        ref={hotTable}\n        data={cleanData}\n        height={500}\n        width={\"100%\"}\n        colWidths={250}\n        search={true}\n        nestedHeaders={nestedHeaders}\n        collapsibleColumns={true}\n        dropdownMenu={true}\n        multiColumnSorting={true}\n        filters={true}\n        rowHeaders={true}\n        fixedColumnsLeft={1}\n        manualColumnResize={true}\n        manualRowResize={true}\n        manualRowMove={true}\n        hiddenColumns={true}\n        afterChange={(changes) => testAfterChange(changes)}\n        licenseKey=\"non-commercial-and-evaluation\">\n\n        {/* <HotColumn data={1} readOnly={true} /> */}\n\n      </HotTable>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}