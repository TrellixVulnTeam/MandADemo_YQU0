{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { configCheckIfParametersNotInConflict, configValueFromParam, configValueFromParamCheck, validateNumberToBeAtLeast, validateNumberToBeAtMost } from './ArgumentSanitization';\nimport { defaultParseToDateTime } from './DateTimeDefault';\nimport { instanceOfSimpleDate } from './DateTimeHelper';\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\nimport { ConfigValueEmpty, ExpectedValueOfTypeError } from './errors';\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\nimport { HyperFormula } from './HyperFormula';\nvar PossibleGPUModeString = ['gpu', 'cpu', 'dev'];\nvar privatePool = new WeakMap();\nexport var Config = /*#__PURE__*/function () {\n  function Config() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        accentSensitive = _ref.accentSensitive,\n        binarySearchThreshold = _ref.binarySearchThreshold,\n        caseSensitive = _ref.caseSensitive,\n        caseFirst = _ref.caseFirst,\n        chooseAddressMappingPolicy = _ref.chooseAddressMappingPolicy,\n        currencySymbol = _ref.currencySymbol,\n        dateFormats = _ref.dateFormats,\n        decimalSeparator = _ref.decimalSeparator,\n        evaluateNullToZero = _ref.evaluateNullToZero,\n        functionArgSeparator = _ref.functionArgSeparator,\n        functionPlugins = _ref.functionPlugins,\n        gpujs = _ref.gpujs,\n        gpuMode = _ref.gpuMode,\n        ignorePunctuation = _ref.ignorePunctuation,\n        leapYear1900 = _ref.leapYear1900,\n        localeLang = _ref.localeLang,\n        language = _ref.language,\n        licenseKey = _ref.licenseKey,\n        matchWholeCell = _ref.matchWholeCell,\n        arrayColumnSeparator = _ref.arrayColumnSeparator,\n        arrayRowSeparator = _ref.arrayRowSeparator,\n        maxRows = _ref.maxRows,\n        maxColumns = _ref.maxColumns,\n        nullYear = _ref.nullYear,\n        nullDate = _ref.nullDate,\n        parseDateTime = _ref.parseDateTime,\n        precisionEpsilon = _ref.precisionEpsilon,\n        precisionRounding = _ref.precisionRounding,\n        stringifyDateTime = _ref.stringifyDateTime,\n        stringifyDuration = _ref.stringifyDuration,\n        smartRounding = _ref.smartRounding,\n        timeFormats = _ref.timeFormats,\n        thousandSeparator = _ref.thousandSeparator,\n        useArrayArithmetic = _ref.useArrayArithmetic,\n        useStats = _ref.useStats,\n        undoLimit = _ref.undoLimit,\n        useColumnIndex = _ref.useColumnIndex,\n        useRegularExpressions = _ref.useRegularExpressions,\n        useWildcards = _ref.useWildcards;\n\n    _classCallCheck(this, Config);\n\n    this.useArrayArithmetic = configValueFromParam(useArrayArithmetic, 'boolean', 'useArrayArithmetic');\n    this.accentSensitive = configValueFromParam(accentSensitive, 'boolean', 'accentSensitive');\n    this.caseSensitive = configValueFromParam(caseSensitive, 'boolean', 'caseSensitive');\n    this.caseFirst = configValueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\n    this.ignorePunctuation = configValueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\n    this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\n    this.dateFormats = _toConsumableArray(configValueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats'));\n    this.timeFormats = _toConsumableArray(configValueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats'));\n    this.functionArgSeparator = configValueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\n    this.decimalSeparator = configValueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\n    this.language = configValueFromParam(language, 'string', 'language');\n    this.licenseKey = configValueFromParam(licenseKey, 'string', 'licenseKey');\n    this.thousandSeparator = configValueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\n    this.arrayColumnSeparator = configValueFromParam(arrayColumnSeparator, [',', ';'], 'arrayColumnSeparator');\n    this.arrayRowSeparator = configValueFromParam(arrayRowSeparator, [';', '|'], 'arrayRowSeparator');\n    this.localeLang = configValueFromParam(localeLang, 'string', 'localeLang');\n    this.functionPlugins = _toConsumableArray(functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins);\n    this.gpujs = gpujs !== null && gpujs !== void 0 ? gpujs : Config.defaultConfig.gpujs;\n    this.gpuMode = configValueFromParam(gpuMode, PossibleGPUModeString, 'gpuMode');\n    this.smartRounding = configValueFromParam(smartRounding, 'boolean', 'smartRounding');\n    this.evaluateNullToZero = configValueFromParam(evaluateNullToZero, 'boolean', 'evaluateNullToZero');\n    this.nullYear = configValueFromParam(nullYear, 'number', 'nullYear');\n    validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\n    validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\n    this.precisionRounding = configValueFromParam(precisionRounding, 'number', 'precisionRounding');\n    validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\n    this.precisionEpsilon = configValueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\n    validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\n    this.useColumnIndex = configValueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\n    this.useStats = configValueFromParam(useStats, 'boolean', 'useStats');\n    this.binarySearchThreshold = configValueFromParam(binarySearchThreshold, 'number', 'binarySearchThreshold');\n    validateNumberToBeAtLeast(this.binarySearchThreshold, 'binarySearchThreshold', 1);\n    this.parseDateTime = configValueFromParam(parseDateTime, 'function', 'parseDateTime');\n    this.stringifyDateTime = configValueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\n    this.stringifyDuration = configValueFromParam(stringifyDuration, 'function', 'stringifyDuration');\n    this.translationPackage = HyperFormula.getLanguage(this.language);\n    this.errorMapping = this.translationPackage.buildErrorMapping();\n    this.nullDate = configValueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\n    this.leapYear1900 = configValueFromParam(leapYear1900, 'boolean', 'leapYear1900');\n    this.undoLimit = configValueFromParam(undoLimit, 'number', 'undoLimit');\n    this.useRegularExpressions = configValueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\n    this.useWildcards = configValueFromParam(useWildcards, 'boolean', 'useWildcards');\n    this.matchWholeCell = configValueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\n    validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\n    this.maxRows = configValueFromParam(maxRows, 'number', 'maxRows');\n    validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\n    this.maxColumns = configValueFromParam(maxColumns, 'number', 'maxColumns');\n    this.currencySymbol = _toConsumableArray(configValueFromParamCheck(currencySymbol, Array.isArray, 'array', 'currencySymbol'));\n    this.currencySymbol.forEach(function (val) {\n      if (typeof val !== 'string') {\n        throw new ExpectedValueOfTypeError('string[]', 'currencySymbol');\n      }\n\n      if (val === '') {\n        throw new ConfigValueEmpty('currencySymbol');\n      }\n    });\n    validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\n    this.warnDeprecatedIfUsed(binarySearchThreshold, 'binarySearchThreshold', '1.1');\n    privatePool.set(this, {\n      licenseKeyValidityState: checkLicenseKeyValidity(this.licenseKey)\n    });\n    configCheckIfParametersNotInConflict({\n      value: this.decimalSeparator,\n      name: 'decimalSeparator'\n    }, {\n      value: this.functionArgSeparator,\n      name: 'functionArgSeparator'\n    }, {\n      value: this.thousandSeparator,\n      name: 'thousandSeparator'\n    });\n    configCheckIfParametersNotInConflict({\n      value: this.arrayRowSeparator,\n      name: 'arrayRowSeparator'\n    }, {\n      value: this.arrayColumnSeparator,\n      name: 'arrayColumnSeparator'\n    });\n  }\n  /**\n   * Proxied property to its private counterpart. This makes the property\n   * as accessible as the other Config options but without ability to change the value.\n   *\n   * @internal\n   */\n\n\n  _createClass(Config, [{\n    key: \"licenseKeyValidityState\",\n    get: function get() {\n      return privatePool.get(this).licenseKeyValidityState;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var ret = {};\n\n      for (var key in Config.defaultConfig) {\n        var val = this[key];\n\n        if (Array.isArray(val)) {\n          ret[key] = _toConsumableArray(val);\n        } else {\n          ret[key] = val;\n        }\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"mergeConfig\",\n    value: function mergeConfig(init) {\n      var mergedConfig = Object.assign({}, this.getConfig(), init);\n      return new Config(mergedConfig);\n    }\n  }, {\n    key: \"warnDeprecatedIfUsed\",\n    value: function warnDeprecatedIfUsed(inputValue, paramName, fromVersion, replacementName) {\n      if (inputValue !== undefined) {\n        if (replacementName === undefined) {\n          console.warn(\"\".concat(paramName, \" option is deprecated since \").concat(fromVersion));\n        } else {\n          console.warn(\"\".concat(paramName, \" option is deprecated since \").concat(fromVersion, \", please use \").concat(replacementName));\n        }\n      }\n    }\n  }]);\n\n  return Config;\n}();\nConfig.defaultConfig = {\n  accentSensitive: false,\n  binarySearchThreshold: 20,\n  currencySymbol: ['$'],\n  caseSensitive: false,\n  caseFirst: 'lower',\n  chooseAddressMappingPolicy: new AlwaysDense(),\n  dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\n  decimalSeparator: '.',\n  evaluateNullToZero: false,\n  functionArgSeparator: ',',\n  functionPlugins: [],\n  gpujs: undefined,\n  gpuMode: 'gpu',\n  ignorePunctuation: false,\n  language: 'enGB',\n  licenseKey: '',\n  leapYear1900: false,\n  localeLang: 'en',\n  matchWholeCell: true,\n  arrayColumnSeparator: ',',\n  arrayRowSeparator: ';',\n  maxRows: 40000,\n  maxColumns: 18278,\n  nullYear: 30,\n  nullDate: {\n    year: 1899,\n    month: 12,\n    day: 30\n  },\n  parseDateTime: defaultParseToDateTime,\n  precisionEpsilon: 1e-13,\n  precisionRounding: 14,\n  smartRounding: true,\n  stringifyDateTime: defaultStringifyDateTime,\n  stringifyDuration: defaultStringifyDuration,\n  timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\n  thousandSeparator: '',\n  undoLimit: 20,\n  useRegularExpressions: false,\n  useWildcards: true,\n  useColumnIndex: false,\n  useStats: false,\n  useArrayArithmetic: false\n};","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/Config.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","configCheckIfParametersNotInConflict","configValueFromParam","configValueFromParamCheck","validateNumberToBeAtLeast","validateNumberToBeAtMost","defaultParseToDateTime","instanceOfSimpleDate","AlwaysDense","ConfigValueEmpty","ExpectedValueOfTypeError","defaultStringifyDateTime","defaultStringifyDuration","checkLicenseKeyValidity","HyperFormula","PossibleGPUModeString","privatePool","WeakMap","Config","_ref","arguments","undefined","accentSensitive","binarySearchThreshold","caseSensitive","caseFirst","chooseAddressMappingPolicy","currencySymbol","dateFormats","decimalSeparator","evaluateNullToZero","functionArgSeparator","functionPlugins","gpujs","gpuMode","ignorePunctuation","leapYear1900","localeLang","language","licenseKey","matchWholeCell","arrayColumnSeparator","arrayRowSeparator","maxRows","maxColumns","nullYear","nullDate","parseDateTime","precisionEpsilon","precisionRounding","stringifyDateTime","stringifyDuration","smartRounding","timeFormats","thousandSeparator","useArrayArithmetic","useStats","undoLimit","useColumnIndex","useRegularExpressions","useWildcards","defaultConfig","translationPackage","getLanguage","errorMapping","buildErrorMapping","forEach","val","warnDeprecatedIfUsed","set","licenseKeyValidityState","value","get","getConfig","ret","mergeConfig","init","mergedConfig","assign","inputValue","paramName","fromVersion","replacementName","console","warn","concat","year","month","day"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { configCheckIfParametersNotInConflict, configValueFromParam, configValueFromParamCheck, validateNumberToBeAtLeast, validateNumberToBeAtMost } from './ArgumentSanitization';\nimport { defaultParseToDateTime } from './DateTimeDefault';\nimport { instanceOfSimpleDate } from './DateTimeHelper';\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\nimport { ConfigValueEmpty, ExpectedValueOfTypeError } from './errors';\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\nimport { HyperFormula } from './HyperFormula';\nvar PossibleGPUModeString = ['gpu', 'cpu', 'dev'];\nvar privatePool = new WeakMap();\nexport var Config = /*#__PURE__*/function () {\n  function Config() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        accentSensitive = _ref.accentSensitive,\n        binarySearchThreshold = _ref.binarySearchThreshold,\n        caseSensitive = _ref.caseSensitive,\n        caseFirst = _ref.caseFirst,\n        chooseAddressMappingPolicy = _ref.chooseAddressMappingPolicy,\n        currencySymbol = _ref.currencySymbol,\n        dateFormats = _ref.dateFormats,\n        decimalSeparator = _ref.decimalSeparator,\n        evaluateNullToZero = _ref.evaluateNullToZero,\n        functionArgSeparator = _ref.functionArgSeparator,\n        functionPlugins = _ref.functionPlugins,\n        gpujs = _ref.gpujs,\n        gpuMode = _ref.gpuMode,\n        ignorePunctuation = _ref.ignorePunctuation,\n        leapYear1900 = _ref.leapYear1900,\n        localeLang = _ref.localeLang,\n        language = _ref.language,\n        licenseKey = _ref.licenseKey,\n        matchWholeCell = _ref.matchWholeCell,\n        arrayColumnSeparator = _ref.arrayColumnSeparator,\n        arrayRowSeparator = _ref.arrayRowSeparator,\n        maxRows = _ref.maxRows,\n        maxColumns = _ref.maxColumns,\n        nullYear = _ref.nullYear,\n        nullDate = _ref.nullDate,\n        parseDateTime = _ref.parseDateTime,\n        precisionEpsilon = _ref.precisionEpsilon,\n        precisionRounding = _ref.precisionRounding,\n        stringifyDateTime = _ref.stringifyDateTime,\n        stringifyDuration = _ref.stringifyDuration,\n        smartRounding = _ref.smartRounding,\n        timeFormats = _ref.timeFormats,\n        thousandSeparator = _ref.thousandSeparator,\n        useArrayArithmetic = _ref.useArrayArithmetic,\n        useStats = _ref.useStats,\n        undoLimit = _ref.undoLimit,\n        useColumnIndex = _ref.useColumnIndex,\n        useRegularExpressions = _ref.useRegularExpressions,\n        useWildcards = _ref.useWildcards;\n\n    _classCallCheck(this, Config);\n\n    this.useArrayArithmetic = configValueFromParam(useArrayArithmetic, 'boolean', 'useArrayArithmetic');\n    this.accentSensitive = configValueFromParam(accentSensitive, 'boolean', 'accentSensitive');\n    this.caseSensitive = configValueFromParam(caseSensitive, 'boolean', 'caseSensitive');\n    this.caseFirst = configValueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\n    this.ignorePunctuation = configValueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\n    this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\n    this.dateFormats = _toConsumableArray(configValueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats'));\n    this.timeFormats = _toConsumableArray(configValueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats'));\n    this.functionArgSeparator = configValueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\n    this.decimalSeparator = configValueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\n    this.language = configValueFromParam(language, 'string', 'language');\n    this.licenseKey = configValueFromParam(licenseKey, 'string', 'licenseKey');\n    this.thousandSeparator = configValueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\n    this.arrayColumnSeparator = configValueFromParam(arrayColumnSeparator, [',', ';'], 'arrayColumnSeparator');\n    this.arrayRowSeparator = configValueFromParam(arrayRowSeparator, [';', '|'], 'arrayRowSeparator');\n    this.localeLang = configValueFromParam(localeLang, 'string', 'localeLang');\n    this.functionPlugins = _toConsumableArray(functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins);\n    this.gpujs = gpujs !== null && gpujs !== void 0 ? gpujs : Config.defaultConfig.gpujs;\n    this.gpuMode = configValueFromParam(gpuMode, PossibleGPUModeString, 'gpuMode');\n    this.smartRounding = configValueFromParam(smartRounding, 'boolean', 'smartRounding');\n    this.evaluateNullToZero = configValueFromParam(evaluateNullToZero, 'boolean', 'evaluateNullToZero');\n    this.nullYear = configValueFromParam(nullYear, 'number', 'nullYear');\n    validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\n    validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\n    this.precisionRounding = configValueFromParam(precisionRounding, 'number', 'precisionRounding');\n    validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\n    this.precisionEpsilon = configValueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\n    validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\n    this.useColumnIndex = configValueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\n    this.useStats = configValueFromParam(useStats, 'boolean', 'useStats');\n    this.binarySearchThreshold = configValueFromParam(binarySearchThreshold, 'number', 'binarySearchThreshold');\n    validateNumberToBeAtLeast(this.binarySearchThreshold, 'binarySearchThreshold', 1);\n    this.parseDateTime = configValueFromParam(parseDateTime, 'function', 'parseDateTime');\n    this.stringifyDateTime = configValueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\n    this.stringifyDuration = configValueFromParam(stringifyDuration, 'function', 'stringifyDuration');\n    this.translationPackage = HyperFormula.getLanguage(this.language);\n    this.errorMapping = this.translationPackage.buildErrorMapping();\n    this.nullDate = configValueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\n    this.leapYear1900 = configValueFromParam(leapYear1900, 'boolean', 'leapYear1900');\n    this.undoLimit = configValueFromParam(undoLimit, 'number', 'undoLimit');\n    this.useRegularExpressions = configValueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\n    this.useWildcards = configValueFromParam(useWildcards, 'boolean', 'useWildcards');\n    this.matchWholeCell = configValueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\n    validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\n    this.maxRows = configValueFromParam(maxRows, 'number', 'maxRows');\n    validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\n    this.maxColumns = configValueFromParam(maxColumns, 'number', 'maxColumns');\n    this.currencySymbol = _toConsumableArray(configValueFromParamCheck(currencySymbol, Array.isArray, 'array', 'currencySymbol'));\n    this.currencySymbol.forEach(function (val) {\n      if (typeof val !== 'string') {\n        throw new ExpectedValueOfTypeError('string[]', 'currencySymbol');\n      }\n\n      if (val === '') {\n        throw new ConfigValueEmpty('currencySymbol');\n      }\n    });\n    validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\n    this.warnDeprecatedIfUsed(binarySearchThreshold, 'binarySearchThreshold', '1.1');\n    privatePool.set(this, {\n      licenseKeyValidityState: checkLicenseKeyValidity(this.licenseKey)\n    });\n    configCheckIfParametersNotInConflict({\n      value: this.decimalSeparator,\n      name: 'decimalSeparator'\n    }, {\n      value: this.functionArgSeparator,\n      name: 'functionArgSeparator'\n    }, {\n      value: this.thousandSeparator,\n      name: 'thousandSeparator'\n    });\n    configCheckIfParametersNotInConflict({\n      value: this.arrayRowSeparator,\n      name: 'arrayRowSeparator'\n    }, {\n      value: this.arrayColumnSeparator,\n      name: 'arrayColumnSeparator'\n    });\n  }\n  /**\n   * Proxied property to its private counterpart. This makes the property\n   * as accessible as the other Config options but without ability to change the value.\n   *\n   * @internal\n   */\n\n\n  _createClass(Config, [{\n    key: \"licenseKeyValidityState\",\n    get: function get() {\n      return privatePool.get(this).licenseKeyValidityState;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var ret = {};\n\n      for (var key in Config.defaultConfig) {\n        var val = this[key];\n\n        if (Array.isArray(val)) {\n          ret[key] = _toConsumableArray(val);\n        } else {\n          ret[key] = val;\n        }\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"mergeConfig\",\n    value: function mergeConfig(init) {\n      var mergedConfig = Object.assign({}, this.getConfig(), init);\n      return new Config(mergedConfig);\n    }\n  }, {\n    key: \"warnDeprecatedIfUsed\",\n    value: function warnDeprecatedIfUsed(inputValue, paramName, fromVersion, replacementName) {\n      if (inputValue !== undefined) {\n        if (replacementName === undefined) {\n          console.warn(\"\".concat(paramName, \" option is deprecated since \").concat(fromVersion));\n        } else {\n          console.warn(\"\".concat(paramName, \" option is deprecated since \").concat(fromVersion, \", please use \").concat(replacementName));\n        }\n      }\n    }\n  }]);\n\n  return Config;\n}();\nConfig.defaultConfig = {\n  accentSensitive: false,\n  binarySearchThreshold: 20,\n  currencySymbol: ['$'],\n  caseSensitive: false,\n  caseFirst: 'lower',\n  chooseAddressMappingPolicy: new AlwaysDense(),\n  dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\n  decimalSeparator: '.',\n  evaluateNullToZero: false,\n  functionArgSeparator: ',',\n  functionPlugins: [],\n  gpujs: undefined,\n  gpuMode: 'gpu',\n  ignorePunctuation: false,\n  language: 'enGB',\n  licenseKey: '',\n  leapYear1900: false,\n  localeLang: 'en',\n  matchWholeCell: true,\n  arrayColumnSeparator: ',',\n  arrayRowSeparator: ';',\n  maxRows: 40000,\n  maxColumns: 18278,\n  nullYear: 30,\n  nullDate: {\n    year: 1899,\n    month: 12,\n    day: 30\n  },\n  parseDateTime: defaultParseToDateTime,\n  precisionEpsilon: 1e-13,\n  precisionRounding: 14,\n  smartRounding: true,\n  stringifyDateTime: defaultStringifyDateTime,\n  stringifyDuration: defaultStringifyDuration,\n  timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\n  thousandSeparator: '',\n  undoLimit: 20,\n  useRegularExpressions: false,\n  useWildcards: true,\n  useColumnIndex: false,\n  useStats: false,\n  useArrayArithmetic: false\n};"]},"metadata":{},"sourceType":"module"}