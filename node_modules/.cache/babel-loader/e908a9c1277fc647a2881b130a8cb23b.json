{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, ErrorType } from './Cell';\nimport { ContentChanges } from './ContentChanges';\nimport { ArrayVertex, RangeVertex } from './DependencyGraph';\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\nimport { InterpreterState } from './interpreter/InterpreterState';\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\nimport { StatType } from './statistics';\nexport var Evaluator = /*#__PURE__*/function () {\n  function Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch) {\n    _classCallCheck(this, Evaluator);\n\n    this.config = config;\n    this.stats = stats;\n    this.interpreter = interpreter;\n    this.lazilyTransformingAstService = lazilyTransformingAstService;\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n  }\n\n  _createClass(Evaluator, [{\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      this.stats.start(StatType.TOP_SORT);\n\n      var _this$dependencyGraph = this.dependencyGraph.topSortWithScc(),\n          sorted = _this$dependencyGraph.sorted,\n          cycled = _this$dependencyGraph.cycled;\n\n      this.stats.end(StatType.TOP_SORT);\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this.recomputeFormulas(cycled, sorted);\n      });\n    }\n  }, {\n    key: \"partialRun\",\n    value: function partialRun(vertices) {\n      var _this2 = this;\n\n      var changes = ContentChanges.empty();\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this2.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, function (vertex) {\n          if (vertex instanceof FormulaVertex) {\n            var currentValue = vertex.isComputed() ? vertex.getCellValue() : undefined;\n\n            var newCellValue = _this2.recomputeFormulaVertexValue(vertex);\n\n            if (newCellValue !== currentValue) {\n              var address = vertex.getAddress(_this2.lazilyTransformingAstService);\n              changes.addChange(newCellValue, address);\n\n              _this2.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\n\n              return true;\n            }\n\n            return false;\n          } else if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n            return true;\n          } else {\n            return true;\n          }\n        }, function (vertex) {\n          if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n          } else if (vertex instanceof FormulaVertex) {\n            var address = vertex.getAddress(_this2.lazilyTransformingAstService);\n\n            _this2.columnSearch.remove(getRawValue(vertex.valueOrUndef()), address);\n\n            var error = new CellError(ErrorType.CYCLE, undefined, vertex);\n            vertex.setCellValue(error);\n            changes.addChange(error, address);\n          }\n        });\n      });\n      return changes;\n    }\n  }, {\n    key: \"runAndForget\",\n    value: function runAndForget(ast, address, dependencies) {\n      var _this3 = this;\n\n      var tmpRanges = [];\n\n      var _iterator = _createForOfIteratorHelper(absolutizeDependencies(dependencies, address)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n\n          if (dep instanceof AbsoluteCellRange) {\n            var range = dep;\n\n            if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\n              var rangeVertex = new RangeVertex(range);\n              this.dependencyGraph.rangeMapping.setRange(rangeVertex);\n              tmpRanges.push(rangeVertex);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var ret = this.evaluateAstToCellValue(ast, new InterpreterState(address, this.config.useArrayArithmetic));\n      tmpRanges.forEach(function (rangeVertex) {\n        _this3.dependencyGraph.rangeMapping.removeRange(rangeVertex);\n      });\n      return ret;\n    }\n    /**\n     * Recalculates formulas in the topological sort order\n     */\n\n  }, {\n    key: \"recomputeFormulas\",\n    value: function recomputeFormulas(cycled, sorted) {\n      var _this4 = this;\n\n      cycled.forEach(function (vertex) {\n        if (vertex instanceof FormulaVertex) {\n          vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex));\n        }\n      });\n      sorted.forEach(function (vertex) {\n        if (vertex instanceof FormulaVertex) {\n          var newCellValue = _this4.recomputeFormulaVertexValue(vertex);\n\n          var address = vertex.getAddress(_this4.lazilyTransformingAstService);\n\n          _this4.columnSearch.add(getRawValue(newCellValue), address);\n        } else if (vertex instanceof RangeVertex) {\n          vertex.clearCache();\n        }\n      });\n    }\n  }, {\n    key: \"recomputeFormulaVertexValue\",\n    value: function recomputeFormulaVertexValue(vertex) {\n      var address = vertex.getAddress(this.lazilyTransformingAstService);\n\n      if (vertex instanceof ArrayVertex && (vertex.array.size.isRef || !this.dependencyGraph.isThereSpaceForArray(vertex))) {\n        return vertex.setNoSpace();\n      } else {\n        var formula = vertex.getFormula(this.lazilyTransformingAstService);\n        var newCellValue = this.evaluateAstToCellValue(formula, new InterpreterState(address, this.config.useArrayArithmetic, vertex));\n        return vertex.setCellValue(newCellValue);\n      }\n    }\n  }, {\n    key: \"evaluateAstToCellValue\",\n    value: function evaluateAstToCellValue(ast, state) {\n      var interpreterValue = this.interpreter.evaluateAst(ast, state);\n\n      if (interpreterValue instanceof SimpleRangeValue) {\n        return interpreterValue;\n      } else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\n        return 0;\n      } else {\n        return interpreterValue;\n      }\n    }\n  }]);\n\n  return Evaluator;\n}();","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/Evaluator.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","absolutizeDependencies","CellError","ErrorType","ContentChanges","ArrayVertex","RangeVertex","FormulaVertex","InterpreterState","EmptyValue","getRawValue","SimpleRangeValue","StatType","Evaluator","config","stats","interpreter","lazilyTransformingAstService","dependencyGraph","columnSearch","run","_this","start","TOP_SORT","_this$dependencyGraph","topSortWithScc","sorted","cycled","end","measure","EVALUATION","recomputeFormulas","partialRun","vertices","_this2","changes","empty","graph","getTopSortedWithSccSubgraphFrom","vertex","currentValue","isComputed","getCellValue","undefined","newCellValue","recomputeFormulaVertexValue","address","getAddress","addChange","change","clearCache","remove","valueOrUndef","error","CYCLE","setCellValue","runAndForget","ast","dependencies","_this3","tmpRanges","_iterator","_step","dep","range","getRange","rangeVertex","rangeMapping","setRange","push","ret","evaluateAstToCellValue","useArrayArithmetic","forEach","removeRange","_this4","add","array","size","isRef","isThereSpaceForArray","setNoSpace","formula","getFormula","state","interpreterValue","evaluateAst","evaluateNullToZero"],"mappings":"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","sourcesContent":["import \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, ErrorType } from './Cell';\nimport { ContentChanges } from './ContentChanges';\nimport { ArrayVertex, RangeVertex } from './DependencyGraph';\nimport { FormulaVertex } from './DependencyGraph/FormulaCellVertex';\nimport { InterpreterState } from './interpreter/InterpreterState';\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\nimport { StatType } from './statistics';\nexport var Evaluator = /*#__PURE__*/function () {\n  function Evaluator(config, stats, interpreter, lazilyTransformingAstService, dependencyGraph, columnSearch) {\n    _classCallCheck(this, Evaluator);\n\n    this.config = config;\n    this.stats = stats;\n    this.interpreter = interpreter;\n    this.lazilyTransformingAstService = lazilyTransformingAstService;\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n  }\n\n  _createClass(Evaluator, [{\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      this.stats.start(StatType.TOP_SORT);\n\n      var _this$dependencyGraph = this.dependencyGraph.topSortWithScc(),\n          sorted = _this$dependencyGraph.sorted,\n          cycled = _this$dependencyGraph.cycled;\n\n      this.stats.end(StatType.TOP_SORT);\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this.recomputeFormulas(cycled, sorted);\n      });\n    }\n  }, {\n    key: \"partialRun\",\n    value: function partialRun(vertices) {\n      var _this2 = this;\n\n      var changes = ContentChanges.empty();\n      this.stats.measure(StatType.EVALUATION, function () {\n        _this2.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, function (vertex) {\n          if (vertex instanceof FormulaVertex) {\n            var currentValue = vertex.isComputed() ? vertex.getCellValue() : undefined;\n\n            var newCellValue = _this2.recomputeFormulaVertexValue(vertex);\n\n            if (newCellValue !== currentValue) {\n              var address = vertex.getAddress(_this2.lazilyTransformingAstService);\n              changes.addChange(newCellValue, address);\n\n              _this2.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\n\n              return true;\n            }\n\n            return false;\n          } else if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n            return true;\n          } else {\n            return true;\n          }\n        }, function (vertex) {\n          if (vertex instanceof RangeVertex) {\n            vertex.clearCache();\n          } else if (vertex instanceof FormulaVertex) {\n            var address = vertex.getAddress(_this2.lazilyTransformingAstService);\n\n            _this2.columnSearch.remove(getRawValue(vertex.valueOrUndef()), address);\n\n            var error = new CellError(ErrorType.CYCLE, undefined, vertex);\n            vertex.setCellValue(error);\n            changes.addChange(error, address);\n          }\n        });\n      });\n      return changes;\n    }\n  }, {\n    key: \"runAndForget\",\n    value: function runAndForget(ast, address, dependencies) {\n      var _this3 = this;\n\n      var tmpRanges = [];\n\n      var _iterator = _createForOfIteratorHelper(absolutizeDependencies(dependencies, address)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n\n          if (dep instanceof AbsoluteCellRange) {\n            var range = dep;\n\n            if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\n              var rangeVertex = new RangeVertex(range);\n              this.dependencyGraph.rangeMapping.setRange(rangeVertex);\n              tmpRanges.push(rangeVertex);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var ret = this.evaluateAstToCellValue(ast, new InterpreterState(address, this.config.useArrayArithmetic));\n      tmpRanges.forEach(function (rangeVertex) {\n        _this3.dependencyGraph.rangeMapping.removeRange(rangeVertex);\n      });\n      return ret;\n    }\n    /**\n     * Recalculates formulas in the topological sort order\n     */\n\n  }, {\n    key: \"recomputeFormulas\",\n    value: function recomputeFormulas(cycled, sorted) {\n      var _this4 = this;\n\n      cycled.forEach(function (vertex) {\n        if (vertex instanceof FormulaVertex) {\n          vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex));\n        }\n      });\n      sorted.forEach(function (vertex) {\n        if (vertex instanceof FormulaVertex) {\n          var newCellValue = _this4.recomputeFormulaVertexValue(vertex);\n\n          var address = vertex.getAddress(_this4.lazilyTransformingAstService);\n\n          _this4.columnSearch.add(getRawValue(newCellValue), address);\n        } else if (vertex instanceof RangeVertex) {\n          vertex.clearCache();\n        }\n      });\n    }\n  }, {\n    key: \"recomputeFormulaVertexValue\",\n    value: function recomputeFormulaVertexValue(vertex) {\n      var address = vertex.getAddress(this.lazilyTransformingAstService);\n\n      if (vertex instanceof ArrayVertex && (vertex.array.size.isRef || !this.dependencyGraph.isThereSpaceForArray(vertex))) {\n        return vertex.setNoSpace();\n      } else {\n        var formula = vertex.getFormula(this.lazilyTransformingAstService);\n        var newCellValue = this.evaluateAstToCellValue(formula, new InterpreterState(address, this.config.useArrayArithmetic, vertex));\n        return vertex.setCellValue(newCellValue);\n      }\n    }\n  }, {\n    key: \"evaluateAstToCellValue\",\n    value: function evaluateAstToCellValue(ast, state) {\n      var interpreterValue = this.interpreter.evaluateAst(ast, state);\n\n      if (interpreterValue instanceof SimpleRangeValue) {\n        return interpreterValue;\n      } else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\n        return 0;\n      } else {\n        return interpreterValue;\n      }\n    }\n  }]);\n\n  return Evaluator;\n}();"]},"metadata":{},"sourceType":"module"}