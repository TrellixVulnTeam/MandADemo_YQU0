{"ast":null,"code":"import { NextAfterTokenWalker, nextPossibleTokensAfter } from \"../../grammar/interpreter\";\nimport { first, isUndefined } from \"../../../utils/utils\";\n\nvar ContentAssist = function () {\n  function ContentAssist() {}\n\n  ContentAssist.prototype.initContentAssist = function () {};\n\n  ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n    var startRuleGast = this.gastProductionsCache[startRuleName];\n\n    if (isUndefined(startRuleGast)) {\n      throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n    }\n\n    return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n  }; // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n\n\n  ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n    var topRuleName = first(grammarPath.ruleStack);\n    var gastProductions = this.getGAstProductions();\n    var topProduction = gastProductions[topRuleName];\n    var nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n    return nextPossibleTokenTypes;\n  };\n\n  return ContentAssist;\n}();\n\nexport { ContentAssist };","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/chevrotain/lib_esm/src/parse/parser/traits/context_assist.js"],"names":["NextAfterTokenWalker","nextPossibleTokensAfter","first","isUndefined","ContentAssist","prototype","initContentAssist","computeContentAssist","startRuleName","precedingInput","startRuleGast","gastProductionsCache","Error","tokenMatcher","maxLookahead","getNextPossibleTokenTypes","grammarPath","topRuleName","ruleStack","gastProductions","getGAstProductions","topProduction","nextPossibleTokenTypes","startWalking"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,uBAA/B,QAA8D,2BAA9D;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,sBAAnC;;AACA,IAAIC,aAAa,GAAkB,YAAY;AAC3C,WAASA,aAAT,GAAyB,CACxB;;AACDA,EAAAA,aAAa,CAACC,SAAd,CAAwBC,iBAAxB,GAA4C,YAAY,CAAG,CAA3D;;AACAF,EAAAA,aAAa,CAACC,SAAd,CAAwBE,oBAAxB,GAA+C,UAAUC,aAAV,EAAyBC,cAAzB,EAAyC;AACpF,QAAIC,aAAa,GAAG,KAAKC,oBAAL,CAA0BH,aAA1B,CAApB;;AACA,QAAIL,WAAW,CAACO,aAAD,CAAf,EAAgC;AAC5B,YAAME,KAAK,CAAC,YAAYJ,aAAZ,GAA4B,oCAA7B,CAAX;AACH;;AACD,WAAOP,uBAAuB,CAAC,CAACS,aAAD,CAAD,EAAkBD,cAAlB,EAAkC,KAAKI,YAAvC,EAAqD,KAAKC,YAA1D,CAA9B;AACH,GAND,CAJ2C,CAW3C;AACA;;;AACAV,EAAAA,aAAa,CAACC,SAAd,CAAwBU,yBAAxB,GAAoD,UAAUC,WAAV,EAAuB;AACvE,QAAIC,WAAW,GAAGf,KAAK,CAACc,WAAW,CAACE,SAAb,CAAvB;AACA,QAAIC,eAAe,GAAG,KAAKC,kBAAL,EAAtB;AACA,QAAIC,aAAa,GAAGF,eAAe,CAACF,WAAD,CAAnC;AACA,QAAIK,sBAAsB,GAAG,IAAItB,oBAAJ,CAAyBqB,aAAzB,EAAwCL,WAAxC,EAAqDO,YAArD,EAA7B;AACA,WAAOD,sBAAP;AACH,GAND;;AAOA,SAAOlB,aAAP;AACH,CArBkC,EAAnC;;AAsBA,SAASA,aAAT","sourcesContent":["import { NextAfterTokenWalker, nextPossibleTokensAfter } from \"../../grammar/interpreter\";\nimport { first, isUndefined } from \"../../../utils/utils\";\nvar ContentAssist = /** @class */ (function () {\n    function ContentAssist() {\n    }\n    ContentAssist.prototype.initContentAssist = function () { };\n    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n        var startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    };\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n        var topRuleName = first(grammarPath.ruleStack);\n        var gastProductions = this.getGAstProductions();\n        var topProduction = gastProductions[topRuleName];\n        var nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    };\n    return ContentAssist;\n}());\nexport { ContentAssist };\n//# sourceMappingURL=context_assist.js.map"]},"metadata":{},"sourceType":"module"}