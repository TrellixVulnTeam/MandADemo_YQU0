{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n\n\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { Matrix, NotComputedMatrix } from '../Matrix'; // noinspection TypeScriptPreferShortImport\n\nimport { AstNodeType } from '../parser/Ast';\nimport { ArithmeticHelper, coerceScalarToString, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\nimport { CriterionBuilder } from './Criterion';\nimport { FunctionRegistry } from './FunctionRegistry';\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nexport var Interpreter = /*#__PURE__*/function () {\n  function Interpreter(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions, serialization) {\n    _classCallCheck(this, Interpreter);\n\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.config = config;\n    this.stats = stats;\n    this.dateHelper = dateHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n    this.functionRegistry = functionRegistry;\n    this.namedExpressions = namedExpressions;\n    this.serialization = serialization;\n    this.functionRegistry.initializePlugins(this);\n    this.arithmeticHelper = new ArithmeticHelper(config, dateHelper, numberLiteralsHelper);\n    this.criterionBuilder = new CriterionBuilder(config);\n  }\n\n  _createClass(Interpreter, [{\n    key: \"evaluateAst\",\n    value: function evaluateAst(ast, formulaAddress) {\n      var val = this.evaluateAstWithoutPostprocessing(ast, formulaAddress);\n\n      if (isExtendedNumber(val)) {\n        if (isNumberOverflow(getRawValue(val))) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n        } else {\n          val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\n        }\n      }\n\n      return wrapperForAddress(val, formulaAddress);\n    }\n    /**\n     * Calculates cell value from formula abstract syntax tree\n     *\n     * @param formula - abstract syntax tree of formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n\n  }, {\n    key: \"evaluateAstWithoutPostprocessing\",\n    value: function evaluateAstWithoutPostprocessing(ast, formulaAddress) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n      switch (ast.type) {\n        case AstNodeType.EMPTY:\n          {\n            return EmptyValue;\n          }\n\n        case AstNodeType.CELL_REFERENCE:\n          {\n            var address = ast.reference.toSimpleCellAddress(formulaAddress);\n\n            if (invalidSimpleCellAddress(address)) {\n              return new CellError(ErrorType.REF, ErrorMessage.BadRef);\n            }\n\n            return this.dependencyGraph.getCellValue(address);\n          }\n\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n          {\n            return ast.value;\n          }\n\n        case AstNodeType.CONCATENATE_OP:\n          {\n            var leftResult = this.evaluateAst(ast.left, formulaAddress);\n            var rightResult = this.evaluateAst(ast.right, formulaAddress);\n            return (_a = passErrors(leftResult, rightResult)) !== null && _a !== void 0 ? _a : wrapperBinary(this.arithmeticHelper.concat, coerceScalarToString(leftResult), coerceScalarToString(rightResult));\n          }\n\n        case AstNodeType.EQUALS_OP:\n          {\n            var _leftResult = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_b = passErrors(_leftResult, _rightResult)) !== null && _b !== void 0 ? _b : this.arithmeticHelper.eq(_leftResult, _rightResult);\n          }\n\n        case AstNodeType.NOT_EQUAL_OP:\n          {\n            var _leftResult2 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult2 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_c = passErrors(_leftResult2, _rightResult2)) !== null && _c !== void 0 ? _c : this.arithmeticHelper.neq(_leftResult2, _rightResult2);\n          }\n\n        case AstNodeType.GREATER_THAN_OP:\n          {\n            var _leftResult3 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult3 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_d = passErrors(_leftResult3, _rightResult3)) !== null && _d !== void 0 ? _d : this.arithmeticHelper.gt(_leftResult3, _rightResult3);\n          }\n\n        case AstNodeType.LESS_THAN_OP:\n          {\n            var _leftResult4 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult4 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_e = passErrors(_leftResult4, _rightResult4)) !== null && _e !== void 0 ? _e : this.arithmeticHelper.lt(_leftResult4, _rightResult4);\n          }\n\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult5 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult5 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_f = passErrors(_leftResult5, _rightResult5)) !== null && _f !== void 0 ? _f : this.arithmeticHelper.geq(_leftResult5, _rightResult5);\n          }\n\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult6 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult6 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_g = passErrors(_leftResult6, _rightResult6)) !== null && _g !== void 0 ? _g : this.arithmeticHelper.leq(_leftResult6, _rightResult6);\n          }\n\n        case AstNodeType.PLUS_OP:\n          {\n            var _leftResult7 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult7 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_h = passErrors(_leftResult7, _rightResult7)) !== null && _h !== void 0 ? _h : wrapperBinary(this.arithmeticHelper.addWithEpsilon, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult7), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult7));\n          }\n\n        case AstNodeType.MINUS_OP:\n          {\n            var _leftResult8 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult8 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_j = passErrors(_leftResult8, _rightResult8)) !== null && _j !== void 0 ? _j : wrapperBinary(this.arithmeticHelper.subtract, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult8), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult8));\n          }\n\n        case AstNodeType.TIMES_OP:\n          {\n            var _leftResult9 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult9 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_k = passErrors(_leftResult9, _rightResult9)) !== null && _k !== void 0 ? _k : wrapperBinary(this.arithmeticHelper.multiply, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult9), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult9));\n          }\n\n        case AstNodeType.POWER_OP:\n          {\n            var _leftResult10 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult10 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_l = passErrors(_leftResult10, _rightResult10)) !== null && _l !== void 0 ? _l : wrapperBinary(this.arithmeticHelper.pow, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult10), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult10));\n          }\n\n        case AstNodeType.DIV_OP:\n          {\n            var _leftResult11 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult11 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_m = passErrors(_leftResult11, _rightResult11)) !== null && _m !== void 0 ? _m : wrapperBinary(this.arithmeticHelper.divide, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult11), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult11));\n          }\n\n        case AstNodeType.PLUS_UNARY_OP:\n          {\n            var result = this.evaluateAst(ast.value, formulaAddress);\n\n            if (result instanceof SimpleRangeValue) {\n              return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n            } else if (isExtendedNumber(result)) {\n              return this.arithmeticHelper.unaryPlus(result);\n            } else {\n              return result;\n            }\n          }\n\n        case AstNodeType.MINUS_UNARY_OP:\n          {\n            var _result = this.evaluateAst(ast.value, formulaAddress);\n\n            if (_result instanceof SimpleRangeValue) {\n              return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n            } else {\n              return wrapperUnary(this.arithmeticHelper.unaryMinus, this.arithmeticHelper.coerceScalarToNumberOrError(_result));\n            }\n          }\n\n        case AstNodeType.PERCENT_OP:\n          {\n            var _result2 = this.evaluateAst(ast.value, formulaAddress);\n\n            if (_result2 instanceof SimpleRangeValue) {\n              return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n            } else {\n              return wrapperUnary(this.arithmeticHelper.unaryPercent, this.arithmeticHelper.coerceScalarToNumberOrError(_result2));\n            }\n          }\n\n        case AstNodeType.FUNCTION_CALL:\n          {\n            if (this.config.licenseKeyValidityState !== \"valid\"\n            /* VALID */\n            && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\n              return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\n            }\n\n            var pluginEntry = this.functionRegistry.getFunction(ast.procedureName);\n\n            if (pluginEntry && this.config.translationPackage.isFunctionTranslated(ast.procedureName)) {\n              var _pluginEntry = _slicedToArray(pluginEntry, 2),\n                  pluginFunction = _pluginEntry[0],\n                  pluginInstance = _pluginEntry[1];\n\n              return pluginInstance[pluginFunction](ast, formulaAddress);\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\n            }\n          }\n\n        case AstNodeType.NAMED_EXPRESSION:\n          {\n            var namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, formulaAddress.sheet);\n\n            if (namedExpression) {\n              return this.dependencyGraph.getCellValue(namedExpression.address);\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\n            }\n          }\n\n        case AstNodeType.CELL_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n            var matrixVertex = this.dependencyGraph.getMatrix(range);\n\n            if (matrixVertex) {\n              var matrix = matrixVertex.matrix;\n\n              if (matrix instanceof NotComputedMatrix) {\n                throw new Error('Matrix should be already computed');\n              } else if (matrix instanceof CellError) {\n                return matrix;\n              } else if (matrix instanceof Matrix) {\n                return SimpleRangeValue.onlyNumbersDataWithRange(matrix.raw(), matrix.size, range);\n              } else {\n                throw new Error('Unknown matrix');\n              }\n            } else {\n              return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n          }\n\n        case AstNodeType.COLUMN_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range = AbsoluteColumnRange.fromColumnRange(ast, formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range, this.dependencyGraph);\n          }\n\n        case AstNodeType.ROW_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range2 = AbsoluteRowRange.fromRowRange(ast, formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range2, this.dependencyGraph);\n          }\n\n        case AstNodeType.PARENTHESIS:\n          {\n            return this.evaluateAst(ast.expression, formulaAddress);\n          }\n\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n        case AstNodeType.ERROR:\n          {\n            return ast.error;\n          }\n      }\n    }\n  }, {\n    key: \"getGpuInstance\",\n    value: function getGpuInstance() {\n      var mode = this.config.gpuMode;\n      var gpujs = this.config.gpujs;\n\n      if (gpujs === undefined) {\n        throw Error('Cannot instantiate GPU.js. Constructor not provided.');\n      }\n\n      if (!this.gpu) {\n        this.gpu = new gpujs({\n          mode: mode\n        });\n      }\n\n      return this.gpu;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.gpu) {\n        this.gpu.destroy();\n      }\n    }\n  }, {\n    key: \"rangeSpansOneSheet\",\n    value: function rangeSpansOneSheet(ast) {\n      return ast.start.sheet === ast.end.sheet;\n    }\n  }]);\n\n  return Interpreter;\n}();\n\nfunction passErrors(left, right) {\n  if (left instanceof CellError) {\n    return left;\n  } else if (left instanceof SimpleRangeValue) {\n    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n  } else if (right instanceof CellError) {\n    return right;\n  } else if (right instanceof SimpleRangeValue) {\n    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n  } else {\n    return undefined;\n  }\n}\n\nfunction wrapperUnary(op, a) {\n  if (a instanceof CellError) {\n    return a;\n  } else {\n    return op(a);\n  }\n}\n\nfunction wrapperBinary(op, a, b) {\n  if (a instanceof CellError) {\n    return a;\n  } else if (b instanceof CellError) {\n    return b;\n  } else {\n    return op(a, b);\n  }\n}\n\nfunction wrapperForAddress(val, adr) {\n  if (val instanceof CellError) {\n    return val.attachAddress(adr);\n  }\n\n  return val;\n}","map":{"version":3,"sources":["/Users/mingjie.wang/Documents/Uber/MandA/demo-project/node_modules/hyperformula/es/interpreter/Interpreter.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","AbsoluteCellRange","AbsoluteColumnRange","AbsoluteRowRange","CellError","ErrorType","invalidSimpleCellAddress","ErrorMessage","Matrix","NotComputedMatrix","AstNodeType","ArithmeticHelper","coerceScalarToString","fixNegativeZero","isNumberOverflow","CriterionBuilder","FunctionRegistry","cloneNumber","EmptyValue","getRawValue","isExtendedNumber","SimpleRangeValue","Interpreter","dependencyGraph","columnSearch","config","stats","dateHelper","numberLiteralsHelper","functionRegistry","namedExpressions","serialization","initializePlugins","arithmeticHelper","criterionBuilder","evaluateAst","ast","formulaAddress","val","evaluateAstWithoutPostprocessing","NUM","NaN","wrapperForAddress","_a","_b","_c","_f","_g","_h","_j","_k","_l","_m","type","EMPTY","CELL_REFERENCE","address","reference","toSimpleCellAddress","REF","BadRef","getCellValue","NUMBER","STRING","CONCATENATE_OP","leftResult","left","rightResult","right","passErrors","wrapperBinary","concat","EQUALS_OP","_leftResult","_rightResult","eq","NOT_EQUAL_OP","_leftResult2","_rightResult2","neq","GREATER_THAN_OP","_leftResult3","_rightResult3","gt","LESS_THAN_OP","_leftResult4","_rightResult4","lt","GREATER_THAN_OR_EQUAL_OP","_leftResult5","_rightResult5","geq","LESS_THAN_OR_EQUAL_OP","_leftResult6","_rightResult6","leq","PLUS_OP","_leftResult7","_rightResult7","addWithEpsilon","coerceScalarToNumberOrError","MINUS_OP","_leftResult8","_rightResult8","subtract","TIMES_OP","_leftResult9","_rightResult9","multiply","POWER_OP","_leftResult10","_rightResult10","pow","DIV_OP","_leftResult11","_rightResult11","divide","PLUS_UNARY_OP","result","VALUE","ScalarExpected","unaryPlus","MINUS_UNARY_OP","_result","wrapperUnary","unaryMinus","PERCENT_OP","_result2","unaryPercent","FUNCTION_CALL","licenseKeyValidityState","functionIsProtected","procedureName","LIC","LicenseKey","pluginEntry","getFunction","translationPackage","isFunctionTranslated","_pluginEntry","pluginFunction","pluginInstance","NAME","FunctionName","NAMED_EXPRESSION","namedExpression","nearestNamedExpression","expressionName","sheet","NamedExpressionName","CELL_RANGE","rangeSpansOneSheet","RangeManySheets","range","fromCellRange","matrixVertex","getMatrix","matrix","Error","onlyNumbersDataWithRange","raw","size","onlyRange","COLUMN_RANGE","_range","fromColumnRange","ROW_RANGE","_range2","fromRowRange","PARENTHESIS","expression","ERROR_WITH_RAW_INPUT","ERROR","error","getGpuInstance","mode","gpuMode","gpujs","undefined","gpu","destroy","start","end","op","a","b","adr","attachAddress"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { Matrix, NotComputedMatrix } from '../Matrix'; // noinspection TypeScriptPreferShortImport\n\nimport { AstNodeType } from '../parser/Ast';\nimport { ArithmeticHelper, coerceScalarToString, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\nimport { CriterionBuilder } from './Criterion';\nimport { FunctionRegistry } from './FunctionRegistry';\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nexport var Interpreter = /*#__PURE__*/function () {\n  function Interpreter(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions, serialization) {\n    _classCallCheck(this, Interpreter);\n\n    this.dependencyGraph = dependencyGraph;\n    this.columnSearch = columnSearch;\n    this.config = config;\n    this.stats = stats;\n    this.dateHelper = dateHelper;\n    this.numberLiteralsHelper = numberLiteralsHelper;\n    this.functionRegistry = functionRegistry;\n    this.namedExpressions = namedExpressions;\n    this.serialization = serialization;\n    this.functionRegistry.initializePlugins(this);\n    this.arithmeticHelper = new ArithmeticHelper(config, dateHelper, numberLiteralsHelper);\n    this.criterionBuilder = new CriterionBuilder(config);\n  }\n\n  _createClass(Interpreter, [{\n    key: \"evaluateAst\",\n    value: function evaluateAst(ast, formulaAddress) {\n      var val = this.evaluateAstWithoutPostprocessing(ast, formulaAddress);\n\n      if (isExtendedNumber(val)) {\n        if (isNumberOverflow(getRawValue(val))) {\n          return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n        } else {\n          val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\n        }\n      }\n\n      return wrapperForAddress(val, formulaAddress);\n    }\n    /**\n     * Calculates cell value from formula abstract syntax tree\n     *\n     * @param formula - abstract syntax tree of formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n\n  }, {\n    key: \"evaluateAstWithoutPostprocessing\",\n    value: function evaluateAstWithoutPostprocessing(ast, formulaAddress) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n      switch (ast.type) {\n        case AstNodeType.EMPTY:\n          {\n            return EmptyValue;\n          }\n\n        case AstNodeType.CELL_REFERENCE:\n          {\n            var address = ast.reference.toSimpleCellAddress(formulaAddress);\n\n            if (invalidSimpleCellAddress(address)) {\n              return new CellError(ErrorType.REF, ErrorMessage.BadRef);\n            }\n\n            return this.dependencyGraph.getCellValue(address);\n          }\n\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n          {\n            return ast.value;\n          }\n\n        case AstNodeType.CONCATENATE_OP:\n          {\n            var leftResult = this.evaluateAst(ast.left, formulaAddress);\n            var rightResult = this.evaluateAst(ast.right, formulaAddress);\n            return (_a = passErrors(leftResult, rightResult)) !== null && _a !== void 0 ? _a : wrapperBinary(this.arithmeticHelper.concat, coerceScalarToString(leftResult), coerceScalarToString(rightResult));\n          }\n\n        case AstNodeType.EQUALS_OP:\n          {\n            var _leftResult = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_b = passErrors(_leftResult, _rightResult)) !== null && _b !== void 0 ? _b : this.arithmeticHelper.eq(_leftResult, _rightResult);\n          }\n\n        case AstNodeType.NOT_EQUAL_OP:\n          {\n            var _leftResult2 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult2 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_c = passErrors(_leftResult2, _rightResult2)) !== null && _c !== void 0 ? _c : this.arithmeticHelper.neq(_leftResult2, _rightResult2);\n          }\n\n        case AstNodeType.GREATER_THAN_OP:\n          {\n            var _leftResult3 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult3 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_d = passErrors(_leftResult3, _rightResult3)) !== null && _d !== void 0 ? _d : this.arithmeticHelper.gt(_leftResult3, _rightResult3);\n          }\n\n        case AstNodeType.LESS_THAN_OP:\n          {\n            var _leftResult4 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult4 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_e = passErrors(_leftResult4, _rightResult4)) !== null && _e !== void 0 ? _e : this.arithmeticHelper.lt(_leftResult4, _rightResult4);\n          }\n\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult5 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult5 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_f = passErrors(_leftResult5, _rightResult5)) !== null && _f !== void 0 ? _f : this.arithmeticHelper.geq(_leftResult5, _rightResult5);\n          }\n\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n          {\n            var _leftResult6 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult6 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_g = passErrors(_leftResult6, _rightResult6)) !== null && _g !== void 0 ? _g : this.arithmeticHelper.leq(_leftResult6, _rightResult6);\n          }\n\n        case AstNodeType.PLUS_OP:\n          {\n            var _leftResult7 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult7 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_h = passErrors(_leftResult7, _rightResult7)) !== null && _h !== void 0 ? _h : wrapperBinary(this.arithmeticHelper.addWithEpsilon, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult7), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult7));\n          }\n\n        case AstNodeType.MINUS_OP:\n          {\n            var _leftResult8 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult8 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_j = passErrors(_leftResult8, _rightResult8)) !== null && _j !== void 0 ? _j : wrapperBinary(this.arithmeticHelper.subtract, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult8), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult8));\n          }\n\n        case AstNodeType.TIMES_OP:\n          {\n            var _leftResult9 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult9 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_k = passErrors(_leftResult9, _rightResult9)) !== null && _k !== void 0 ? _k : wrapperBinary(this.arithmeticHelper.multiply, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult9), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult9));\n          }\n\n        case AstNodeType.POWER_OP:\n          {\n            var _leftResult10 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult10 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_l = passErrors(_leftResult10, _rightResult10)) !== null && _l !== void 0 ? _l : wrapperBinary(this.arithmeticHelper.pow, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult10), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult10));\n          }\n\n        case AstNodeType.DIV_OP:\n          {\n            var _leftResult11 = this.evaluateAst(ast.left, formulaAddress);\n\n            var _rightResult11 = this.evaluateAst(ast.right, formulaAddress);\n\n            return (_m = passErrors(_leftResult11, _rightResult11)) !== null && _m !== void 0 ? _m : wrapperBinary(this.arithmeticHelper.divide, this.arithmeticHelper.coerceScalarToNumberOrError(_leftResult11), this.arithmeticHelper.coerceScalarToNumberOrError(_rightResult11));\n          }\n\n        case AstNodeType.PLUS_UNARY_OP:\n          {\n            var result = this.evaluateAst(ast.value, formulaAddress);\n\n            if (result instanceof SimpleRangeValue) {\n              return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n            } else if (isExtendedNumber(result)) {\n              return this.arithmeticHelper.unaryPlus(result);\n            } else {\n              return result;\n            }\n          }\n\n        case AstNodeType.MINUS_UNARY_OP:\n          {\n            var _result = this.evaluateAst(ast.value, formulaAddress);\n\n            if (_result instanceof SimpleRangeValue) {\n              return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n            } else {\n              return wrapperUnary(this.arithmeticHelper.unaryMinus, this.arithmeticHelper.coerceScalarToNumberOrError(_result));\n            }\n          }\n\n        case AstNodeType.PERCENT_OP:\n          {\n            var _result2 = this.evaluateAst(ast.value, formulaAddress);\n\n            if (_result2 instanceof SimpleRangeValue) {\n              return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n            } else {\n              return wrapperUnary(this.arithmeticHelper.unaryPercent, this.arithmeticHelper.coerceScalarToNumberOrError(_result2));\n            }\n          }\n\n        case AstNodeType.FUNCTION_CALL:\n          {\n            if (this.config.licenseKeyValidityState !== \"valid\"\n            /* VALID */\n            && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\n              return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\n            }\n\n            var pluginEntry = this.functionRegistry.getFunction(ast.procedureName);\n\n            if (pluginEntry && this.config.translationPackage.isFunctionTranslated(ast.procedureName)) {\n              var _pluginEntry = _slicedToArray(pluginEntry, 2),\n                  pluginFunction = _pluginEntry[0],\n                  pluginInstance = _pluginEntry[1];\n\n              return pluginInstance[pluginFunction](ast, formulaAddress);\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\n            }\n          }\n\n        case AstNodeType.NAMED_EXPRESSION:\n          {\n            var namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, formulaAddress.sheet);\n\n            if (namedExpression) {\n              return this.dependencyGraph.getCellValue(namedExpression.address);\n            } else {\n              return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\n            }\n          }\n\n        case AstNodeType.CELL_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n            var matrixVertex = this.dependencyGraph.getMatrix(range);\n\n            if (matrixVertex) {\n              var matrix = matrixVertex.matrix;\n\n              if (matrix instanceof NotComputedMatrix) {\n                throw new Error('Matrix should be already computed');\n              } else if (matrix instanceof CellError) {\n                return matrix;\n              } else if (matrix instanceof Matrix) {\n                return SimpleRangeValue.onlyNumbersDataWithRange(matrix.raw(), matrix.size, range);\n              } else {\n                throw new Error('Unknown matrix');\n              }\n            } else {\n              return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n          }\n\n        case AstNodeType.COLUMN_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range = AbsoluteColumnRange.fromColumnRange(ast, formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range, this.dependencyGraph);\n          }\n\n        case AstNodeType.ROW_RANGE:\n          {\n            if (!this.rangeSpansOneSheet(ast)) {\n              return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n\n            var _range2 = AbsoluteRowRange.fromRowRange(ast, formulaAddress);\n\n            return SimpleRangeValue.onlyRange(_range2, this.dependencyGraph);\n          }\n\n        case AstNodeType.PARENTHESIS:\n          {\n            return this.evaluateAst(ast.expression, formulaAddress);\n          }\n\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n        case AstNodeType.ERROR:\n          {\n            return ast.error;\n          }\n      }\n    }\n  }, {\n    key: \"getGpuInstance\",\n    value: function getGpuInstance() {\n      var mode = this.config.gpuMode;\n      var gpujs = this.config.gpujs;\n\n      if (gpujs === undefined) {\n        throw Error('Cannot instantiate GPU.js. Constructor not provided.');\n      }\n\n      if (!this.gpu) {\n        this.gpu = new gpujs({\n          mode: mode\n        });\n      }\n\n      return this.gpu;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.gpu) {\n        this.gpu.destroy();\n      }\n    }\n  }, {\n    key: \"rangeSpansOneSheet\",\n    value: function rangeSpansOneSheet(ast) {\n      return ast.start.sheet === ast.end.sheet;\n    }\n  }]);\n\n  return Interpreter;\n}();\n\nfunction passErrors(left, right) {\n  if (left instanceof CellError) {\n    return left;\n  } else if (left instanceof SimpleRangeValue) {\n    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n  } else if (right instanceof CellError) {\n    return right;\n  } else if (right instanceof SimpleRangeValue) {\n    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n  } else {\n    return undefined;\n  }\n}\n\nfunction wrapperUnary(op, a) {\n  if (a instanceof CellError) {\n    return a;\n  } else {\n    return op(a);\n  }\n}\n\nfunction wrapperBinary(op, a, b) {\n  if (a instanceof CellError) {\n    return a;\n  } else if (b instanceof CellError) {\n    return b;\n  } else {\n    return op(a, b);\n  }\n}\n\nfunction wrapperForAddress(val, adr) {\n  if (val instanceof CellError) {\n    return val.attachAddress(adr);\n  }\n\n  return val;\n}"]},"metadata":{},"sourceType":"module"}