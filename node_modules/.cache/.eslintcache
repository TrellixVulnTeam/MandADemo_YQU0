[{"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/src/index.js":"1","/Users/mingjie.wang/Documents/Uber/MandA/demo-project/src/App.js":"2"},{"size":173,"mtime":1631586976204,"results":"3","hashOfConfig":"4"},{"size":16792,"mtime":1632865823474,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1xo4isu",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/src/index.js",[],["12","13"],"/Users/mingjie.wang/Documents/Uber/MandA/demo-project/src/App.js",["14","15"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HyperFormula } from 'hyperformula';\nimport { HotTable, HotColumn } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.min.css\";\nimport \"./App.css\";\n\n// usertype / which section should be displayed\nconst userGroup = {\n  \"Admin: M&A Team\": [\n    \"Employee Unique ID (Primary Key)\",\n    \"Core People Data\",\n    \"M&A Integration Proces\",\n    \"Legal\",\n    \"Immigration\",\n    \"Mobility\",\n    \"EIB (onboard into WD)\",\n    \"Comp (M&A)\",\n    \"Welcome / POps\",\n    \"Separation / POps\",\n    \"HR\",\n    \"Cell Formula Demo\"\n  ],\n  \"Legal Team\": [\"Employee Unique ID (Primary Key)\", \"Core People Data\", \"Legal\", \"Immigration\", \"Comp (M&A)\"],\n  \"Welcome Team\": [\"Employee Unique ID (Primary Key)\", \"Core People Data\", \"Welcome / POps\"],\n  \"Separation Team\": [\"Employee Unique ID (Primary Key)\", \"Core People Data\", \"Separation / POps\"]\n}\n\nconst mockSectionData = {\n  \"Employee Unique ID (Primary Key)\": 'Employee Unique ID',\n  \"Core People Data\": 'First Name\tLast Name\tEmail\tCompany\tLegal Entity\tEmployee Status\tEmployee Type\tDate of Hire\tImmigration Supported\tOffice/\\nLocation\tRemote working\tCurrent Job Level\tCurrent Job Title\tCurrent Job Family Group\tFunction',\n  'M&A Integration Proces': 'Uber EEID\tIn Deal (Y/N)\tWAVE\tDisposition\tCohort\tReason left Deal\tDate Left',\n  'Legal': 'Gender\tDate of Birth\tRace/Ethnicity\tNationality\tSupervisor Unique ID\tSupervisor Organization\tSupervisor Email\tAIA Flag\tLegal Hold\tGarden Leave\tEmployee Transfer Decision\tTalent Release Justification\tNotification Date\tLast Day Worked\tTermination Date\tOffice location\tDisposition',\n  'Immigration': 'Immigration Supported\tImmigration Status\tVisa Expiration\tCan start on Day 1?\tEligible for Immi Garden Leave',\n  'Mobility': 'On Assignment (Y/N)\tAssignment end date\tRelocation (Y/N)',\n  'EIB (onboard into WD)': `Employee ID\tManager's Employee ID\tSupervisory Organization Reference ID\tPosition ID\tJob Posting Title\tAvailability Date\tEarliest Hire Date\tCountry (Alpha-3 Code)\tPrefix\tLegal First Name\tLegal Middle Name\tLegal Last Name\tSuffix\tPersonal Email Address\tHire Reason Code\tHire Date\tOriginal Hire Date\tEmployee Type\tContinuous Service Date\tConversion Position Start Date\tJob Profile (Job Code)\tPosition Title\tBusiness Title\tLocation\tLocation ID\tTime Type\tWork Shift\tDefault Hours\tScheduled Hours\tFTE Validation\tPay Rate Type\tCompensation Package\tCompensation Grade\tCompensation Grade ID\tCompensation Grade Profile\tCompensation Grade Profile ID\tBase Pay Plan\tBase Pay Amount\tBase Pay Currency\tBase Pay Frequency\tAllowance Plan 1\tAllowance Plan 1 Reference ID\tAllowance 1 Amount\tAllowance 1 Frequency\tBonus Plan\tBonus Plan ID\tBonus Plan Amount\tBonus Plan Percent\tPeriod Salary Plan\tPeriod Salary Plan ID\tCommission Plan\tCommission Plan ID\tCommission Plan Target Amount\tDraw Amount\tDraw Frequency\tDraw Duration\tRecoverable?\tCompany\tCompany ID\tCost Center\tCost Center ID\tMarket\tMarket ID\tLine of Business\tLine of Business ID\tPay Group\tPay Group ID\tWork Email/User Name\tContract Start Date\tContract End Date\tContract Status\tPosition Reference\tAddress Line 1\tAddress Line 2\tAddress Line 3\tAddress Line 4\tCity\tState/Region\tPostal Code\tCountry\tUse For\tOne-Time Payment Plan\tEffective Date\tScheduled Payment Date\tAmount\tCurrency\tSend to Payroll?`,\n  'Comp (M&A)': `Job Profile\tJob Family\tJob Level\tPay Rate Type`,\n  'Welcome / POps': `Email Address\tName\tPersonal Email\tEEID\tJob Title\tManager\tUber Office Location\tBase Salary\tBonus Target\tNew Hire Grant\tBridge Bonus\tRetention Bonus`,\n  'Separation / POps': `Email Address\tName\tPersonal Email\tEEID\tDisposition\tOriginal Start Date\t\"Tenured Uber \n  (Years + Quarters)\"\tCurrent Unvested Equity\tWeekly Salary\t2 weeks pay\t\"Base Severance\n  ( 4 weeks) \"\tTenure Severance\t\"Uber Severance\n  ( Base + Tenure)\"\tUber Severance less Equity\tIs equity greater than Uber severance? (greater/ Less)\tFinal Severance amount\tCOBRA amount\t6 Month Benefits Cash Payment\tLOA Flag?\tImmigration Check\tSeverance template\tHourly Rate\tHours per Week\tIntegration Bonus\tLocation\tCA or Non CA\tDate of Birth\tAge\tJob Title\tUber Severance Policy\tWARN check`,\n  'HR': `Supervisory Org\tELT\tELT+1`,\n  \"Cell Formula Demo\": 'First Value\tSecond Value\tOperation\tOutput'\n}\n\nlet allSections = []\nlet nestedHeaders = [[], []];\nlet allColumns = []\nconst generateNestedHeaders = (rawData) => {\n  let columnIndex = 0;\n  Object.entries(rawData).forEach(([key, value], index) => {\n    allSections.push(key);\n\n    let tempSplitArr = value.split('\\t');\n    nestedHeaders[0].push({\n      label: key,\n      colspan: tempSplitArr.length,\n    });\n    nestedHeaders[1] = nestedHeaders[1].concat(tempSplitArr);\n\n    tempSplitArr.forEach((col, tempI) => {\n      allColumns.push([\n        col,\n        key,\n        (key === 'Employee Unique ID (Primary Key)' || key === 'Core People Data' || (key === \"Legal\" && tempI < 5)) ? true : false,\n        columnIndex\n      ]);\n      columnIndex += 1;\n    });\n  });\n  return;\n};\ngenerateNestedHeaders(mockSectionData);\n\nconst mockRawData = [[\n  'ABC_100000\tJohn\tSmith\tjsmith@abc.com\tABC\tABC US Ltd\tActive\tEmployee \t01/01/2010\tY\tDallas, TX\tYes\t6\tData Analyst\tAnalysts\tSupport',\n  'ABC_100000\tY\t2\t\t\t\t',\n  'Male\t01/01/1970\tWhite\tAmerican\t1234\tAnalytics\tpburke@abc.com\tResult of AIA analysis\t\tNo\t\t\t\t\t\t\t',\n  'Y\tL-1A\t11/2/2022\tY\tY',\n  'Y\t12/2022\tY',\n  '545454\tABC_100000\tWFM Team - Krakow (Manas Kapoor)\t65652\tEngineer\t11/1/2021\t11/1/2021\tUSA\tMr\tJohn\tWilliam\tJohnson\t\twilliams@gmail.com\t98\t11/1/2021\t11/1/2021\tIC\t11/1/2021\t11/1/2021\t65\tEngineer\tEngineer\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t240000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Operations Engineer\tEngineering\tLevel 4\tSalary',\n  'jma@uber.com\tJim James\tjim@gmail.com\t233442\tEngineer\tJack Edwars\tSan Francisco\t150000\t35000\t250000\t120000\t12000',\n  'jma@uber.com\tJim Jones\tjim@gmail.com\t233442\t2B\t9/9/2018\t2\t100000\t3000\t6000\t11200\t5000\t16200\tY\tLess\t20100\t4000\t12000\tNA\tY\tSent\t24\t40\t2300\tSan Francisco\tCA   \t11/7/1982\t39\tEngineer II\t\tNA',\n  'WFM Team - Krakow (Manas Kapoor)\tJill Hazelbaker\tThomas Ranese',\n  '10', '26', 'Sum', '=SUM(GD1:GE1)'\n], [\n  'XYZ_100000\tRaj\tPatel\traj.patel@xyz.com\tXYZ\tXYZ Canada Sub\tActive\tContractor\t12/01/2002\tY\tQuebec, Canada\tYes\t4\tData Engineer\tEngineering\tSupport',\n  'XYZ_100000\tY\t2\t\t\t\t',\n  'Male\t08/25/1980\tAsian\tIndian\t456788\tEngineering\ttim.copling@xyz.com\t\t\tNo\t\t\t09/01/2021\t10/01/2021\t10/01/2021\t\t',\n  'N\tH-1B\t1/21/2013\tN \tNA',\n  'N\tNA\tN',\n  '678345\tXYZ_100000\tEats Support (Katarzyna Barbara Musiał)\t9781\tSales Lead\t10/15/2021\t10/15/2021\tCDA\tMrs\tLisa\tMaria\tJones\t\tJones@gmail.com\t121\t10/15/2021\t10/15/2021\tMgr\t10/15/2021\t10/15/2021\t34\tSales Lead\tGlobal Sales Lead\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t400000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Software Engineer\tEngineering\tLevel 5\tSalary',\n  'joan@uber.com\tJoan Davis\tjd1232@gmail.com\t453222\tSales Manager\tJill Beans\tSan Francisco\t150000\t45000\t250000\t10000\t12000',\n  'joan@uber.com\tJoan Williams\tjd1232@gmail.com\t453222\t1A\t10/1/2020\t1\t210000\t2300\t2600\t11000\t3000\t14000\tN\tGreater\t17800\t4000\t12000\tNA\tY\tSent\t32\t40\t2300\tChicago\tNon CA\t6/6/1988\t33\tSales Manager\t\tNA',\n  'Eats Support (Katarzyna Barbara Musiał)\tAndrew Macdonald\tAnabel Diaz',\n  '10', '26', 'Average', '=AVERAGE(GD2:GE2)'\n], [\n  'ABC_100001\tJohn2\tSmith2\tjsmith@abc.com\tABC\tABC US Ltd\tActive\tEmployee \t01/01/2010\tY\tDallas, TX\tYes\t6\tData Analyst\tAnalysts\tSupport',\n  'ABC_100000\tY\t2\t\t\t\t',\n  'Female\t01/01/1970\tWhite\tAmerican\t1234\tAnalytics\tpburke@abc.com\tResult of AIA analysis\t\tNo\t\t\t\t\t\t\t',\n  'Y\tL-1A\t11/2/2022\tY\tY',\n  'Y\t12/2022\tY',\n  '545454\tABC_100000\tWFM Team - Krakow (Manas Kapoor)\t65652\tEngineer\t11/1/2021\t11/1/2021\tUSA\tMr\tJohn\tWilliam\tJohnson\t\twilliams@gmail.com\t98\t11/1/2021\t11/1/2021\tIC\t11/1/2021\t11/1/2021\t65\tEngineer\tEngineer\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t240000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Operations Engineer\tEngineering\tLevel 4\tSalary',\n  'jma@uber.com\tJim James\tjim@gmail.com\t233442\tEngineer\tJack Edwars\tSan Francisco\t150000\t35000\t250000\t120000\t12000',\n  'jma@uber.com\tJim Jones\tjim@gmail.com\t233442\t2B\t9/9/2018\t2\t100000\t3000\t6000\t11200\t5000\t16200\tY\tLess\t20100\t4000\t12000\tNA\tY\tSent\t24\t40\t2300\tSan Francisco\tCA   \t11/7/1982\t39\tEngineer II\t\tNA',\n  'WFM Team - Krakow (Manas Kapoor)\tJill Hazelbaker\tThomas Ranese',\n  '10', '26', 'Median', '=MEDIAN(GD3:GE3)'\n], [\n  'XYZ_100001\tRaj2\tPatel2\traj.patel@xyz.com\tXYZ\tXYZ Canada Sub\tActive\tContractor\t12/01/2002\tY\tQuebec, Canada\tYes\t4\tData Engineer\tEngineering\tSupport',\n  'XYZ_100000\tY\t2\t\t\t\t',\n  'Female\t08/25/1980\tAsian\tIndian\t456788\tEngineering\ttim.copling@xyz.com\t\t\tNo\t\t\t09/01/2021\t10/01/2021\t10/01/2021\t\t',\n  'N\tH-1B\t1/21/2013\tN \tNA',\n  'N\tNA\tN',\n  '678345\tXYZ_100000\tEats Support (Katarzyna Barbara Musiał)\t9781\tSales Lead\t10/15/2021\t10/15/2021\tCDA\tMrs\tLisa\tMaria\tJones\t\tJones@gmail.com\t121\t10/15/2021\t10/15/2021\tMgr\t10/15/2021\t10/15/2021\t34\tSales Lead\tGlobal Sales Lead\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t400000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Software Engineer\tEngineering\tLevel 5\tSalary',\n  'joan@uber.com\tJoan Davis\tjd1232@gmail.com\t453222\tSales Manager\tJill Beans\tSan Francisco\t150000\t45000\t250000\t10000\t12000',\n  'joan@uber.com\tJoan Williams\tjd1232@gmail.com\t453222\t1A\t10/1/2020\t1\t210000\t2300\t2600\t11000\t3000\t14000\tN\tGreater\t17800\t4000\t12000\tNA\tY\tSent\t32\t40\t2300\tChicago\tNon CA\t6/6/1988\t33\tSales Manager\t\tNA',\n  'Eats Support (Katarzyna Barbara Musiał)\tAndrew Macdonald\tAnabel Diaz',\n  '10', '26', 'MAX', '=MAX(GD4:GE4)'\n], [\n  'ABC_100002\tJohn3\tSmith3\tjsmith@abc.com\tABC\tABC US Ltd\tActive\tEmployee \t01/01/2010\tY\tDallas, TX\tYes\t6\tData Analyst\tAnalysts\tSupport',\n  'ABC_100000\tY\t2\t\t\t\t',\n  'Male\t01/01/1970\tWhite\tAmerican\t1234\tAnalytics\tpburke@abc.com\tResult of AIA analysis\t\tNo\t\t\t\t\t\t\t',\n  'Y\tL-1A\t11/2/2022\tY\tY',\n  'Y\t12/2022\tY',\n  '545454\tABC_100000\tWFM Team - Krakow (Manas Kapoor)\t65652\tEngineer\t11/1/2021\t11/1/2021\tUSA\tMr\tJohn\tWilliam\tJohnson\t\twilliams@gmail.com\t98\t11/1/2021\t11/1/2021\tIC\t11/1/2021\t11/1/2021\t65\tEngineer\tEngineer\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t240000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Operations Engineer\tEngineering\tLevel 4\tSalary',\n  'jma@uber.com\tJim James\tjim@gmail.com\t233442\tEngineer\tJack Edwars\tSan Francisco\t150000\t35000\t250000\t120000\t12000',\n  'jma@uber.com\tJim Jones\tjim@gmail.com\t233442\t2B\t9/9/2018\t2\t100000\t3000\t6000\t11200\t5000\t16200\tY\tLess\t20100\t4000\t12000\tNA\tY\tSent\t24\t40\t2300\tSan Francisco\tCA   \t11/7/1982\t39\tEngineer II\t\tNA',\n  'WFM Team - Krakow (Manas Kapoor)\tJill Hazelbaker\tThomas Ranese',\n  '10', '26', 'MIN', '=MIN(GD5:GE5)'\n], [\n  'XYZ_100002\tRaj3\tPatel3\traj.patel@xyz.com\tXYZ\tXYZ Canada Sub\tActive\tContractor\t12/01/2002\tY\tQuebec, Canada\tYes\t4\tData Engineer\tEngineering\tSupport',\n  'XYZ_100000\tY\t2\t\t\t\t',\n  'Female\t08/25/1980\tAsian\tIndian\t456788\tEngineering\ttim.copling@xyz.com\t\t\tNo\t\t\t09/01/2021\t10/01/2021\t10/01/2021\t\t',\n  'N\tH-1B\t1/21/2013\tN \tNA',\n  'N\tNA\tN',\n  '678345\tXYZ_100000\tEats Support (Katarzyna Barbara Musiał)\t9781\tSales Lead\t10/15/2021\t10/15/2021\tCDA\tMrs\tLisa\tMaria\tJones\t\tJones@gmail.com\t121\t10/15/2021\t10/15/2021\tMgr\t10/15/2021\t10/15/2021\t34\tSales Lead\tGlobal Sales Lead\tSan Francisco\t112\tFull Time\tbi weekly\t40\t40\t40\tFull Time\t400000\t6\t654\t345\t435\t5000\t11000\tUSD\tbi weekly\tA \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t',\n  'Software Engineer\tEngineering\tLevel 5\tSalary',\n  'joan@uber.com\tJoan Davis\tjd1232@gmail.com\t453222\tSales Manager\tJill Beans\tSan Francisco\t150000\t45000\t250000\t10000\t12000',\n  'joan@uber.com\tJoan Williams\tjd1232@gmail.com\t453222\t1A\t10/1/2020\t1\t210000\t2300\t2600\t11000\t3000\t14000\tN\tGreater\t17800\t4000\t12000\tNA\tY\tSent\t32\t40\t2300\tChicago\tNon CA\t6/6/1988\t33\tSales Manager\t\tNA',\n  'Eats Support (Katarzyna Barbara Musiał)\tAndrew Macdonald\tAnabel Diaz',\n  '10', '26', 'Sum of First Value', '=SUM(GD:GD)'\n]\n]\n\nconst cleanRawData = (rawDataArr) => {\n  let cleanedData = [];\n  rawDataArr.forEach((rawData) => {\n    cleanedData.push(rawData.reduce((prev, data) => {\n      return prev.concat(data.split('\\t'));\n    }, []))\n  });\n  return cleanedData;\n};\nconst cleanData = cleanRawData(mockRawData);\n\nfunction App() {\n\n  const hotTable = useRef();\n  const [activeUser, setActiveUser] = useState('Admin: M&A Team');\n  const [activeSection, setActiveSection] = useState(\"Core People Data\");\n  const [tableHasChanged, setTableHasChanged] = useState(false);\n\n  useEffect(() => {\n    if (hotTable.current) {\n      // collapse all titles\n      // hotTable.current.hotInstance.getPlugin(\"collapsibleColumns\").collapseAll();\n\n      // get the column index that should be hidden\n      let tempHiddenArray = [];\n      allColumns.forEach(([columnName, sectionName, readOnlyIndicator, colIndex], index) => {\n        if (sectionName === activeSection || sectionName === 'Employee Unique ID (Primary Key)') {\n          return;\n        }\n        tempHiddenArray.push(index);\n      });\n      // hide the column\n      hotTable.current.hotInstance.getPlugin(\"hiddenColumns\").hideColumns(tempHiddenArray);\n      hotTable.current.hotInstance.render();\n    }\n  });\n\n  const testAfterChange = (changes) => {\n    if (!changes) return;\n    let [row, col, preValue, afterValue] = changes[0];\n    if (preValue === afterValue) return;\n    alert(`value at row: ${row}, col: ${col} has changed from ${preValue} to ${afterValue}`);\n    if (!tableHasChanged) setTableHasChanged(true);\n  }\n\n  const changeUser = (userType) => {\n    // change active user\n    setActiveUser(userType);\n    // set default column\n    (userType === 'Admin: M&A Team') ? setActiveSection(userGroup[userType][1]) : setActiveSection(userGroup[userType][2]);\n  };\n\n  const changeSection = (currentActiveSection) => {\n    // set active section\n    setActiveSection(currentActiveSection);\n  };\n\n  const customValidator = (columnName, colIndex, query, callback) => {\n    console.log(query);\n    if (columnName === \"Gender\" && (query.toLowerCase() !== \"male\" && query.toLowerCase() !== \"female\")) {\n      callback(false);\n    } else {\n      callback(true);\n    }\n  }\n\n  return (\n    <div className=\"app-container\">\n\n      <h2 className=\"app-title\">M&A Data Demo</h2>\n\n      <div className=\"user-role-group\">\n        <p>Personas / User roles</p>\n        {\n          Object.keys(userGroup).map((key) => {\n            return <div className={`app-button ${key === activeUser ? \"active\" : \"\"}`} key={key} onClick={() => changeUser(key)}>{key}</div>;\n          })\n        }\n        <p className=\"current-user\">Current User Role is {activeUser}</p>\n      </div>\n\n      <div className=\"table-column-group\">\n        <p>This user can view below sections; Click below buttons to view different section table</p>\n        {\n          userGroup[activeUser].map((key, index) => {\n            return <div className={`app-button ${index === 0 ? \"unclickable active\" : \"\"} ${key === activeSection ? \"active\" : \"\"}`} key={`section-title-${key}`} onClick={() => changeSection(key)}>{key}</div>;\n          })\n        }\n      </div>\n\n      <HotTable\n        id=\"app-table\"\n        ref={hotTable}\n        data={cleanData}\n        height={'auto'}\n        width={\"100%\"}\n        colWidths={250}\n        search={true}\n        nestedHeaders={nestedHeaders}\n        collapsibleColumns={true}\n        dropdownMenu={true}\n        multiColumnSorting={true}\n        filters={true}\n        rowHeaders={true}\n        // colHeaders={true}\n        fixedColumnsLeft={1}\n        manualColumnResize={true}\n        manualRowResize={true}\n        manualRowMove={true}\n        hiddenColumns={true}\n        formulas={{\n          engine: HyperFormula,\n        }}\n        // afterChange={(changes) => testAfterChange(changes)}\n        licenseKey=\"non-commercial-and-evaluation\">\n\n        {\n          allColumns.map(([columnName, sectionName, readOnlyIndicator, colIndex]) => {\n            return <HotColumn\n              key={`hotColumn-${colIndex}`}\n              data={colIndex}\n              readOnly={activeUser !== 'Admin: M&A Team' && readOnlyIndicator}\n              validator={(query, callback) => { customValidator(columnName, colIndex, query, callback) }}\n            />\n          })\n        }\n\n      </HotTable>\n\n      <p>Features need to implement in the future</p>\n      <div className={`app-button ${tableHasChanged ? \"active\" : \"\"}`}>Save the new / updated fields</div>\n      <div className=\"app-button\">Import from Google Sheet</div>\n      <div className=\"app-button\">Export to Google Sheet</div>\n      {/* <div className=\"app-button\">Download Data to Local</div> */}\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"16","replacedBy":"17"},{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","severity":1,"message":"21","line":2,"column":8,"nodeType":"22","messageId":"23","endLine":2,"endColumn":20},{"ruleId":"20","severity":1,"message":"24","line":188,"column":9,"nodeType":"22","messageId":"23","endLine":188,"endColumn":24},"no-native-reassign",["25"],"no-negated-in-lhs",["26"],"no-unused-vars","'Handsontable' is defined but never used.","Identifier","unusedVar","'testAfterChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]